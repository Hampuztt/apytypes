Search.setIndex({"alltitles": {"0.1.0 - 2024-05-15": [[8, "id4"]], "APyFixed": [[0, "apyfixed"], [11, "apyfixed"], [26, "apyfixed"]], "APyFixedArray": [[1, "apyfixedarray"], [13, "apyfixedarray"]], "APyFloat": [[2, "apyfloat"], [14, "apyfloat"], [27, "apyfloat"]], "APyFloatArray": [[3, "apyfloatarray"], [16, "apyfloatarray"]], "APyTypes C++ API": [[23, "apytypes-c-api"]], "Added": [[8, "added"]], "Aliases": [[7, "aliases"]], "Array functions": [[4, "array-functions"]], "Array properties": [[1, "array-properties"], [3, "array-properties"]], "Array shape manipulation": [[1, "array-shape-manipulation"], [3, "array-shape-manipulation"]], "Bit pattern information": [[0, "bit-pattern-information"], [2, "bit-pattern-information"]], "Broadcasting": [[1, "broadcasting"], [3, "broadcasting"]], "Calculations": [[2, "calculations"]], "Casting": [[2, "casting"]], "Change word length": [[0, "change-word-length"], [1, "change-word-length"], [2, "change-word-length"], [3, "change-word-length"]], "Changed": [[8, "changed"]], "Changelog": [[8, "changelog"]], "Clone the repository": [[25, "clone-the-repository"]], "Comparison": [[0, "comparison"], [1, "comparison"], [2, "comparison"], [3, "comparison"], [9, "comparison"]], "Comparison matrix": [[9, "comparison-matrix"]], "Computation times": [[29, "computation-times"], [33, "computation-times"]], "Computational performance": [[31, "computational-performance"]], "Constructor": [[0, "constructor"], [1, "constructor"], [2, "constructor"], [3, "constructor"]], "Contents:": [[6, null], [23, null], [30, null]], "Context handling": [[5, "context-handling"]], "Convenience casting methods": [[3, "convenience-casting-methods"]], "Convenience methods": [[2, "convenience-methods"]], "Convert to NumPy": [[1, "convert-to-numpy"], [3, "convert-to-numpy"]], "Creation from other types": [[0, "creation-from-other-types"], [1, "creation-from-other-types"], [2, "creation-from-other-types"], [3, "creation-from-other-types"]], "Development": [[25, "development"]], "Examples": [[28, "examples"]], "Fixed": [[8, "fixed"]], "Fixed-point libraries": [[9, "id13"]], "Floating-point libraries": [[9, "id14"]], "Fork and clone": [[25, "fork-and-clone"]], "Get bit representation": [[0, "get-bit-representation"], [2, "get-bit-representation"]], "How to cite APyTypes": [[32, "how-to-cite-apytypes"]], "Indices and tables": [[30, "indices-and-tables"]], "Inplace shifting for fixed-point": [[31, "inplace-shifting-for-fixed-point"]], "Installation": [[25, "installation"]], "Overflow modes": [[7, "overflow-modes"]], "Performance Comparison": [[9, "performance-comparison"]], "Pre-requisites": [[25, "pre-requisites"]], "Properties": [[0, "properties"], [1, "properties"], [2, "properties"], [3, "properties"]], "Publications": [[32, "publications"]], "Publications on APyTypes": [[32, "publications-on-apytypes"]], "Publications using/citing APyTypes": [[32, "publications-using-citing-apytypes"]], "Quantization and overflow handling": [[7, "quantization-and-overflow-handling"]], "Quantization modes": [[7, "quantization-modes"]], "Removed": [[8, "removed"]], "Run floating-point tests vs Berkeley TestFloat": [[25, "run-floating-point-tests-vs-berkeley-testfloat"]], "Run test suite": [[25, "run-test-suite"]], "Sign of zero for floating-point": [[7, "sign-of-zero-for-floating-point"]], "Sign of zero in floating-point addition": [[7, "id1"]], "Tranposition": [[3, "tranposition"], [3, "id1"]], "Transposition": [[1, "transposition"], [1, "id1"]], "Unreleased": [[8, "id1"]], "Update stub files": [[25, "update-stub-files"]], "Use arrays if possible": [[31, "use-arrays-if-possible"]], "Utility functions": [[7, "utility-functions"]], "Values": [[2, "values"]], "Welcome to APyTypes\u2019 documentation!": [[30, "welcome-to-apytypes-documentation"]], "Word length": [[0, "word-length"], [1, "word-length"], [2, "word-length"], [3, "word-length"]], "Word-length of fixed-point arithmetic operations": [[0, "id1"]], "apybuffer.h": [[10, "apybuffer-h"]], "apyfixed_util.h": [[12, "apyfixed-util-h"]], "apyfloat_util.h": [[15, "apyfloat-util-h"]], "apytypes Python package": [[6, "apytypes-python-package"]], "apytypes_common.h": [[17, "apytypes-common-h"]], "apytypes_scratch_vector.h": [[18, "apytypes-scratch-vector-h"]], "apytypes_simd.h": [[19, "apytypes-simd-h"]], "apytypes_util.h": [[20, "apytypes-util-h"]], "broadcast.h": [[21, "broadcast-h"]], "ieee754.h": [[22, "ieee754-h"]], "python_util.h": [[24, "python-util-h"]]}, "docnames": ["api/apyfixed", "api/apyfixedarray", "api/apyfloat", "api/apyfloatarray", "api/arrayfunctions", "api/context", "api/index", "api/quantizationoverflow", "changelog", "comparison", "cpp_api/apybuffer", "cpp_api/apyfixed", "cpp_api/apyfixed_util", "cpp_api/apyfixedarray", "cpp_api/apyfloat", "cpp_api/apyfloat_util", "cpp_api/apyfloatarray", "cpp_api/apytypes_common", "cpp_api/apytypes_scratch_vector", "cpp_api/apytypes_simd", "cpp_api/apytypes_util", "cpp_api/broadcast", "cpp_api/ieee754", "cpp_api/index", "cpp_api/python_util", "development", "examples/apyfixed", "examples/apyfloat", "examples/index", "examples/sg_execution_times", "index", "performance", "publications", "sg_execution_times"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api/apyfixed.rst", "api/apyfixedarray.rst", "api/apyfloat.rst", "api/apyfloatarray.rst", "api/arrayfunctions.rst", "api/context.rst", "api/index.rst", "api/quantizationoverflow.rst", "changelog.rst", "comparison.rst", "cpp_api/apybuffer.rst", "cpp_api/apyfixed.rst", "cpp_api/apyfixed_util.rst", "cpp_api/apyfixedarray.rst", "cpp_api/apyfloat.rst", "cpp_api/apyfloat_util.rst", "cpp_api/apyfloatarray.rst", "cpp_api/apytypes_common.rst", "cpp_api/apytypes_scratch_vector.rst", "cpp_api/apytypes_simd.rst", "cpp_api/apytypes_util.rst", "cpp_api/broadcast.rst", "cpp_api/ieee754.rst", "cpp_api/index.rst", "cpp_api/python_util.rst", "development.rst", "examples/apyfixed.rst", "examples/apyfloat.rst", "examples/index.rst", "examples/sg_execution_times.rst", "index.rst", "performance.rst", "publications.rst", "sg_execution_times.rst"], "indexentries": {"__init__() (apytypes.apyfixed method)": [[0, "apytypes.APyFixed.__init__", false]], "__init__() (apytypes.apyfixedaccumulatorcontext method)": [[5, "apytypes.APyFixedAccumulatorContext.__init__", false]], "__init__() (apytypes.apyfixedarray method)": [[1, "apytypes.APyFixedArray.__init__", false]], "__init__() (apytypes.apyfixedcastcontext method)": [[5, "apytypes.APyFixedCastContext.__init__", false]], "__init__() (apytypes.apyfloat method)": [[2, "apytypes.APyFloat.__init__", false]], "__init__() (apytypes.apyfloataccumulatorcontext method)": [[5, "apytypes.APyFloatAccumulatorContext.__init__", false]], "__init__() (apytypes.apyfloatarray method)": [[3, "apytypes.APyFloatArray.__init__", false]], "__init__() (apytypes.apyfloatquantizationcontext method)": [[5, "apytypes.APyFloatQuantizationContext.__init__", false]], "_exp_limit_bits (c++ member)": [[15, "_CPPv415_EXP_LIMIT_BITS", false]], "_exp_t_size_bits (c++ member)": [[15, "_CPPv416_EXP_T_SIZE_BITS", false]], "_exp_t_size_bytes (c++ member)": [[15, "_CPPv417_EXP_T_SIZE_BYTES", false]], "_limb_size_bits (c++ member)": [[20, "_CPPv415_LIMB_SIZE_BITS", false]], "_limb_size_bytes (c++ member)": [[20, "_CPPv416_LIMB_SIZE_BYTES", false]], "_man_limit_bits (c++ member)": [[15, "_CPPv415_MAN_LIMIT_BITS", false]], "_man_t_size_bits (c++ member)": [[15, "_CPPv416_MAN_T_SIZE_BITS", false]], "_man_t_size_bytes (c++ member)": [[15, "_CPPv417_MAN_T_SIZE_BYTES", false]], "apy_inline (c macro)": [[20, "c.APY_INLINE", false]], "apybuffer (c++ class)": [[10, "_CPPv4I00E9APyBuffer", false]], "apybuffer::_data (c++ member)": [[10, "_CPPv4N9APyBuffer5_dataE", false]], "apybuffer::_itemsize (c++ member)": [[10, "_CPPv4N9APyBuffer9_itemsizeE", false]], "apybuffer::_ndim (c++ member)": [[10, "_CPPv4N9APyBuffer5_ndimE", false]], "apybuffer::_nitems (c++ member)": [[10, "_CPPv4N9APyBuffer7_nitemsE", false]], "apybuffer::_shape (c++ member)": [[10, "_CPPv4N9APyBuffer6_shapeE", false]], "apybuffer::_strides (c++ member)": [[10, "_CPPv4N9APyBuffer8_stridesE", false]], "apybuffer::apybuffer (c++ function)": [[10, "_CPPv4N9APyBuffer9APyBufferERKNSt6vectorINSt6size_tEEENSt6size_tE", false]], "apybuffer::buffer_resize (c++ function)": [[10, "_CPPv4N9APyBuffer13buffer_resizeEKNSt6vectorINSt6size_tEEENSt6size_tE", false]], "apybuffer::get_py_buffer (c++ function)": [[10, "_CPPv4N9APyBuffer13get_py_bufferEv", false]], "apyfixed (c++ class)": [[11, "_CPPv48APyFixed", false]], "apyfixed (class in apytypes)": [[0, "apytypes.APyFixed", false]], "apyfixed::abs (c++ function)": [[11, "_CPPv4NK8APyFixed3absEv", false]], "apyfixed::apyfixed (c++ function)": [[11, "_CPPv4I0EN8APyFixed8APyFixedEii3_IT3_IT", false], [11, "_CPPv4N8APyFixed8APyFixedENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", false], [11, "_CPPv4N8APyFixed8APyFixedERK8APyFixed", false], [11, "_CPPv4N8APyFixed8APyFixedERKN2nb4int_ENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", false], [11, "_CPPv4N8APyFixed8APyFixedEii", false], [11, "_CPPv4N8APyFixed8APyFixedEiiRKNSt6vectorI9mp_limb_tEE", false], [11, "_CPPv4N8APyFixed8APyFixedEv", false]], "apyfixed::bit_pattern_to_string_dec (c++ function)": [[11, "_CPPv4NK8APyFixed25bit_pattern_to_string_decEv", false]], "apyfixed::bits (c++ function)": [[11, "_CPPv4NK8APyFixed4bitsEv", false]], "apyfixed::cast (c++ function)": [[11, "_CPPv4NK8APyFixed4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", false]], "apyfixed::cast_no_overflow (c++ function)": [[11, "_CPPv4NK8APyFixed16cast_no_overflowEii16QuantizationMode", false]], "apyfixed::frac_bits (c++ function)": [[11, "_CPPv4NK8APyFixed9frac_bitsEv", false]], "apyfixed::from_double (c++ function)": [[11, "_CPPv4N8APyFixed11from_doubleEdNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", false]], "apyfixed::from_integer (c++ function)": [[11, "_CPPv4N8APyFixed12from_integerERKN2nb4int_ENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", false]], "apyfixed::from_number (c++ function)": [[11, "_CPPv4N8APyFixed11from_numberERKN2nb6objectENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", false]], "apyfixed::from_string (c++ function)": [[11, "_CPPv4N8APyFixed11from_stringENSt6stringENSt8optionalIiEENSt8optionalIiEEiNSt8optionalIiEE", false]], "apyfixed::from_unspecified_integer (c++ function)": [[11, "_CPPv4N8APyFixed24from_unspecified_integerERKN2nb4int_E", false]], "apyfixed::get_lsbs (c++ function)": [[11, "_CPPv4NK8APyFixed8get_lsbsEv", false]], "apyfixed::increment_lsb (c++ function)": [[11, "_CPPv4N8APyFixed13increment_lsbEv", false]], "apyfixed::int_bits (c++ function)": [[11, "_CPPv4NK8APyFixed8int_bitsEv", false]], "apyfixed::is_identical (c++ function)": [[11, "_CPPv4NK8APyFixed12is_identicalERK8APyFixed", false]], "apyfixed::is_negative (c++ function)": [[11, "_CPPv4NK8APyFixed11is_negativeEv", false]], "apyfixed::is_positive (c++ function)": [[11, "_CPPv4NK8APyFixed11is_positiveEv", false]], "apyfixed::is_zero (c++ function)": [[11, "_CPPv4NK8APyFixed7is_zeroEv", false]], "apyfixed::latex (c++ function)": [[11, "_CPPv4NK8APyFixed5latexEv", false]], "apyfixed::leading_fractional_zeros (c++ function)": [[11, "_CPPv4NK8APyFixed24leading_fractional_zerosEv", false]], "apyfixed::leading_ones (c++ function)": [[11, "_CPPv4NK8APyFixed12leading_onesEv", false]], "apyfixed::leading_signs (c++ function)": [[11, "_CPPv4NK8APyFixed13leading_signsEv", false]], "apyfixed::leading_zeros (c++ function)": [[11, "_CPPv4NK8APyFixed13leading_zerosEv", false]], "apyfixed::operator double (c++ function)": [[11, "_CPPv4NK8APyFixedcvdEv", false]], "apyfixed::operator!= (c++ function)": [[11, "_CPPv4NK8APyFixedneEKd", false], [11, "_CPPv4NK8APyFixedneERK8APyFixed", false], [11, "_CPPv4NK8APyFixedneERKN2nb4int_E", false]], "apyfixed::operator* (c++ function)": [[11, "_CPPv4NK8APyFixedmlERK8APyFixed", false], [11, "_CPPv4NK8APyFixedmlERKN2nb4int_E", false]], "apyfixed::operator+ (c++ function)": [[11, "_CPPv4NK8APyFixedplERK8APyFixed", false], [11, "_CPPv4NK8APyFixedplERKN2nb4int_E", false]], "apyfixed::operator- (c++ function)": [[11, "_CPPv4NK8APyFixedmiERK8APyFixed", false], [11, "_CPPv4NK8APyFixedmiERKN2nb4int_E", false], [11, "_CPPv4NK8APyFixedmiEv", false]], "apyfixed::operator/ (c++ function)": [[11, "_CPPv4NK8APyFixeddvERK8APyFixed", false], [11, "_CPPv4NK8APyFixeddvERKN2nb4int_E", false]], "apyfixed::operator< (c++ function)": [[11, "_CPPv4NK8APyFixedltEKd", false], [11, "_CPPv4NK8APyFixedltERK8APyFixed", false], [11, "_CPPv4NK8APyFixedltERKN2nb4int_E", false]], "apyfixed::operator<< (c++ function)": [[11, "_CPPv4NK8APyFixedlsEKi", false]], "apyfixed::operator<<= (c++ function)": [[11, "_CPPv4N8APyFixedlSEKi", false]], "apyfixed::operator<= (c++ function)": [[11, "_CPPv4NK8APyFixedleEKd", false], [11, "_CPPv4NK8APyFixedleERK8APyFixed", false], [11, "_CPPv4NK8APyFixedleERKN2nb4int_E", false]], "apyfixed::operator== (c++ function)": [[11, "_CPPv4NK8APyFixedeqEKd", false], [11, "_CPPv4NK8APyFixedeqERK8APyFixed", false], [11, "_CPPv4NK8APyFixedeqERKN2nb4int_E", false]], "apyfixed::operator> (c++ function)": [[11, "_CPPv4NK8APyFixedgtEKd", false], [11, "_CPPv4NK8APyFixedgtERK8APyFixed", false], [11, "_CPPv4NK8APyFixedgtERKN2nb4int_E", false]], "apyfixed::operator>= (c++ function)": [[11, "_CPPv4NK8APyFixedgeEKd", false], [11, "_CPPv4NK8APyFixedgeERK8APyFixed", false], [11, "_CPPv4NK8APyFixedgeERKN2nb4int_E", false]], "apyfixed::operator>> (c++ function)": [[11, "_CPPv4NK8APyFixedrsEKi", false]], "apyfixed::operator>>= (c++ function)": [[11, "_CPPv4N8APyFixedrSEKi", false]], "apyfixed::positive_greater_than_equal_pow2 (c++ function)": [[11, "_CPPv4NK8APyFixed32positive_greater_than_equal_pow2Ei", false]], "apyfixed::repr (c++ function)": [[11, "_CPPv4NK8APyFixed4reprEv", false]], "apyfixed::set_from_double (c++ function)": [[11, "_CPPv4N8APyFixed15set_from_doubleEd", false]], "apyfixed::set_from_string (c++ function)": [[11, "_CPPv4N8APyFixed15set_from_stringERKNSt6stringEi", false]], "apyfixed::set_from_string_dec (c++ function)": [[11, "_CPPv4N8APyFixed19set_from_string_decERKNSt6stringE", false]], "apyfixed::set_from_string_hex (c++ function)": [[11, "_CPPv4N8APyFixed19set_from_string_hexERKNSt6stringE", false]], "apyfixed::set_from_string_oct (c++ function)": [[11, "_CPPv4N8APyFixed19set_from_string_octERKNSt6stringE", false]], "apyfixed::to_bits (c++ function)": [[11, "_CPPv4NK8APyFixed7to_bitsEv", false]], "apyfixed::to_double (c++ function)": [[11, "_CPPv4NK8APyFixed9to_doubleEv", false]], "apyfixed::to_string (c++ function)": [[11, "_CPPv4NK8APyFixed9to_stringEi", false]], "apyfixed::to_string_dec (c++ function)": [[11, "_CPPv4NK8APyFixed13to_string_decEv", false]], "apyfixed::to_string_hex (c++ function)": [[11, "_CPPv4NK8APyFixed13to_string_hexEv", false]], "apyfixed::to_string_oct (c++ function)": [[11, "_CPPv4NK8APyFixed13to_string_octEv", false]], "apyfixed::vector_size (c++ function)": [[11, "_CPPv4NK8APyFixed11vector_sizeEv", false]], "apyfixedaccumulatorcontext (c++ class)": [[17, "_CPPv426APyFixedAccumulatorContext", false]], "apyfixedaccumulatorcontext (class in apytypes)": [[5, "apytypes.APyFixedAccumulatorContext", false]], "apyfixedaccumulatorcontext::apyfixedaccumulatorcontext (c++ function)": [[17, "_CPPv4N26APyFixedAccumulatorContext26APyFixedAccumulatorContextENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", false]], "apyfixedaccumulatorcontext::current_mode (c++ member)": [[17, "_CPPv4N26APyFixedAccumulatorContext12current_modeE", false]], "apyfixedaccumulatorcontext::enter_context (c++ function)": [[17, "_CPPv4N26APyFixedAccumulatorContext13enter_contextEv", false]], "apyfixedaccumulatorcontext::exit_context (c++ function)": [[17, "_CPPv4N26APyFixedAccumulatorContext12exit_contextEv", false]], "apyfixedaccumulatorcontext::previous_mode (c++ member)": [[17, "_CPPv4N26APyFixedAccumulatorContext13previous_modeE", false]], "apyfixedaccumulatoroption (c++ struct)": [[17, "_CPPv425APyFixedAccumulatorOption", false]], "apyfixedaccumulatoroption::bits (c++ member)": [[17, "_CPPv4N25APyFixedAccumulatorOption4bitsE", false]], "apyfixedaccumulatoroption::int_bits (c++ member)": [[17, "_CPPv4N25APyFixedAccumulatorOption8int_bitsE", false]], "apyfixedaccumulatoroption::overflow (c++ member)": [[17, "_CPPv4N25APyFixedAccumulatorOption8overflowE", false]], "apyfixedaccumulatoroption::quantization (c++ member)": [[17, "_CPPv4N25APyFixedAccumulatorOption12quantizationE", false]], "apyfixedarray (c++ class)": [[13, "_CPPv413APyFixedArray", false]], "apyfixedarray (class in apytypes)": [[1, "apytypes.APyFixedArray", false]], "apyfixedarray::abs (c++ function)": [[13, "_CPPv4NK13APyFixedArray3absEv", false]], "apyfixedarray::apyfixedarray (c++ function)": [[13, "_CPPv4N13APyFixedArray13APyFixedArrayERKN2nb8sequenceENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", false], [13, "_CPPv4N13APyFixedArray13APyFixedArrayERKNSt6vectorINSt6size_tEEENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", false], [13, "_CPPv4N13APyFixedArray13APyFixedArrayERKNSt6vectorINSt6size_tEEEii", false], [13, "_CPPv4N13APyFixedArray13APyFixedArrayEv", false]], "apyfixedarray::bits (c++ function)": [[13, "_CPPv4NK13APyFixedArray4bitsEv", false]], "apyfixedarray::broadcast_to (c++ function)": [[13, "_CPPv4NK13APyFixedArray12broadcast_toEKNSt6vectorINSt6size_tEEE", false]], "apyfixedarray::broadcast_to_python (c++ function)": [[13, "_CPPv4NK13APyFixedArray19broadcast_to_pythonEKNSt7variantIN2nb5tupleEN2nb4int_EEE", false]], "apyfixedarray::cast (c++ function)": [[13, "_CPPv4NK13APyFixedArray4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", false]], "apyfixedarray::frac_bits (c++ function)": [[13, "_CPPv4NK13APyFixedArray9frac_bitsEv", false]], "apyfixedarray::from_array (c++ function)": [[13, "_CPPv4N13APyFixedArray10from_arrayERKN2nb7ndarrayIN2nb8c_contigEEENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", false]], "apyfixedarray::from_double (c++ function)": [[13, "_CPPv4N13APyFixedArray11from_doubleERKN2nb8sequenceENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", false]], "apyfixedarray::get_item (c++ function)": [[13, "_CPPv4NK13APyFixedArray8get_itemENSt6size_tE", false]], "apyfixedarray::int_bits (c++ function)": [[13, "_CPPv4NK13APyFixedArray8int_bitsEv", false]], "apyfixedarray::is_identical (c++ function)": [[13, "_CPPv4NK13APyFixedArray12is_identicalERK13APyFixedArray", false]], "apyfixedarray::matmul (c++ function)": [[13, "_CPPv4NK13APyFixedArray6matmulERK13APyFixedArray", false]], "apyfixedarray::ndim (c++ function)": [[13, "_CPPv4NK13APyFixedArray4ndimEv", false]], "apyfixedarray::operator* (c++ function)": [[13, "_CPPv4NK13APyFixedArraymlERK13APyFixedArray", false], [13, "_CPPv4NK13APyFixedArraymlERK8APyFixed", false]], "apyfixedarray::operator+ (c++ function)": [[13, "_CPPv4NK13APyFixedArrayplERK13APyFixedArray", false], [13, "_CPPv4NK13APyFixedArrayplERK8APyFixed", false]], "apyfixedarray::operator- (c++ function)": [[13, "_CPPv4NK13APyFixedArraymiERK13APyFixedArray", false], [13, "_CPPv4NK13APyFixedArraymiERK8APyFixed", false], [13, "_CPPv4NK13APyFixedArraymiEv", false]], "apyfixedarray::operator/ (c++ function)": [[13, "_CPPv4NK13APyFixedArraydvERK13APyFixedArray", false], [13, "_CPPv4NK13APyFixedArraydvERK8APyFixed", false]], "apyfixedarray::operator<< (c++ function)": [[13, "_CPPv4NK13APyFixedArraylsEKi", false]], "apyfixedarray::operator<<= (c++ function)": [[13, "_CPPv4N13APyFixedArraylSEKi", false]], "apyfixedarray::operator>> (c++ function)": [[13, "_CPPv4NK13APyFixedArrayrsEKi", false]], "apyfixedarray::operator>>= (c++ function)": [[13, "_CPPv4N13APyFixedArrayrSEKi", false]], "apyfixedarray::rdiv (c++ function)": [[13, "_CPPv4NK13APyFixedArray4rdivERK8APyFixed", false]], "apyfixedarray::repr (c++ function)": [[13, "_CPPv4NK13APyFixedArray4reprEv", false]], "apyfixedarray::reshape (c++ function)": [[13, "_CPPv4NK13APyFixedArray7reshapeEN2nb5tupleE", false]], "apyfixedarray::rsub (c++ function)": [[13, "_CPPv4NK13APyFixedArray4rsubERK8APyFixed", false]], "apyfixedarray::shape (c++ function)": [[13, "_CPPv4NK13APyFixedArray5shapeEv", false]], "apyfixedarray::size (c++ function)": [[13, "_CPPv4NK13APyFixedArray4sizeEv", false]], "apyfixedarray::squeeze (c++ function)": [[13, "_CPPv4NK13APyFixedArray7squeezeENSt8optionalINSt7variantIN2nb4int_EN2nb5tupleEEEEE", false]], "apyfixedarray::to_numpy (c++ function)": [[13, "_CPPv4NK13APyFixedArray8to_numpyEv", false]], "apyfixedarray::transpose (c++ function)": [[13, "_CPPv4NK13APyFixedArray9transposeEv", false]], "apyfixedcastcontext (c++ class)": [[17, "_CPPv419APyFixedCastContext", false]], "apyfixedcastcontext (class in apytypes)": [[5, "apytypes.APyFixedCastContext", false]], "apyfixedcastcontext::apyfixedcastcontext (c++ function)": [[17, "_CPPv4N19APyFixedCastContext19APyFixedCastContextENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEE", false]], "apyfixedcastcontext::current_mode (c++ member)": [[17, "_CPPv4N19APyFixedCastContext12current_modeE", false]], "apyfixedcastcontext::enter_context (c++ function)": [[17, "_CPPv4N19APyFixedCastContext13enter_contextEv", false]], "apyfixedcastcontext::exit_context (c++ function)": [[17, "_CPPv4N19APyFixedCastContext12exit_contextEv", false]], "apyfixedcastcontext::previous_mode (c++ member)": [[17, "_CPPv4N19APyFixedCastContext13previous_modeE", false]], "apyfixedcastoption (c++ struct)": [[17, "_CPPv418APyFixedCastOption", false]], "apyfixedcastoption::overflow (c++ member)": [[17, "_CPPv4N18APyFixedCastOption8overflowE", false]], "apyfixedcastoption::quantization (c++ member)": [[17, "_CPPv4N18APyFixedCastOption12quantizationE", false]], "apyfloat (c++ class)": [[14, "_CPPv48APyFloat", false]], "apyfloat (class in apytypes)": [[2, "apytypes.APyFloat", false]], "apyfloat::_cast (c++ function)": [[14, "_CPPv4NK8APyFloat5_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", false], [14, "_CPPv4NK8APyFloat5_castENSt7uint8_tENSt7uint8_tE5exp_tNSt8optionalI16QuantizationModeEE", false]], "apyfloat::_cast_to_double (c++ function)": [[14, "_CPPv4NK8APyFloat15_cast_to_doubleEv", false]], "apyfloat::_checked_cast (c++ function)": [[14, "_CPPv4NK8APyFloat13_checked_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", false]], "apyfloat::abs (c++ function)": [[14, "_CPPv4NK8APyFloat3absEv", false]], "apyfloat::apyfloat (c++ function)": [[14, "_CPPv4N8APyFloat8APyFloatENSt7uint8_tENSt7uint8_tE5exp_t", false], [14, "_CPPv4N8APyFloat8APyFloatENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", false], [14, "_CPPv4N8APyFloat8APyFloatERK12APyFloatDataNSt7uint8_tENSt7uint8_tE5exp_t", false], [14, "_CPPv4N8APyFloat8APyFloatEb5exp_t5man_tNSt7uint8_tENSt7uint8_tE5exp_t", false], [14, "_CPPv4N8APyFloat8APyFloatEb5exp_t5man_tNSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", false]], "apyfloat::cast (c++ function)": [[14, "_CPPv4NK8APyFloat4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI5exp_tEENSt8optionalI16QuantizationModeEE", false]], "apyfloat::cast_from_double (c++ function)": [[14, "_CPPv4NK8APyFloat16cast_from_doubleENSt7uint8_tENSt7uint8_tE5exp_t", false]], "apyfloat::cast_mantissa (c++ function)": [[14, "_CPPv4N8APyFloat13cast_mantissaENSt7uint8_tE16QuantizationMode", false]], "apyfloat::cast_mantissa_shorter (c++ function)": [[14, "_CPPv4N8APyFloat21cast_mantissa_shorterENSt7uint8_tE16QuantizationMode", false]], "apyfloat::cast_mantissa_subnormal (c++ function)": [[14, "_CPPv4N8APyFloat23cast_mantissa_subnormalENSt7uint8_tE16QuantizationMode", false]], "apyfloat::cast_no_quant (c++ function)": [[14, "_CPPv4NK8APyFloat13cast_no_quantENSt7uint8_tENSt7uint8_tE5exp_t", false], [14, "_CPPv4NK8APyFloat13cast_no_quantENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", false]], "apyfloat::cast_to_bfloat16 (c++ function)": [[14, "_CPPv4NK8APyFloat16cast_to_bfloat16ENSt8optionalI16QuantizationModeEE", false]], "apyfloat::cast_to_double (c++ function)": [[14, "_CPPv4NK8APyFloat14cast_to_doubleENSt8optionalI16QuantizationModeEE", false]], "apyfloat::cast_to_half (c++ function)": [[14, "_CPPv4NK8APyFloat12cast_to_halfENSt8optionalI16QuantizationModeEE", false]], "apyfloat::cast_to_single (c++ function)": [[14, "_CPPv4NK8APyFloat14cast_to_singleENSt8optionalI16QuantizationModeEE", false]], "apyfloat::construct_inf (c++ function)": [[14, "_CPPv4NK8APyFloat13construct_infENSt8optionalIbEE", false]], "apyfloat::construct_nan (c++ function)": [[14, "_CPPv4NK8APyFloat13construct_nanENSt8optionalIbEE5man_t", false]], "apyfloat::construct_zero (c++ function)": [[14, "_CPPv4NK8APyFloat14construct_zeroENSt8optionalIbEE", false]], "apyfloat::create_in_place (c++ function)": [[14, "_CPPv4N8APyFloat15create_in_placeEP8APyFloati5exp_t5man_tiiNSt8optionalI5exp_tEE", false]], "apyfloat::from_bits (c++ function)": [[14, "_CPPv4N8APyFloat9from_bitsEN8nanobind4int_EiiNSt8optionalI5exp_tEE", false]], "apyfloat::from_double (c++ function)": [[14, "_CPPv4N8APyFloat11from_doubleEdiiNSt8optionalI5exp_tEE", false]], "apyfloat::from_integer (c++ function)": [[14, "_CPPv4N8APyFloat12from_integerEKN2nb4int_EiiNSt8optionalI5exp_tEE", false]], "apyfloat::from_number (c++ function)": [[14, "_CPPv4N8APyFloat11from_numberERKN2nb6objectEiiNSt8optionalI5exp_tEE", false]], "apyfloat::get_bias (c++ function)": [[14, "_CPPv4NK8APyFloat8get_biasEv", false]], "apyfloat::get_bits (c++ function)": [[14, "_CPPv4NK8APyFloat8get_bitsEv", false]], "apyfloat::get_data (c++ function)": [[14, "_CPPv4NK8APyFloat8get_dataEv", false]], "apyfloat::get_exp (c++ function)": [[14, "_CPPv4NK8APyFloat7get_expEv", false]], "apyfloat::get_exp_bits (c++ function)": [[14, "_CPPv4NK8APyFloat12get_exp_bitsEv", false]], "apyfloat::get_man (c++ function)": [[14, "_CPPv4NK8APyFloat7get_manEv", false]], "apyfloat::get_man_bits (c++ function)": [[14, "_CPPv4NK8APyFloat12get_man_bitsEv", false]], "apyfloat::get_sign (c++ function)": [[14, "_CPPv4NK8APyFloat8get_signEv", false]], "apyfloat::ieee_bias (c++ function)": [[14, "_CPPv4N8APyFloat9ieee_biasENSt7uint8_tE", false]], "apyfloat::is_finite (c++ function)": [[14, "_CPPv4NK8APyFloat9is_finiteEv", false]], "apyfloat::is_identical (c++ function)": [[14, "_CPPv4NK8APyFloat12is_identicalERK8APyFloat", false]], "apyfloat::is_inf (c++ function)": [[14, "_CPPv4NK8APyFloat6is_infEv", false]], "apyfloat::is_max_exponent (c++ function)": [[14, "_CPPv4NK8APyFloat15is_max_exponentEv", false]], "apyfloat::is_nan (c++ function)": [[14, "_CPPv4NK8APyFloat6is_nanEv", false]], "apyfloat::is_normal (c++ function)": [[14, "_CPPv4NK8APyFloat9is_normalEv", false]], "apyfloat::is_subnormal (c++ function)": [[14, "_CPPv4NK8APyFloat12is_subnormalEv", false]], "apyfloat::is_zero (c++ function)": [[14, "_CPPv4NK8APyFloat7is_zeroEv", false]], "apyfloat::latex (c++ function)": [[14, "_CPPv4NK8APyFloat5latexEv", false]], "apyfloat::next_down (c++ function)": [[14, "_CPPv4NK8APyFloat9next_downEv", false]], "apyfloat::next_up (c++ function)": [[14, "_CPPv4NK8APyFloat7next_upEv", false]], "apyfloat::operator double (c++ function)": [[14, "_CPPv4NK8APyFloatcvdEv", false]], "apyfloat::operator!= (c++ function)": [[14, "_CPPv4NK8APyFloatneEKd", false], [14, "_CPPv4NK8APyFloatneERK8APyFixed", false], [14, "_CPPv4NK8APyFloatneERK8APyFloat", false]], "apyfloat::operator& (c++ function)": [[14, "_CPPv4NK8APyFloatanERK8APyFloat", false]], "apyfloat::operator* (c++ function)": [[14, "_CPPv4NK8APyFloatmlERK8APyFloat", false]], "apyfloat::operator+ (c++ function)": [[14, "_CPPv4NK8APyFloatplERK8APyFloat", false]], "apyfloat::operator+= (c++ function)": [[14, "_CPPv4N8APyFloatpLERK8APyFloat", false]], "apyfloat::operator- (c++ function)": [[14, "_CPPv4NK8APyFloatmiERK8APyFloat", false], [14, "_CPPv4NK8APyFloatmiEv", false]], "apyfloat::operator/ (c++ function)": [[14, "_CPPv4NK8APyFloatdvERK8APyFloat", false]], "apyfloat::operator< (c++ function)": [[14, "_CPPv4NK8APyFloatltEKd", false], [14, "_CPPv4NK8APyFloatltERK8APyFixed", false], [14, "_CPPv4NK8APyFloatltERK8APyFloat", false]], "apyfloat::operator<= (c++ function)": [[14, "_CPPv4NK8APyFloatleEKd", false], [14, "_CPPv4NK8APyFloatleERK8APyFixed", false], [14, "_CPPv4NK8APyFloatleERK8APyFloat", false]], "apyfloat::operator== (c++ function)": [[14, "_CPPv4NK8APyFloateqEKd", false], [14, "_CPPv4NK8APyFloateqERK8APyFixed", false], [14, "_CPPv4NK8APyFloateqERK8APyFloat", false]], "apyfloat::operator> (c++ function)": [[14, "_CPPv4NK8APyFloatgtEKd", false], [14, "_CPPv4NK8APyFloatgtERK8APyFixed", false], [14, "_CPPv4NK8APyFloatgtERK8APyFloat", false]], "apyfloat::operator>= (c++ function)": [[14, "_CPPv4NK8APyFloatgeEKd", false], [14, "_CPPv4NK8APyFloatgeERK8APyFixed", false], [14, "_CPPv4NK8APyFloatgeERK8APyFloat", false]], "apyfloat::operator^ (c++ function)": [[14, "_CPPv4NK8APyFloateoERK8APyFloat", false]], "apyfloat::operator| (c++ function)": [[14, "_CPPv4NK8APyFloatorERK8APyFloat", false]], "apyfloat::operator~ (c++ function)": [[14, "_CPPv4NK8APyFloatcoEv", false]], "apyfloat::pow (c++ function)": [[14, "_CPPv4N8APyFloat3powERK8APyFloatRK8APyFloat", false]], "apyfloat::pown (c++ function)": [[14, "_CPPv4N8APyFloat4pownERK8APyFloati", false]], "apyfloat::repr (c++ function)": [[14, "_CPPv4NK8APyFloat4reprEv", false]], "apyfloat::set_data (c++ function)": [[14, "_CPPv4N8APyFloat8set_dataERK12APyFloatData", false]], "apyfloat::set_sign (c++ function)": [[14, "_CPPv4N8APyFloat8set_signEb", false]], "apyfloat::set_to_inf (c++ function)": [[14, "_CPPv4N8APyFloat10set_to_infEv", false]], "apyfloat::set_to_nan (c++ function)": [[14, "_CPPv4N8APyFloat10set_to_nanEv", false]], "apyfloat::set_to_zero (c++ function)": [[14, "_CPPv4N8APyFloat11set_to_zeroEb", false], [14, "_CPPv4N8APyFloat11set_to_zeroEv", false]], "apyfloat::str (c++ function)": [[14, "_CPPv4NK8APyFloat3strEv", false]], "apyfloat::to_bits (c++ function)": [[14, "_CPPv4NK8APyFloat7to_bitsEv", false]], "apyfloat::to_double (c++ function)": [[14, "_CPPv4NK8APyFloat9to_doubleEv", false]], "apyfloat::to_fixed (c++ function)": [[14, "_CPPv4NK8APyFloat8to_fixedEv", false]], "apyfloat::true_exp (c++ function)": [[14, "_CPPv4NK8APyFloat8true_expEv", false]], "apyfloat::true_man (c++ function)": [[14, "_CPPv4NK8APyFloat8true_manEv", false]], "apyfloataccumulatorcontext (c++ class)": [[17, "_CPPv426APyFloatAccumulatorContext", false]], "apyfloataccumulatorcontext (class in apytypes)": [[5, "apytypes.APyFloatAccumulatorContext", false]], "apyfloataccumulatorcontext::apyfloataccumulatorcontext (c++ function)": [[17, "_CPPv4N26APyFloatAccumulatorContext26APyFloatAccumulatorContextENSt8optionalIiEENSt8optionalIiEENSt8optionalI5exp_tEENSt8optionalI16QuantizationModeEE", false]], "apyfloataccumulatorcontext::current_mode (c++ member)": [[17, "_CPPv4N26APyFloatAccumulatorContext12current_modeE", false]], "apyfloataccumulatorcontext::enter_context (c++ function)": [[17, "_CPPv4N26APyFloatAccumulatorContext13enter_contextEv", false]], "apyfloataccumulatorcontext::exit_context (c++ function)": [[17, "_CPPv4N26APyFloatAccumulatorContext12exit_contextEv", false]], "apyfloataccumulatorcontext::previous_mode (c++ member)": [[17, "_CPPv4N26APyFloatAccumulatorContext13previous_modeE", false]], "apyfloataccumulatoroption (c++ struct)": [[17, "_CPPv425APyFloatAccumulatorOption", false]], "apyfloataccumulatoroption::bias (c++ member)": [[17, "_CPPv4N25APyFloatAccumulatorOption4biasE", false]], "apyfloataccumulatoroption::exp_bits (c++ member)": [[17, "_CPPv4N25APyFloatAccumulatorOption8exp_bitsE", false]], "apyfloataccumulatoroption::man_bits (c++ member)": [[17, "_CPPv4N25APyFloatAccumulatorOption8man_bitsE", false]], "apyfloataccumulatoroption::quantization (c++ member)": [[17, "_CPPv4N25APyFloatAccumulatorOption12quantizationE", false]], "apyfloatarray (c++ class)": [[16, "_CPPv413APyFloatArray", false]], "apyfloatarray (class in apytypes)": [[3, "apytypes.APyFloatArray", false]], "apyfloatarray::_cast (c++ function)": [[16, "_CPPv4NK13APyFloatArray5_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", false], [16, "_CPPv4NK13APyFloatArray5_castENSt7uint8_tENSt7uint8_tE5exp_tNSt8optionalI16QuantizationModeEE", false]], "apyfloatarray::_set_values_from_ndarray (c++ function)": [[16, "_CPPv4N13APyFloatArray24_set_values_from_ndarrayERKN8nanobind7ndarrayIN8nanobind8c_contigEEE", false]], "apyfloatarray::abs (c++ function)": [[16, "_CPPv4NK13APyFloatArray3absEv", false]], "apyfloatarray::apyfloatarray (c++ function)": [[16, "_CPPv4N13APyFloatArray13APyFloatArrayERKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", false]], "apyfloatarray::bias (c++ member)": [[16, "_CPPv4N13APyFloatArray4biasE", false]], "apyfloatarray::broadcast_to (c++ function)": [[16, "_CPPv4NK13APyFloatArray12broadcast_toEKNSt6vectorINSt6size_tEEE", false]], "apyfloatarray::broadcast_to_python (c++ function)": [[16, "_CPPv4NK13APyFloatArray19broadcast_to_pythonEKNSt7variantIN2nb5tupleEN2nb4int_EEE", false]], "apyfloatarray::cast (c++ function)": [[16, "_CPPv4NK13APyFloatArray4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI5exp_tEENSt8optionalI16QuantizationModeEE", false]], "apyfloatarray::cast_no_quant (c++ function)": [[16, "_CPPv4NK13APyFloatArray13cast_no_quantENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", false]], "apyfloatarray::cast_to_bfloat16 (c++ function)": [[16, "_CPPv4NK13APyFloatArray16cast_to_bfloat16ENSt8optionalI16QuantizationModeEE", false]], "apyfloatarray::cast_to_double (c++ function)": [[16, "_CPPv4NK13APyFloatArray14cast_to_doubleENSt8optionalI16QuantizationModeEE", false]], "apyfloatarray::cast_to_half (c++ function)": [[16, "_CPPv4NK13APyFloatArray12cast_to_halfENSt8optionalI16QuantizationModeEE", false]], "apyfloatarray::cast_to_single (c++ function)": [[16, "_CPPv4NK13APyFloatArray14cast_to_singleENSt8optionalI16QuantizationModeEE", false]], "apyfloatarray::create_in_place (c++ function)": [[16, "_CPPv4N13APyFloatArray15create_in_placeEP13APyFloatArrayRKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceEiiNSt8optionalI5exp_tEE", false]], "apyfloatarray::data (c++ member)": [[16, "_CPPv4N13APyFloatArray4dataE", false]], "apyfloatarray::exp_bits (c++ member)": [[16, "_CPPv4N13APyFloatArray8exp_bitsE", false]], "apyfloatarray::from_array (c++ function)": [[16, "_CPPv4N13APyFloatArray10from_arrayERKN8nanobind7ndarrayIN8nanobind8c_contigEEEiiNSt8optionalI5exp_tEE", false]], "apyfloatarray::from_double (c++ function)": [[16, "_CPPv4N13APyFloatArray11from_doubleERKN8nanobind8sequenceEiiNSt8optionalI5exp_tEE", false]], "apyfloatarray::get_bias (c++ function)": [[16, "_CPPv4NK13APyFloatArray8get_biasEv", false]], "apyfloatarray::get_bits (c++ function)": [[16, "_CPPv4NK13APyFloatArray8get_bitsEv", false]], "apyfloatarray::get_exp_bits (c++ function)": [[16, "_CPPv4NK13APyFloatArray12get_exp_bitsEv", false]], "apyfloatarray::get_item (c++ function)": [[16, "_CPPv4NK13APyFloatArray8get_itemENSt6size_tE", false]], "apyfloatarray::get_man_bits (c++ function)": [[16, "_CPPv4NK13APyFloatArray12get_man_bitsEv", false]], "apyfloatarray::get_ndim (c++ function)": [[16, "_CPPv4NK13APyFloatArray8get_ndimEv", false]], "apyfloatarray::get_shape (c++ function)": [[16, "_CPPv4NK13APyFloatArray9get_shapeEv", false]], "apyfloatarray::get_size (c++ function)": [[16, "_CPPv4NK13APyFloatArray8get_sizeEv", false]], "apyfloatarray::is_identical (c++ function)": [[16, "_CPPv4NK13APyFloatArray12is_identicalERK13APyFloatArray", false]], "apyfloatarray::man_bits (c++ member)": [[16, "_CPPv4N13APyFloatArray8man_bitsE", false]], "apyfloatarray::matmul (c++ function)": [[16, "_CPPv4NK13APyFloatArray6matmulERK13APyFloatArray", false]], "apyfloatarray::operator* (c++ function)": [[16, "_CPPv4NK13APyFloatArraymlERK13APyFloatArray", false], [16, "_CPPv4NK13APyFloatArraymlERK8APyFloat", false]], "apyfloatarray::operator+ (c++ function)": [[16, "_CPPv4NK13APyFloatArrayplERK13APyFloatArray", false], [16, "_CPPv4NK13APyFloatArrayplERK8APyFloat", false]], "apyfloatarray::operator- (c++ function)": [[16, "_CPPv4NK13APyFloatArraymiERK13APyFloatArray", false], [16, "_CPPv4NK13APyFloatArraymiERK8APyFloat", false], [16, "_CPPv4NK13APyFloatArraymiEv", false]], "apyfloatarray::operator/ (c++ function)": [[16, "_CPPv4NK13APyFloatArraydvERK13APyFloatArray", false], [16, "_CPPv4NK13APyFloatArraydvERK8APyFloat", false]], "apyfloatarray::repr (c++ function)": [[16, "_CPPv4NK13APyFloatArray4reprEv", false]], "apyfloatarray::reshape (c++ function)": [[16, "_CPPv4N13APyFloatArray7reshapeEN2nb5tupleE", false]], "apyfloatarray::rtruediv (c++ function)": [[16, "_CPPv4NK13APyFloatArray8rtruedivERK8APyFloat", false]], "apyfloatarray::same_type_as (c++ function)": [[16, "_CPPv4NK13APyFloatArray12same_type_asERK13APyFloatArray", false], [16, "_CPPv4NK13APyFloatArray12same_type_asERK8APyFloat", false]], "apyfloatarray::squeeze (c++ function)": [[16, "_CPPv4NK13APyFloatArray7squeezeENSt8optionalINSt7variantIN2nb4int_EN2nb5tupleEEEEE", false]], "apyfloatarray::to_numpy (c++ function)": [[16, "_CPPv4NK13APyFloatArray8to_numpyEv", false]], "apyfloatarray::transpose (c++ function)": [[16, "_CPPv4NK13APyFloatArray9transposeEv", false]], "apyfloatdata (c++ struct)": [[17, "_CPPv412APyFloatData", false]], "apyfloatdata::exp (c++ member)": [[17, "_CPPv4N12APyFloatData3expE", false]], "apyfloatdata::man (c++ member)": [[17, "_CPPv4N12APyFloatData3manE", false]], "apyfloatdata::operator== (c++ function)": [[17, "_CPPv4NK12APyFloatDataeqERK12APyFloatData", false]], "apyfloatdata::sign (c++ member)": [[17, "_CPPv4N12APyFloatData4signE", false]], "apyfloatquantizationcontext (c++ class)": [[17, "_CPPv427APyFloatQuantizationContext", false]], "apyfloatquantizationcontext (class in apytypes)": [[5, "apytypes.APyFloatQuantizationContext", false]], "apyfloatquantizationcontext::apyfloatquantizationcontext (c++ function)": [[17, "_CPPv4N27APyFloatQuantizationContext27APyFloatQuantizationContextERK16QuantizationModeNSt8optionalINSt8uint64_tEEE", false]], "apyfloatquantizationcontext::enter_context (c++ function)": [[17, "_CPPv4N27APyFloatQuantizationContext13enter_contextEv", false]], "apyfloatquantizationcontext::exit_context (c++ function)": [[17, "_CPPv4N27APyFloatQuantizationContext12exit_contextEv", false]], "apyfloatquantizationcontext::new_mode (c++ member)": [[17, "_CPPv4N27APyFloatQuantizationContext8new_modeE", false]], "apyfloatquantizationcontext::new_seed (c++ member)": [[17, "_CPPv4N27APyFloatQuantizationContext8new_seedE", false]], "apyfloatquantizationcontext::prev_mode (c++ member)": [[17, "_CPPv4N27APyFloatQuantizationContext9prev_modeE", false]], "apyfloatquantizationcontext::prev_seed (c++ member)": [[17, "_CPPv4N27APyFloatQuantizationContext9prev_seedE", false]], "apytypes_unreachable (c++ function)": [[20, "_CPPv420apytypes_unreachablev", false]], "bcd_limb_vec_div2 (c++ function)": [[20, "_CPPv417bcd_limb_vec_div2RNSt6vectorI9mp_limb_tEE", false]], "bcd_limb_vec_mul2 (c++ function)": [[20, "_CPPv417bcd_limb_vec_mul2RNSt6vectorI9mp_limb_tEE", false]], "bcd_mul2 (c++ function)": [[20, "_CPPv48bcd_mul2RNSt6vectorINSt7uint8_tEEE", false]], "bcds_to_string (c++ function)": [[20, "_CPPv414bcds_to_stringKNSt6vectorI9mp_limb_tEE", false]], "bias (apytypes.apyfloat property)": [[2, "apytypes.APyFloat.bias", false]], "bias (apytypes.apyfloatarray property)": [[3, "apytypes.APyFloatArray.bias", false]], "bit_width (c++ function)": [[20, "_CPPv4I0E9bit_widthNSt6size_tE8INT_TYPE", false]], "bits (apytypes.apyfixed property)": [[0, "apytypes.APyFixed.bits", false]], "bits (apytypes.apyfixedarray property)": [[1, "apytypes.APyFixedArray.bits", false]], "bits (apytypes.apyfloat property)": [[2, "apytypes.APyFloat.bits", false]], "bits (apytypes.apyfloatarray property)": [[3, "apytypes.APyFloatArray.bits", false]], "bits_from_optional (c++ function)": [[20, "_CPPv418bits_from_optionalNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", false]], "bits_from_optional_cast (c++ function)": [[20, "_CPPv423bits_from_optional_castNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEEii", false]], "bits_to_limbs (c++ function)": [[20, "_CPPv413bits_to_limbsNSt6size_tE", false]], "broadcast_data_copy (c++ function)": [[21, "_CPPv4I00E19broadcast_data_copyv28RANDOM_ACCESS_CONST_ITERATOR22RANDOM_ACCESS_ITERATORRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEENSt6size_tE", false]], "broadcast_to() (apytypes.apyfixedarray method)": [[1, "apytypes.APyFixedArray.broadcast_to", false]], "broadcast_to() (apytypes.apyfloatarray method)": [[3, "apytypes.APyFloatArray.broadcast_to", false]], "calc_bias (c++ function)": [[15, "_CPPv49calc_biasii5exp_ti5exp_t", false]], "calc_bias_general (c++ function)": [[15, "_CPPv417calc_bias_generalii5exp_ti5exp_t", false]], "cast() (apytypes.apyfixed method)": [[0, "apytypes.APyFixed.cast", false]], "cast() (apytypes.apyfixedarray method)": [[1, "apytypes.APyFixedArray.cast", false]], "cast() (apytypes.apyfloat method)": [[2, "apytypes.APyFloat.cast", false]], "cast() (apytypes.apyfloatarray method)": [[3, "apytypes.APyFloatArray.cast", false]], "cast_to_bfloat16() (apytypes.apyfloat method)": [[2, "apytypes.APyFloat.cast_to_bfloat16", false]], "cast_to_bfloat16() (apytypes.apyfloatarray method)": [[3, "apytypes.APyFloatArray.cast_to_bfloat16", false]], "cast_to_double() (apytypes.apyfloat method)": [[2, "apytypes.APyFloat.cast_to_double", false]], "cast_to_double() (apytypes.apyfloatarray method)": [[3, "apytypes.APyFloatArray.cast_to_double", false]], "cast_to_half() (apytypes.apyfloat method)": [[2, "apytypes.APyFloat.cast_to_half", false]], "cast_to_half() (apytypes.apyfloatarray method)": [[3, "apytypes.APyFloatArray.cast_to_half", false]], "cast_to_single() (apytypes.apyfloat method)": [[2, "apytypes.APyFloat.cast_to_single", false]], "cast_to_single() (apytypes.apyfloatarray method)": [[3, "apytypes.APyFloatArray.cast_to_single", false]], "check_exponent_format (c++ function)": [[15, "_CPPv421check_exponent_formati", false]], "check_mantissa_format (c++ function)": [[15, "_CPPv421check_mantissa_formati", false]], "contextmanager (c++ class)": [[17, "_CPPv414ContextManager", false]], "contextmanager::enter_context (c++ function)": [[17, "_CPPv4N14ContextManager13enter_contextEv", false]], "contextmanager::exit_context (c++ function)": [[17, "_CPPv4N14ContextManager12exit_contextEv", false]], "contextmanager::~contextmanager (c++ function)": [[17, "_CPPv4N14ContextManagerD0Ev", false]], "count_trailing_bits (c++ function)": [[20, "_CPPv4I0E19count_trailing_bitsNSt6size_tE8INT_TYPE", false]], "cpp_shape_from_python_shape_like (c++ function)": [[20, "_CPPv432cpp_shape_from_python_shape_likeRKNSt7variantIN8nanobind5tupleEN8nanobind4int_EEE", false]], "create_functor_from_func (c macro)": [[20, "c.CREATE_FUNCTOR_FROM_FUNC", false]], "create_functor_from_func (c++ function)": [[20, "_CPPv424CREATE_FUNCTOR_FROM_FUNC17mpn_add_n_functor9mpn_add_n", false], [20, "_CPPv424CREATE_FUNCTOR_FROM_FUNC17mpn_sub_n_functor9mpn_sub_n", false]], "do_infinity (c++ function)": [[15, "_CPPv411do_infinity16QuantizationModeb", false]], "double_dabble (c++ function)": [[20, "_CPPv413double_dabbleNSt6vectorI9mp_limb_tEE", false]], "doubledabblelist (c++ struct)": [[20, "_CPPv416DoubleDabbleList", false]], "doubledabblelist::_nibble_mask (c++ member)": [[20, "_CPPv4N16DoubleDabbleList12_NIBBLE_MASKE", false]], "doubledabblelist::data (c++ member)": [[20, "_CPPv4N16DoubleDabbleList4dataE", false]], "doubledabblelist::do_dabble (c++ function)": [[20, "_CPPv4N16DoubleDabbleList9do_dabbleEv", false]], "doubledabblelist::do_double (c++ function)": [[20, "_CPPv4N16DoubleDabbleList9do_doubleE9mp_limb_t", false]], "doubledabblelist::do_reverse_dabble (c++ function)": [[20, "_CPPv4N16DoubleDabbleList17do_reverse_dabbleEv", false]], "doubledabblelist::do_reverse_double (c++ function)": [[20, "_CPPv4N16DoubleDabbleList17do_reverse_doubleER9mp_limb_t", false]], "exp (apytypes.apyfloat property)": [[2, "apytypes.APyFloat.exp", false]], "exp_bits (apytypes.apyfloat property)": [[2, "apytypes.APyFloat.exp_bits", false]], "exp_bits (apytypes.apyfloatarray property)": [[3, "apytypes.APyFloatArray.exp_bits", false]], "exp_of_double (c++ function)": [[22, "_CPPv413exp_of_doubled", false]], "exp_t (c++ type)": [[17, "_CPPv45exp_t", false]], "fold_shape (c++ function)": [[20, "_CPPv410fold_shapeRKNSt6vectorINSt6size_tEEE", false]], "frac_bits (apytypes.apyfixed property)": [[0, "apytypes.APyFixed.frac_bits", false]], "frac_bits (apytypes.apyfixedarray property)": [[1, "apytypes.APyFixedArray.frac_bits", false]], "from_array() (apytypes.apyfixedarray method)": [[1, "apytypes.APyFixedArray.from_array", false]], "from_array() (apytypes.apyfloatarray method)": [[3, "apytypes.APyFloatArray.from_array", false]], "from_bits() (apytypes.apyfloat method)": [[2, "apytypes.APyFloat.from_bits", false]], "from_float() (apytypes.apyfixed method)": [[0, "apytypes.APyFixed.from_float", false]], "from_float() (apytypes.apyfixedarray method)": [[1, "apytypes.APyFixedArray.from_float", false]], "from_float() (apytypes.apyfloat method)": [[2, "apytypes.APyFloat.from_float", false]], "from_float() (apytypes.apyfloatarray method)": [[3, "apytypes.APyFloatArray.from_float", false]], "from_nibble_list (c++ function)": [[20, "_CPPv416from_nibble_listRKNSt6vectorINSt7uint8_tEEE", false]], "from_str() (apytypes.apyfixed method)": [[0, "apytypes.APyFixed.from_str", false]], "get_accumulator_mode_fixed (c++ function)": [[17, "_CPPv426get_accumulator_mode_fixedv", false]], "get_accumulator_mode_float (c++ function)": [[17, "_CPPv426get_accumulator_mode_floatv", false]], "get_data_from_double (c++ function)": [[12, "_CPPv420get_data_from_doublediii", false]], "get_fixed_cast_mode (c++ function)": [[17, "_CPPv419get_fixed_cast_modev", false]], "get_float_quantization_mode (c++ function)": [[17, "_CPPv427get_float_quantization_modev", false]], "get_float_quantization_mode() (in module apytypes)": [[7, "apytypes.get_float_quantization_mode", false]], "get_float_quantization_seed (c++ function)": [[17, "_CPPv427get_float_quantization_seedv", false]], "get_float_quantization_seed() (in module apytypes)": [[7, "apytypes.get_float_quantization_seed", false]], "get_ob_digit (c macro)": [[24, "c.GET_OB_DIGIT", false]], "int_bits (apytypes.apyfixed property)": [[0, "apytypes.APyFixed.int_bits", false]], "int_bits (apytypes.apyfixedarray property)": [[1, "apytypes.APyFixedArray.int_bits", false]], "ipow (c++ function)": [[12, "_CPPv44ipow8APyFixedj", false], [15, "_CPPv44ipow5man_tj", false]], "is_broadcastable (c++ function)": [[21, "_CPPv416is_broadcastableRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEE", false]], "is_finite (apytypes.apyfloat property)": [[2, "apytypes.APyFloat.is_finite", false]], "is_identical() (apytypes.apyfixed method)": [[0, "apytypes.APyFixed.is_identical", false]], "is_identical() (apytypes.apyfixedarray method)": [[1, "apytypes.APyFixedArray.is_identical", false]], "is_identical() (apytypes.apyfloat method)": [[2, "apytypes.APyFloat.is_identical", false]], "is_identical() (apytypes.apyfloatarray method)": [[3, "apytypes.APyFloatArray.is_identical", false]], "is_inf (apytypes.apyfloat property)": [[2, "apytypes.APyFloat.is_inf", false]], "is_nan (apytypes.apyfloat property)": [[2, "apytypes.APyFloat.is_nan", false]], "is_normal (apytypes.apyfloat property)": [[2, "apytypes.APyFloat.is_normal", false]], "is_subnormal (apytypes.apyfloat property)": [[2, "apytypes.APyFloat.is_subnormal", false]], "is_valid_decimal_numeric_string (c++ function)": [[20, "_CPPv431is_valid_decimal_numeric_stringRKNSt6stringE", false]], "is_zero (apytypes.apyfixed property)": [[0, "apytypes.APyFixed.is_zero", false]], "is_zero (apytypes.apyfloat property)": [[2, "apytypes.APyFloat.is_zero", false]], "jam (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.JAM", false]], "jam_unbiased (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.JAM_UNBIASED", false]], "leading_fractional_zeros (apytypes.apyfixed property)": [[0, "apytypes.APyFixed.leading_fractional_zeros", false]], "leading_ones (apytypes.apyfixed property)": [[0, "apytypes.APyFixed.leading_ones", false]], "leading_ones (c++ function)": [[20, "_CPPv4I0E12leading_onesNSt6size_tE8INT_TYPE", false]], "leading_signs (apytypes.apyfixed property)": [[0, "apytypes.APyFixed.leading_signs", false]], "leading_zeros (apytypes.apyfixed property)": [[0, "apytypes.APyFixed.leading_zeros", false]], "leading_zeros (c++ function)": [[20, "_CPPv4I0E13leading_zerosNSt6size_tE8INT_TYPE", false]], "leading_zeros_apyfixed (c++ function)": [[15, "_CPPv422leading_zeros_apyfixedRK8APyFixed", false]], "limb_vector_abs (c++ function)": [[20, "_CPPv4I00E15limb_vector_absb25RANDOM_ACCESS_ITERATOR_IN25RANDOM_ACCESS_ITERATOR_IN26RANDOM_ACCESS_ITERATOR_OUT", false]], "limb_vector_add_pow2 (c++ function)": [[20, "_CPPv4I0E20limb_vector_add_pow29mp_limb_t22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", false]], "limb_vector_all_ones (c++ function)": [[20, "_CPPv4I0E20limb_vector_all_onesb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", false]], "limb_vector_all_zeros (c++ function)": [[20, "_CPPv4I0E21limb_vector_all_zerosb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", false]], "limb_vector_asr (c++ function)": [[20, "_CPPv4I0E15limb_vector_asrv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", false]], "limb_vector_from_uint64_t (c++ function)": [[20, "_CPPv425limb_vector_from_uint64_tNSt16initializer_listI8uint64_tEE", false]], "limb_vector_gte_pow2 (c++ function)": [[20, "_CPPv4I0E20limb_vector_gte_pow2b22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", false]], "limb_vector_is_negative (c++ function)": [[20, "_CPPv4I0E23limb_vector_is_negativeb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", false]], "limb_vector_is_zero (c++ function)": [[20, "_CPPv4I0E19limb_vector_is_zerob22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", false]], "limb_vector_leading_ones (c++ function)": [[20, "_CPPv4I0E24limb_vector_leading_onesNSt6size_tE22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", false]], "limb_vector_leading_zeros (c++ function)": [[20, "_CPPv4I0E25limb_vector_leading_zerosNSt6size_tE22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", false]], "limb_vector_lsl (c++ function)": [[20, "_CPPv4I0E15limb_vector_lslv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", false]], "limb_vector_lsl_inner (c++ function)": [[20, "_CPPv4I0E21limb_vector_lsl_innerv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORjjj", false]], "limb_vector_lsr (c++ function)": [[20, "_CPPv4I0E15limb_vector_lsrv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", false]], "limb_vector_negate (c++ function)": [[20, "_CPPv4I00E18limb_vector_negate9mp_limb_t25RANDOM_ACCESS_ITERATOR_IN25RANDOM_ACCESS_ITERATOR_IN26RANDOM_ACCESS_ITERATOR_OUT", false]], "limb_vector_or_reduce (c++ function)": [[20, "_CPPv4I0E21limb_vector_or_reduceb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", false]], "limb_vector_set_bit (c++ function)": [[20, "_CPPv4I0E19limb_vector_set_bitv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORjb", false]], "limb_vector_sub_pow2 (c++ function)": [[20, "_CPPv4I0E20limb_vector_sub_pow29mp_limb_t22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", false]], "limb_vector_test_bit (c++ function)": [[20, "_CPPv4I0E20limb_vector_test_bitb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", false]], "man (apytypes.apyfloat property)": [[2, "apytypes.APyFloat.man", false]], "man_bits (apytypes.apyfloat property)": [[2, "apytypes.APyFloat.man_bits", false]], "man_bits (apytypes.apyfloatarray property)": [[3, "apytypes.APyFloatArray.man_bits", false]], "man_of_double (c++ function)": [[22, "_CPPv413man_of_doubled", false]], "man_t (c++ type)": [[17, "_CPPv45man_t", false]], "ndim (apytypes.apyfixedarray property)": [[1, "apytypes.APyFixedArray.ndim", false]], "ndim (apytypes.apyfloatarray property)": [[3, "apytypes.APyFloatArray.ndim", false]], "next_down() (apytypes.apyfloat method)": [[2, "apytypes.APyFloat.next_down", false]], "next_up() (apytypes.apyfloat method)": [[2, "apytypes.APyFloat.next_up", false]], "nibble_width (c++ function)": [[20, "_CPPv4I0E12nibble_widthNSt6size_tE8INT_TYPE", false]], "notimplementedexception (c++ class)": [[20, "_CPPv423NotImplementedException", false]], "notimplementedexception::notimplementedexception (c++ function)": [[20, "_CPPv4N23NotImplementedException23NotImplementedExceptionENSt8optionalINSt6stringEEE", false]], "numeric_std (apytypes.overflowmode attribute)": [[7, "apytypes.OverflowMode.NUMERIC_STD", false]], "overflowmode (c++ enum)": [[17, "_CPPv412OverflowMode", false]], "overflowmode (class in apytypes)": [[7, "apytypes.OverflowMode", false]], "overflowmode::numeric_std (c++ enumerator)": [[17, "_CPPv4N12OverflowMode11NUMERIC_STDE", false]], "overflowmode::sat (c++ enumerator)": [[17, "_CPPv4N12OverflowMode3SATE", false]], "overflowmode::wrap (c++ enumerator)": [[17, "_CPPv4N12OverflowMode4WRAPE", false]], "pylong_digitcount (c macro)": [[24, "c.PyLong_DigitCount", false]], "pylong_isnegative (c macro)": [[24, "c.PyLong_IsNegative", false]], "pylong_new (c++ function)": [[24, "_CPPv410PyLong_NewNSt6size_tE", false]], "pylong_setsignanddigitcount (c macro)": [[24, "c.PyLong_SetSignAndDigitCount", false]], "python_limb_vec_to_long (c++ function)": [[24, "_CPPv4I0E23python_limb_vec_to_longN8nanobind4int_E22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORbNSt8optionalIjEE", false]], "python_long_is_negative (c++ function)": [[24, "_CPPv423python_long_is_negativeRKN8nanobind4int_E", false]], "python_long_to_limb_vec (c++ function)": [[24, "_CPPv423python_long_to_limb_vecRKN8nanobind4int_ENSt8optionalINSt6size_tEEE", false]], "python_sequence_extract_shape (c++ function)": [[24, "_CPPv429python_sequence_extract_shapeRKN8nanobind8sequenceE", false]], "python_sequence_walk (c++ function)": [[24, "_CPPv4IDpE20python_sequence_walkNSt6vectorIN8nanobind6objectEEERKN8nanobind8sequenceE", false]], "quantizationmode (c++ enum)": [[17, "_CPPv416QuantizationMode", false]], "quantizationmode (class in apytypes)": [[7, "apytypes.QuantizationMode", false]], "quantizationmode::jam (c++ enumerator)": [[17, "_CPPv4N16QuantizationMode3JAME", false]], "quantizationmode::jam_unbiased (c++ enumerator)": [[17, "_CPPv4N16QuantizationMode12JAM_UNBIASEDE", false]], "quantizationmode::rnd (c++ enumerator)": [[17, "_CPPv4N16QuantizationMode3RNDE", false]], "quantizationmode::rnd_conv (c++ enumerator)": [[17, "_CPPv4N16QuantizationMode8RND_CONVE", false]], "quantizationmode::rnd_conv_odd (c++ enumerator)": [[17, "_CPPv4N16QuantizationMode12RND_CONV_ODDE", false]], "quantizationmode::rnd_inf (c++ enumerator)": [[17, "_CPPv4N16QuantizationMode7RND_INFE", false]], "quantizationmode::rnd_min_inf (c++ enumerator)": [[17, "_CPPv4N16QuantizationMode11RND_MIN_INFE", false]], "quantizationmode::rnd_zero (c++ enumerator)": [[17, "_CPPv4N16QuantizationMode8RND_ZEROE", false]], "quantizationmode::stoch_equal (c++ enumerator)": [[17, "_CPPv4N16QuantizationMode11STOCH_EQUALE", false]], "quantizationmode::stoch_weighted (c++ enumerator)": [[17, "_CPPv4N16QuantizationMode14STOCH_WEIGHTEDE", false]], "quantizationmode::trn (c++ enumerator)": [[17, "_CPPv4N16QuantizationMode3TRNE", false]], "quantizationmode::trn_away (c++ enumerator)": [[17, "_CPPv4N16QuantizationMode8TRN_AWAYE", false]], "quantizationmode::trn_inf (c++ enumerator)": [[17, "_CPPv4N16QuantizationMode7TRN_INFE", false]], "quantizationmode::trn_mag (c++ enumerator)": [[17, "_CPPv4N16QuantizationMode7TRN_MAGE", false]], "quantizationmode::trn_zero (c++ enumerator)": [[17, "_CPPv4N16QuantizationMode8TRN_ZEROE", false]], "quantize_apymantissa (c++ function)": [[15, "_CPPv420quantize_apymantissaR8APyFixedbi16QuantizationMode", false]], "quantize_close_to_zero (c++ function)": [[15, "_CPPv422quantize_close_to_zerob5man_t16QuantizationMode", false]], "quantize_mantissa (c++ function)": [[15, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_t16QuantizationMode", false], [15, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_tNSt7uint8_tE5man_t16QuantizationMode", false]], "random_number_float (c++ function)": [[17, "_CPPv419random_number_floatv", false]], "reverse_double_dabble (c++ function)": [[20, "_CPPv421reverse_double_dabbleRKNSt6vectorINSt7uint8_tEEE", false]], "rnd (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.RND", false]], "rnd_conv (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.RND_CONV", false]], "rnd_conv_odd (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.RND_CONV_ODD", false]], "rnd_inf (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.RND_INF", false]], "rnd_min_inf (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.RND_MIN_INF", false]], "rnd_zero (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.RND_ZERO", false]], "sat (apytypes.overflowmode attribute)": [[7, "apytypes.OverflowMode.SAT", false]], "scratchvector (c++ class)": [[18, "_CPPv4I0_NSt6size_tE0E13ScratchVector", false]], "scratchvector::_capacity (c++ member)": [[18, "_CPPv4N13ScratchVector9_capacityE", false]], "scratchvector::_ptr (c++ member)": [[18, "_CPPv4N13ScratchVector4_ptrE", false]], "scratchvector::_scratch_data (c++ member)": [[18, "_CPPv4N13ScratchVector13_scratch_dataE", false]], "scratchvector::_size (c++ member)": [[18, "_CPPv4N13ScratchVector5_sizeE", false]], "scratchvector::allocator_type (c++ type)": [[18, "_CPPv4N13ScratchVector14allocator_typeE", false]], "scratchvector::at (c++ function)": [[18, "_CPPv4N13ScratchVector2atE9size_type", false], [18, "_CPPv4NK13ScratchVector2atE9size_type", false]], "scratchvector::back (c++ function)": [[18, "_CPPv4N13ScratchVector4backEv", false], [18, "_CPPv4NK13ScratchVector4backEv", false]], "scratchvector::begin (c++ function)": [[18, "_CPPv4N13ScratchVector5beginEv", false], [18, "_CPPv4NK13ScratchVector5beginEv", false]], "scratchvector::capacity (c++ function)": [[18, "_CPPv4NK13ScratchVector8capacityEv", false]], "scratchvector::cbegin (c++ function)": [[18, "_CPPv4NK13ScratchVector6cbeginEv", false]], "scratchvector::cend (c++ function)": [[18, "_CPPv4NK13ScratchVector4cendEv", false]], "scratchvector::const_iterator (c++ type)": [[18, "_CPPv4N13ScratchVector14const_iteratorE", false]], "scratchvector::const_pointer (c++ type)": [[18, "_CPPv4N13ScratchVector13const_pointerE", false]], "scratchvector::const_reference (c++ type)": [[18, "_CPPv4N13ScratchVector15const_referenceE", false]], "scratchvector::const_reverse_iterator (c++ type)": [[18, "_CPPv4N13ScratchVector22const_reverse_iteratorE", false]], "scratchvector::crbegin (c++ function)": [[18, "_CPPv4NK13ScratchVector7crbeginEv", false]], "scratchvector::crend (c++ function)": [[18, "_CPPv4NK13ScratchVector5crendEv", false]], "scratchvector::difference_type (c++ type)": [[18, "_CPPv4N13ScratchVector15difference_typeE", false]], "scratchvector::end (c++ function)": [[18, "_CPPv4N13ScratchVector3endEv", false], [18, "_CPPv4NK13ScratchVector3endEv", false]], "scratchvector::iterator (c++ type)": [[18, "_CPPv4N13ScratchVector8iteratorE", false]], "scratchvector::operator std::vector<t> (c++ function)": [[18, "_CPPv4NK13ScratchVectorcvNSt6vectorI1TEEEv", false]], "scratchvector::operator= (c++ function)": [[18, "_CPPv4I0_bEN13ScratchVectoraSER13ScratchVectorRK25RANDOM_ACCESS_VECTOR_TYPE", false], [18, "_CPPv4N13ScratchVectoraSERK13ScratchVector", false]], "scratchvector::operator[] (c++ function)": [[18, "_CPPv4N13ScratchVectorixE9size_type", false], [18, "_CPPv4NK13ScratchVectorixE9size_type", false]], "scratchvector::pointer (c++ type)": [[18, "_CPPv4N13ScratchVector7pointerE", false]], "scratchvector::pop_back (c++ function)": [[18, "_CPPv4N13ScratchVector8pop_backEv", false]], "scratchvector::push_back (c++ function)": [[18, "_CPPv4N13ScratchVector9push_backERK1T", false]], "scratchvector::rbegin (c++ function)": [[18, "_CPPv4N13ScratchVector6rbeginEv", false], [18, "_CPPv4NK13ScratchVector6rbeginEv", false]], "scratchvector::reference (c++ type)": [[18, "_CPPv4N13ScratchVector9referenceE", false]], "scratchvector::rend (c++ function)": [[18, "_CPPv4N13ScratchVector4rendEv", false], [18, "_CPPv4NK13ScratchVector4rendEv", false]], "scratchvector::resize (c++ function)": [[18, "_CPPv4N13ScratchVector6resizeE9size_type", false]], "scratchvector::reverse_iterator (c++ type)": [[18, "_CPPv4N13ScratchVector16reverse_iteratorE", false]], "scratchvector::scratchvector (c++ function)": [[18, "_CPPv4I0EN13ScratchVector13ScratchVectorE7InputIt7InputIt", false], [18, "_CPPv4N13ScratchVector13ScratchVectorE9size_type", false], [18, "_CPPv4N13ScratchVector13ScratchVectorE9size_typeRK1T", false], [18, "_CPPv4N13ScratchVector13ScratchVectorENSt16initializer_listI1TEE", false], [18, "_CPPv4N13ScratchVector13ScratchVectorERK13ScratchVector", false], [18, "_CPPv4N13ScratchVector13ScratchVectorEv", false]], "scratchvector::size (c++ function)": [[18, "_CPPv4NK13ScratchVector4sizeEv", false]], "scratchvector::size_type (c++ type)": [[18, "_CPPv4N13ScratchVector9size_typeE", false]], "scratchvector::value_type (c++ type)": [[18, "_CPPv4N13ScratchVector10value_typeE", false]], "scratchvector::~scratchvector (c++ function)": [[18, "_CPPv4N13ScratchVectorD0Ev", false]], "set_exp_of_double (c++ function)": [[22, "_CPPv417set_exp_of_doubleRdi", false]], "set_float_quantization_mode (c++ function)": [[17, "_CPPv427set_float_quantization_mode16QuantizationMode", false]], "set_float_quantization_mode() (in module apytypes)": [[7, "apytypes.set_float_quantization_mode", false]], "set_float_quantization_seed (c++ function)": [[17, "_CPPv427set_float_quantization_seedNSt8uint64_tE", false]], "set_float_quantization_seed() (in module apytypes)": [[7, "apytypes.set_float_quantization_seed", false]], "set_man_of_double (c++ function)": [[22, "_CPPv417set_man_of_doubleRd8uint64_t", false]], "set_sign_of_double (c++ function)": [[22, "_CPPv418set_sign_of_doubleRdb", false]], "shape (apytypes.apyfixedarray property)": [[1, "apytypes.APyFixedArray.shape", false]], "shape (apytypes.apyfloatarray property)": [[3, "apytypes.APyFloatArray.shape", false]], "sign (apytypes.apyfloat property)": [[2, "apytypes.APyFloat.sign", false]], "sign_of_double (c++ function)": [[22, "_CPPv414sign_of_doubled", false]], "significant_limbs (c++ function)": [[20, "_CPPv4I0E17significant_limbsNSt6size_tE22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", false]], "simd (c++ type)": [[19, "_CPPv44simd", false]], "simd::create_functor_from_func (c++ function)": [[19, "_CPPv4N4simd24CREATE_FUNCTOR_FROM_FUNCE11add_functor10vector_add", false], [19, "_CPPv4N4simd24CREATE_FUNCTOR_FROM_FUNCE11sub_functor10vector_sub", false], [19, "_CPPv4N4simd24CREATE_FUNCTOR_FROM_FUNCE17add_const_functor16vector_add_const", false], [19, "_CPPv4N4simd24CREATE_FUNCTOR_FROM_FUNCE17shift_add_functor16vector_shift_add", false], [19, "_CPPv4N4simd24CREATE_FUNCTOR_FROM_FUNCE17shift_sub_functor16vector_shift_sub", false], [19, "_CPPv4N4simd24CREATE_FUNCTOR_FROM_FUNCE17sub_const_functor16vector_sub_const", false], [19, "_CPPv4N4simd24CREATE_FUNCTOR_FROM_FUNCE23shift_add_const_functor22vector_shift_add_const", false], [19, "_CPPv4N4simd24CREATE_FUNCTOR_FROM_FUNCE23shift_sub_const_functor22vector_shift_sub_const", false]], "simd::get_simd_version_str (c++ function)": [[19, "_CPPv4N4simd20get_simd_version_strEv", false]], "simd::vector_add (c++ function)": [[19, "_CPPv4N4simd10vector_addENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", false]], "simd::vector_add_const (c++ function)": [[19, "_CPPv4N4simd16vector_add_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", false]], "simd::vector_mul (c++ function)": [[19, "_CPPv4N4simd10vector_mulENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", false]], "simd::vector_mul_const (c++ function)": [[19, "_CPPv4N4simd16vector_mul_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", false]], "simd::vector_multiply_accumulate (c++ function)": [[19, "_CPPv4N4simd26vector_multiply_accumulateENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6size_tE", false]], "simd::vector_rdiv_const_signed (c++ function)": [[19, "_CPPv4N4simd24vector_rdiv_const_signedENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", false]], "simd::vector_rsub_const (c++ function)": [[19, "_CPPv4N4simd17vector_rsub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", false]], "simd::vector_shift_add (c++ function)": [[19, "_CPPv4N4simd16vector_shift_addENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjjNSt6size_tE", false]], "simd::vector_shift_add_const (c++ function)": [[19, "_CPPv4N4simd22vector_shift_add_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", false]], "simd::vector_shift_div_const_signed (c++ function)": [[19, "_CPPv4N4simd29vector_shift_div_const_signedENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", false]], "simd::vector_shift_div_signed (c++ function)": [[19, "_CPPv4N4simd23vector_shift_div_signedENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", false]], "simd::vector_shift_sub (c++ function)": [[19, "_CPPv4N4simd16vector_shift_subENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjjNSt6size_tE", false]], "simd::vector_shift_sub_const (c++ function)": [[19, "_CPPv4N4simd22vector_shift_sub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", false]], "simd::vector_sub (c++ function)": [[19, "_CPPv4N4simd10vector_subENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", false]], "simd::vector_sub_const (c++ function)": [[19, "_CPPv4N4simd16vector_sub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", false]], "smallest_broadcastable_shape (c++ function)": [[21, "_CPPv428smallest_broadcastable_shapeRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEE", false]], "squeeze() (apytypes.apyfixedarray method)": [[1, "apytypes.APyFixedArray.squeeze", false]], "squeeze() (apytypes.apyfloatarray method)": [[3, "apytypes.APyFloatArray.squeeze", false]], "squeeze() (in module apytypes)": [[4, "apytypes.squeeze", false]], "src_to_dst_idx (c++ function)": [[21, "_CPPv4I0E14src_to_dst_idxNSt6size_tENSt6size_tERR4FUNCRKNSt6vectorINSt6size_tEEE", false]], "strides_from_shape (c++ function)": [[20, "_CPPv418strides_from_shapeRKNSt6vectorINSt6size_tEEENSt6size_tE", false]], "string_trim_leading_whitespace (c++ function)": [[20, "_CPPv430string_trim_leading_whitespaceRKNSt6stringE", false]], "string_trim_trailing_whitespace (c++ function)": [[20, "_CPPv431string_trim_trailing_whitespaceRKNSt6stringE", false]], "string_trim_whitespace (c++ function)": [[20, "_CPPv422string_trim_whitespaceRKNSt6stringE", false]], "string_trim_zeros (c++ function)": [[20, "_CPPv417string_trim_zerosRKNSt6stringE", false]], "sviteratorbase (c++ class)": [[18, "_CPPv4I00E14SVIteratorBase", false]], "sviteratorbase::_ptr (c++ member)": [[18, "_CPPv4N14SVIteratorBase4_ptrE", false]], "sviteratorbase::const_reference (c++ type)": [[18, "_CPPv4N14SVIteratorBase15const_referenceE", false]], "sviteratorbase::difference_type (c++ type)": [[18, "_CPPv4N14SVIteratorBase15difference_typeE", false]], "sviteratorbase::iterator_category (c++ type)": [[18, "_CPPv4N14SVIteratorBase17iterator_categoryE", false]], "sviteratorbase::operator!= (c++ function)": [[18, "_CPPv4NK14SVIteratorBaseneE14SVIteratorBase", false]], "sviteratorbase::operator* (c++ function)": [[18, "_CPPv4N14SVIteratorBasemlEv", false], [18, "_CPPv4NK14SVIteratorBasemlEv", false]], "sviteratorbase::operator+ (c++ function)": [[18, "_CPPv4NK14SVIteratorBaseplE15difference_type", false]], "sviteratorbase::operator++ (c++ function)": [[18, "_CPPv4N14SVIteratorBaseppEi", false], [18, "_CPPv4N14SVIteratorBaseppEv", false]], "sviteratorbase::operator+= (c++ function)": [[18, "_CPPv4N14SVIteratorBasepLE15difference_type", false]], "sviteratorbase::operator- (c++ function)": [[18, "_CPPv4NK14SVIteratorBasemiE14SVIteratorBase", false], [18, "_CPPv4NK14SVIteratorBasemiE15difference_type", false]], "sviteratorbase::operator-- (c++ function)": [[18, "_CPPv4N14SVIteratorBasemmEi", false], [18, "_CPPv4N14SVIteratorBasemmEv", false]], "sviteratorbase::operator-= (c++ function)": [[18, "_CPPv4N14SVIteratorBasemIE15difference_type", false]], "sviteratorbase::operator< (c++ function)": [[18, "_CPPv4NK14SVIteratorBaseltE14SVIteratorBase", false]], "sviteratorbase::operator<= (c++ function)": [[18, "_CPPv4NK14SVIteratorBaseleE14SVIteratorBase", false]], "sviteratorbase::operator== (c++ function)": [[18, "_CPPv4NK14SVIteratorBaseeqE14SVIteratorBase", false]], "sviteratorbase::operator> (c++ function)": [[18, "_CPPv4NK14SVIteratorBasegtE14SVIteratorBase", false]], "sviteratorbase::operator>= (c++ function)": [[18, "_CPPv4NK14SVIteratorBasegeE14SVIteratorBase", false]], "sviteratorbase::operator[] (c++ function)": [[18, "_CPPv4N14SVIteratorBaseixENSt6size_tE", false], [18, "_CPPv4NK14SVIteratorBaseixENSt6size_tE", false]], "sviteratorbase::pointer (c++ type)": [[18, "_CPPv4N14SVIteratorBase7pointerE", false]], "sviteratorbase::reference (c++ type)": [[18, "_CPPv4N14SVIteratorBase9referenceE", false]], "sviteratorbase::sviteratorbase (c++ function)": [[18, "_CPPv4N14SVIteratorBase14SVIteratorBaseE7pointer", false]], "sviteratorbase::value_type (c++ type)": [[18, "_CPPv4N14SVIteratorBase10value_typeE", false]], "t (apytypes.apyfixedarray property)": [[1, "apytypes.APyFixedArray.T", false]], "t (apytypes.apyfloatarray property)": [[3, "apytypes.APyFloatArray.T", false]], "target_is_little_endian (c++ function)": [[22, "_CPPv423target_is_little_endianv", false]], "ties_away (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.TIES_AWAY", false]], "ties_even (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.TIES_EVEN", false]], "ties_neg (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.TIES_NEG", false]], "ties_odd (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.TIES_ODD", false]], "ties_pos (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.TIES_POS", false]], "ties_zero (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.TIES_ZERO", false]], "to_away (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.TO_AWAY", false]], "to_bits() (apytypes.apyfixed method)": [[0, "apytypes.APyFixed.to_bits", false]], "to_bits() (apytypes.apyfloat method)": [[2, "apytypes.APyFloat.to_bits", false]], "to_neg (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.TO_NEG", false]], "to_nibble_list (c++ function)": [[20, "_CPPv414to_nibble_listRKNSt6vectorI9mp_limb_tEENSt6size_tE", false]], "to_numpy() (apytypes.apyfixedarray method)": [[1, "apytypes.APyFixedArray.to_numpy", false]], "to_numpy() (apytypes.apyfloatarray method)": [[3, "apytypes.APyFloatArray.to_numpy", false]], "to_pos (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.TO_POS", false]], "to_zero (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.TO_ZERO", false]], "translate_quantization_mode (c++ function)": [[15, "_CPPv427translate_quantization_mode16QuantizationModeb", false]], "transpose() (apytypes.apyfixedarray method)": [[1, "apytypes.APyFixedArray.transpose", false]], "transpose() (apytypes.apyfloatarray method)": [[3, "apytypes.APyFloatArray.transpose", false]], "trn (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.TRN", false]], "trn_away (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.TRN_AWAY", false]], "trn_inf (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.TRN_INF", false]], "trn_mag (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.TRN_MAG", false]], "trn_zero (apytypes.quantizationmode attribute)": [[7, "apytypes.QuantizationMode.TRN_ZERO", false]], "true_exp (apytypes.apyfloat property)": [[2, "apytypes.APyFloat.true_exp", false]], "true_man (apytypes.apyfloat property)": [[2, "apytypes.APyFloat.true_man", false]], "true_sign (apytypes.apyfloat property)": [[2, "apytypes.APyFloat.true_sign", false]], "tuple_string_from_vec (c++ function)": [[20, "_CPPv4I0E21tuple_string_from_vecNSt6stringERKNSt6vectorI1TEE", false]], "twos_complement_overflow (c++ function)": [[20, "_CPPv424twos_complement_overflow9mp_limb_ti", false]], "type_pun_double_to_uint64_t (c++ function)": [[22, "_CPPv427type_pun_double_to_uint64_td", false]], "type_pun_uint64_t_to_double (c++ function)": [[22, "_CPPv427type_pun_uint64_t_to_double8uint64_t", false]], "uint64_t_from_limb_vector (c++ function)": [[20, "_CPPv4I0E25uint64_t_from_limb_vector8uint64_tRK11VECTOR_TYPENSt6size_tE", false]], "wrap (apytypes.overflowmode attribute)": [[7, "apytypes.OverflowMode.WRAP", false]]}, "objects": {"": [[20, 0, 1, "c.APY_INLINE", "APY_INLINE"], [20, 0, 1, "c.CREATE_FUNCTOR_FROM_FUNC", "CREATE_FUNCTOR_FROM_FUNC"], [24, 0, 1, "c.GET_OB_DIGIT", "GET_OB_DIGIT"], [24, 0, 1, "c.PyLong_DigitCount", "PyLong_DigitCount"], [24, 0, 1, "c.PyLong_IsNegative", "PyLong_IsNegative"], [24, 0, 1, "c.PyLong_SetSignAndDigitCount", "PyLong_SetSignAndDigitCount"], [10, 1, 1, "_CPPv4I00E9APyBuffer", "APyBuffer"], [10, 2, 1, "_CPPv4N9APyBuffer9APyBufferERKNSt6vectorINSt6size_tEEENSt6size_tE", "APyBuffer::APyBuffer"], [10, 3, 1, "_CPPv4N9APyBuffer9APyBufferERKNSt6vectorINSt6size_tEEENSt6size_tE", "APyBuffer::APyBuffer::itemsize"], [10, 3, 1, "_CPPv4N9APyBuffer9APyBufferERKNSt6vectorINSt6size_tEEENSt6size_tE", "APyBuffer::APyBuffer::shape"], [10, 4, 1, "_CPPv4I00E9APyBuffer", "APyBuffer::Allocator"], [10, 4, 1, "_CPPv4I00E9APyBuffer", "APyBuffer::T"], [10, 5, 1, "_CPPv4N9APyBuffer5_dataE", "APyBuffer::_data"], [10, 5, 1, "_CPPv4N9APyBuffer9_itemsizeE", "APyBuffer::_itemsize"], [10, 5, 1, "_CPPv4N9APyBuffer5_ndimE", "APyBuffer::_ndim"], [10, 5, 1, "_CPPv4N9APyBuffer7_nitemsE", "APyBuffer::_nitems"], [10, 5, 1, "_CPPv4N9APyBuffer6_shapeE", "APyBuffer::_shape"], [10, 5, 1, "_CPPv4N9APyBuffer8_stridesE", "APyBuffer::_strides"], [10, 2, 1, "_CPPv4N9APyBuffer13buffer_resizeEKNSt6vectorINSt6size_tEEENSt6size_tE", "APyBuffer::buffer_resize"], [10, 3, 1, "_CPPv4N9APyBuffer13buffer_resizeEKNSt6vectorINSt6size_tEEENSt6size_tE", "APyBuffer::buffer_resize::itemsize"], [10, 3, 1, "_CPPv4N9APyBuffer13buffer_resizeEKNSt6vectorINSt6size_tEEENSt6size_tE", "APyBuffer::buffer_resize::shape"], [10, 2, 1, "_CPPv4N9APyBuffer13get_py_bufferEv", "APyBuffer::get_py_buffer"], [11, 1, 1, "_CPPv48APyFixed", "APyFixed"], [11, 2, 1, "_CPPv4I0EN8APyFixed8APyFixedEii3_IT3_IT", "APyFixed::APyFixed"], [11, 2, 1, "_CPPv4N8APyFixed8APyFixedENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::APyFixed"], [11, 2, 1, "_CPPv4N8APyFixed8APyFixedERK8APyFixed", "APyFixed::APyFixed"], [11, 2, 1, "_CPPv4N8APyFixed8APyFixedERKN2nb4int_ENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::APyFixed"], [11, 2, 1, "_CPPv4N8APyFixed8APyFixedEii", "APyFixed::APyFixed"], [11, 2, 1, "_CPPv4N8APyFixed8APyFixedEiiRKNSt6vectorI9mp_limb_tEE", "APyFixed::APyFixed"], [11, 2, 1, "_CPPv4N8APyFixed8APyFixedEv", "APyFixed::APyFixed"], [11, 4, 1, "_CPPv4I0EN8APyFixed8APyFixedEii3_IT3_IT", "APyFixed::APyFixed::_IT"], [11, 3, 1, "_CPPv4I0EN8APyFixed8APyFixedEii3_IT3_IT", "APyFixed::APyFixed::begin"], [11, 3, 1, "_CPPv4I0EN8APyFixed8APyFixedEii3_IT3_IT", "APyFixed::APyFixed::bits"], [11, 3, 1, "_CPPv4N8APyFixed8APyFixedENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::APyFixed::bits"], [11, 3, 1, "_CPPv4N8APyFixed8APyFixedERKN2nb4int_ENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::APyFixed::bits"], [11, 3, 1, "_CPPv4N8APyFixed8APyFixedEii", "APyFixed::APyFixed::bits"], [11, 3, 1, "_CPPv4N8APyFixed8APyFixedEiiRKNSt6vectorI9mp_limb_tEE", "APyFixed::APyFixed::bits"], [11, 3, 1, "_CPPv4I0EN8APyFixed8APyFixedEii3_IT3_IT", "APyFixed::APyFixed::end"], [11, 3, 1, "_CPPv4N8APyFixed8APyFixedENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::APyFixed::frac_bits"], [11, 3, 1, "_CPPv4N8APyFixed8APyFixedERKN2nb4int_ENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::APyFixed::frac_bits"], [11, 3, 1, "_CPPv4I0EN8APyFixed8APyFixedEii3_IT3_IT", "APyFixed::APyFixed::int_bits"], [11, 3, 1, "_CPPv4N8APyFixed8APyFixedENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::APyFixed::int_bits"], [11, 3, 1, "_CPPv4N8APyFixed8APyFixedERKN2nb4int_ENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::APyFixed::int_bits"], [11, 3, 1, "_CPPv4N8APyFixed8APyFixedEii", "APyFixed::APyFixed::int_bits"], [11, 3, 1, "_CPPv4N8APyFixed8APyFixedEiiRKNSt6vectorI9mp_limb_tEE", "APyFixed::APyFixed::int_bits"], [11, 3, 1, "_CPPv4N8APyFixed8APyFixedERK8APyFixed", "APyFixed::APyFixed::other"], [11, 3, 1, "_CPPv4N8APyFixed8APyFixedERKN2nb4int_ENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::APyFixed::python_long_int_bit_pattern"], [11, 3, 1, "_CPPv4N8APyFixed8APyFixedEiiRKNSt6vectorI9mp_limb_tEE", "APyFixed::APyFixed::vec"], [11, 2, 1, "_CPPv4NK8APyFixed3absEv", "APyFixed::abs"], [11, 2, 1, "_CPPv4NK8APyFixed25bit_pattern_to_string_decEv", "APyFixed::bit_pattern_to_string_dec"], [11, 2, 1, "_CPPv4NK8APyFixed4bitsEv", "APyFixed::bits"], [11, 2, 1, "_CPPv4NK8APyFixed4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixed::cast"], [11, 3, 1, "_CPPv4NK8APyFixed4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixed::cast::bits"], [11, 3, 1, "_CPPv4NK8APyFixed4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixed::cast::frac_bits"], [11, 3, 1, "_CPPv4NK8APyFixed4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixed::cast::int_bits"], [11, 3, 1, "_CPPv4NK8APyFixed4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixed::cast::overflow"], [11, 3, 1, "_CPPv4NK8APyFixed4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixed::cast::quantization"], [11, 2, 1, "_CPPv4NK8APyFixed16cast_no_overflowEii16QuantizationMode", "APyFixed::cast_no_overflow"], [11, 3, 1, "_CPPv4NK8APyFixed16cast_no_overflowEii16QuantizationMode", "APyFixed::cast_no_overflow::bits"], [11, 3, 1, "_CPPv4NK8APyFixed16cast_no_overflowEii16QuantizationMode", "APyFixed::cast_no_overflow::int_bits"], [11, 3, 1, "_CPPv4NK8APyFixed16cast_no_overflowEii16QuantizationMode", "APyFixed::cast_no_overflow::quantization"], [11, 2, 1, "_CPPv4NK8APyFixed9frac_bitsEv", "APyFixed::frac_bits"], [11, 2, 1, "_CPPv4N8APyFixed11from_doubleEdNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::from_double"], [11, 3, 1, "_CPPv4N8APyFixed11from_doubleEdNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::from_double::bits"], [11, 3, 1, "_CPPv4N8APyFixed11from_doubleEdNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::from_double::frac_bits"], [11, 3, 1, "_CPPv4N8APyFixed11from_doubleEdNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::from_double::int_bits"], [11, 3, 1, "_CPPv4N8APyFixed11from_doubleEdNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::from_double::value"], [11, 2, 1, "_CPPv4N8APyFixed12from_integerERKN2nb4int_ENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::from_integer"], [11, 3, 1, "_CPPv4N8APyFixed12from_integerERKN2nb4int_ENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::from_integer::bits"], [11, 3, 1, "_CPPv4N8APyFixed12from_integerERKN2nb4int_ENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::from_integer::frac_bits"], [11, 3, 1, "_CPPv4N8APyFixed12from_integerERKN2nb4int_ENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::from_integer::int_bits"], [11, 3, 1, "_CPPv4N8APyFixed12from_integerERKN2nb4int_ENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::from_integer::value"], [11, 2, 1, "_CPPv4N8APyFixed11from_numberERKN2nb6objectENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::from_number"], [11, 3, 1, "_CPPv4N8APyFixed11from_numberERKN2nb6objectENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::from_number::bits"], [11, 3, 1, "_CPPv4N8APyFixed11from_numberERKN2nb6objectENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::from_number::frac_bits"], [11, 3, 1, "_CPPv4N8APyFixed11from_numberERKN2nb6objectENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::from_number::int_bits"], [11, 3, 1, "_CPPv4N8APyFixed11from_numberERKN2nb6objectENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixed::from_number::py_obj"], [11, 2, 1, "_CPPv4N8APyFixed11from_stringENSt6stringENSt8optionalIiEENSt8optionalIiEEiNSt8optionalIiEE", "APyFixed::from_string"], [11, 3, 1, "_CPPv4N8APyFixed11from_stringENSt6stringENSt8optionalIiEENSt8optionalIiEEiNSt8optionalIiEE", "APyFixed::from_string::base"], [11, 3, 1, "_CPPv4N8APyFixed11from_stringENSt6stringENSt8optionalIiEENSt8optionalIiEEiNSt8optionalIiEE", "APyFixed::from_string::bits"], [11, 3, 1, "_CPPv4N8APyFixed11from_stringENSt6stringENSt8optionalIiEENSt8optionalIiEEiNSt8optionalIiEE", "APyFixed::from_string::frac_bits"], [11, 3, 1, "_CPPv4N8APyFixed11from_stringENSt6stringENSt8optionalIiEENSt8optionalIiEEiNSt8optionalIiEE", "APyFixed::from_string::int_bits"], [11, 3, 1, "_CPPv4N8APyFixed11from_stringENSt6stringENSt8optionalIiEENSt8optionalIiEEiNSt8optionalIiEE", "APyFixed::from_string::string_value"], [11, 2, 1, "_CPPv4N8APyFixed24from_unspecified_integerERKN2nb4int_E", "APyFixed::from_unspecified_integer"], [11, 3, 1, "_CPPv4N8APyFixed24from_unspecified_integerERKN2nb4int_E", "APyFixed::from_unspecified_integer::value"], [11, 2, 1, "_CPPv4NK8APyFixed8get_lsbsEv", "APyFixed::get_lsbs"], [11, 2, 1, "_CPPv4N8APyFixed13increment_lsbEv", "APyFixed::increment_lsb"], [11, 2, 1, "_CPPv4NK8APyFixed8int_bitsEv", "APyFixed::int_bits"], [11, 2, 1, "_CPPv4NK8APyFixed12is_identicalERK8APyFixed", "APyFixed::is_identical"], [11, 3, 1, "_CPPv4NK8APyFixed12is_identicalERK8APyFixed", "APyFixed::is_identical::other"], [11, 2, 1, "_CPPv4NK8APyFixed11is_negativeEv", "APyFixed::is_negative"], [11, 2, 1, "_CPPv4NK8APyFixed11is_positiveEv", "APyFixed::is_positive"], [11, 2, 1, "_CPPv4NK8APyFixed7is_zeroEv", "APyFixed::is_zero"], [11, 2, 1, "_CPPv4NK8APyFixed5latexEv", "APyFixed::latex"], [11, 2, 1, "_CPPv4NK8APyFixed24leading_fractional_zerosEv", "APyFixed::leading_fractional_zeros"], [11, 2, 1, "_CPPv4NK8APyFixed12leading_onesEv", "APyFixed::leading_ones"], [11, 2, 1, "_CPPv4NK8APyFixed13leading_signsEv", "APyFixed::leading_signs"], [11, 2, 1, "_CPPv4NK8APyFixed13leading_zerosEv", "APyFixed::leading_zeros"], [11, 2, 1, "_CPPv4NK8APyFixedcvdEv", "APyFixed::operator double"], [11, 2, 1, "_CPPv4NK8APyFixedneEKd", "APyFixed::operator!="], [11, 2, 1, "_CPPv4NK8APyFixedneERK8APyFixed", "APyFixed::operator!="], [11, 2, 1, "_CPPv4NK8APyFixedneERKN2nb4int_E", "APyFixed::operator!="], [11, 3, 1, "_CPPv4NK8APyFixedneEKd", "APyFixed::operator!=::rhs"], [11, 3, 1, "_CPPv4NK8APyFixedneERK8APyFixed", "APyFixed::operator!=::rhs"], [11, 3, 1, "_CPPv4NK8APyFixedneERKN2nb4int_E", "APyFixed::operator!=::rhs"], [11, 2, 1, "_CPPv4NK8APyFixedmlERK8APyFixed", "APyFixed::operator*"], [11, 2, 1, "_CPPv4NK8APyFixedmlERKN2nb4int_E", "APyFixed::operator*"], [11, 3, 1, "_CPPv4NK8APyFixedmlERK8APyFixed", "APyFixed::operator*::rhs"], [11, 3, 1, "_CPPv4NK8APyFixedmlERKN2nb4int_E", "APyFixed::operator*::rhs"], [11, 2, 1, "_CPPv4NK8APyFixedplERK8APyFixed", "APyFixed::operator+"], [11, 2, 1, "_CPPv4NK8APyFixedplERKN2nb4int_E", "APyFixed::operator+"], [11, 3, 1, "_CPPv4NK8APyFixedplERK8APyFixed", "APyFixed::operator+::rhs"], [11, 3, 1, "_CPPv4NK8APyFixedplERKN2nb4int_E", "APyFixed::operator+::rhs"], [11, 2, 1, "_CPPv4NK8APyFixedmiERK8APyFixed", "APyFixed::operator-"], [11, 2, 1, "_CPPv4NK8APyFixedmiERKN2nb4int_E", "APyFixed::operator-"], [11, 2, 1, "_CPPv4NK8APyFixedmiEv", "APyFixed::operator-"], [11, 3, 1, "_CPPv4NK8APyFixedmiERK8APyFixed", "APyFixed::operator-::rhs"], [11, 3, 1, "_CPPv4NK8APyFixedmiERKN2nb4int_E", "APyFixed::operator-::rhs"], [11, 2, 1, "_CPPv4NK8APyFixeddvERK8APyFixed", "APyFixed::operator/"], [11, 2, 1, "_CPPv4NK8APyFixeddvERKN2nb4int_E", "APyFixed::operator/"], [11, 3, 1, "_CPPv4NK8APyFixeddvERK8APyFixed", "APyFixed::operator/::rhs"], [11, 3, 1, "_CPPv4NK8APyFixeddvERKN2nb4int_E", "APyFixed::operator/::rhs"], [11, 2, 1, "_CPPv4NK8APyFixedltEKd", "APyFixed::operator&lt;"], [11, 2, 1, "_CPPv4NK8APyFixedltERK8APyFixed", "APyFixed::operator&lt;"], [11, 2, 1, "_CPPv4NK8APyFixedltERKN2nb4int_E", "APyFixed::operator&lt;"], [11, 3, 1, "_CPPv4NK8APyFixedltEKd", "APyFixed::operator&lt;::rhs"], [11, 3, 1, "_CPPv4NK8APyFixedltERK8APyFixed", "APyFixed::operator&lt;::rhs"], [11, 3, 1, "_CPPv4NK8APyFixedltERKN2nb4int_E", "APyFixed::operator&lt;::rhs"], [11, 2, 1, "_CPPv4NK8APyFixedlsEKi", "APyFixed::operator&lt;&lt;"], [11, 3, 1, "_CPPv4NK8APyFixedlsEKi", "APyFixed::operator&lt;&lt;::shift_val"], [11, 2, 1, "_CPPv4N8APyFixedlSEKi", "APyFixed::operator&lt;&lt;="], [11, 3, 1, "_CPPv4N8APyFixedlSEKi", "APyFixed::operator&lt;&lt;=::shift_val"], [11, 2, 1, "_CPPv4NK8APyFixedleEKd", "APyFixed::operator&lt;="], [11, 2, 1, "_CPPv4NK8APyFixedleERK8APyFixed", "APyFixed::operator&lt;="], [11, 2, 1, "_CPPv4NK8APyFixedleERKN2nb4int_E", "APyFixed::operator&lt;="], [11, 3, 1, "_CPPv4NK8APyFixedleEKd", "APyFixed::operator&lt;=::rhs"], [11, 3, 1, "_CPPv4NK8APyFixedleERK8APyFixed", "APyFixed::operator&lt;=::rhs"], [11, 3, 1, "_CPPv4NK8APyFixedleERKN2nb4int_E", "APyFixed::operator&lt;=::rhs"], [11, 2, 1, "_CPPv4NK8APyFixedeqEKd", "APyFixed::operator=="], [11, 2, 1, "_CPPv4NK8APyFixedeqERK8APyFixed", "APyFixed::operator=="], [11, 2, 1, "_CPPv4NK8APyFixedeqERKN2nb4int_E", "APyFixed::operator=="], [11, 3, 1, "_CPPv4NK8APyFixedeqEKd", "APyFixed::operator==::rhs"], [11, 3, 1, "_CPPv4NK8APyFixedeqERK8APyFixed", "APyFixed::operator==::rhs"], [11, 3, 1, "_CPPv4NK8APyFixedeqERKN2nb4int_E", "APyFixed::operator==::rhs"], [11, 2, 1, "_CPPv4NK8APyFixedgtEKd", "APyFixed::operator&gt;"], [11, 2, 1, "_CPPv4NK8APyFixedgtERK8APyFixed", "APyFixed::operator&gt;"], [11, 2, 1, "_CPPv4NK8APyFixedgtERKN2nb4int_E", "APyFixed::operator&gt;"], [11, 3, 1, "_CPPv4NK8APyFixedgtEKd", "APyFixed::operator&gt;::rhs"], [11, 3, 1, "_CPPv4NK8APyFixedgtERK8APyFixed", "APyFixed::operator&gt;::rhs"], [11, 3, 1, "_CPPv4NK8APyFixedgtERKN2nb4int_E", "APyFixed::operator&gt;::rhs"], [11, 2, 1, "_CPPv4NK8APyFixedgeEKd", "APyFixed::operator&gt;="], [11, 2, 1, "_CPPv4NK8APyFixedgeERK8APyFixed", "APyFixed::operator&gt;="], [11, 2, 1, "_CPPv4NK8APyFixedgeERKN2nb4int_E", "APyFixed::operator&gt;="], [11, 3, 1, "_CPPv4NK8APyFixedgeEKd", "APyFixed::operator&gt;=::rhs"], [11, 3, 1, "_CPPv4NK8APyFixedgeERK8APyFixed", "APyFixed::operator&gt;=::rhs"], [11, 3, 1, "_CPPv4NK8APyFixedgeERKN2nb4int_E", "APyFixed::operator&gt;=::rhs"], [11, 2, 1, "_CPPv4NK8APyFixedrsEKi", "APyFixed::operator&gt;&gt;"], [11, 3, 1, "_CPPv4NK8APyFixedrsEKi", "APyFixed::operator&gt;&gt;::shift_val"], [11, 2, 1, "_CPPv4N8APyFixedrSEKi", "APyFixed::operator&gt;&gt;="], [11, 3, 1, "_CPPv4N8APyFixedrSEKi", "APyFixed::operator&gt;&gt;=::shift_val"], [11, 2, 1, "_CPPv4NK8APyFixed32positive_greater_than_equal_pow2Ei", "APyFixed::positive_greater_than_equal_pow2"], [11, 3, 1, "_CPPv4NK8APyFixed32positive_greater_than_equal_pow2Ei", "APyFixed::positive_greater_than_equal_pow2::n"], [11, 2, 1, "_CPPv4NK8APyFixed4reprEv", "APyFixed::repr"], [11, 2, 1, "_CPPv4N8APyFixed15set_from_doubleEd", "APyFixed::set_from_double"], [11, 3, 1, "_CPPv4N8APyFixed15set_from_doubleEd", "APyFixed::set_from_double::value"], [11, 2, 1, "_CPPv4N8APyFixed15set_from_stringERKNSt6stringEi", "APyFixed::set_from_string"], [11, 3, 1, "_CPPv4N8APyFixed15set_from_stringERKNSt6stringEi", "APyFixed::set_from_string::base"], [11, 3, 1, "_CPPv4N8APyFixed15set_from_stringERKNSt6stringEi", "APyFixed::set_from_string::str"], [11, 2, 1, "_CPPv4N8APyFixed19set_from_string_decERKNSt6stringE", "APyFixed::set_from_string_dec"], [11, 3, 1, "_CPPv4N8APyFixed19set_from_string_decERKNSt6stringE", "APyFixed::set_from_string_dec::str"], [11, 2, 1, "_CPPv4N8APyFixed19set_from_string_hexERKNSt6stringE", "APyFixed::set_from_string_hex"], [11, 3, 1, "_CPPv4N8APyFixed19set_from_string_hexERKNSt6stringE", "APyFixed::set_from_string_hex::str"], [11, 2, 1, "_CPPv4N8APyFixed19set_from_string_octERKNSt6stringE", "APyFixed::set_from_string_oct"], [11, 3, 1, "_CPPv4N8APyFixed19set_from_string_octERKNSt6stringE", "APyFixed::set_from_string_oct::str"], [11, 2, 1, "_CPPv4NK8APyFixed7to_bitsEv", "APyFixed::to_bits"], [11, 2, 1, "_CPPv4NK8APyFixed9to_doubleEv", "APyFixed::to_double"], [11, 2, 1, "_CPPv4NK8APyFixed9to_stringEi", "APyFixed::to_string"], [11, 3, 1, "_CPPv4NK8APyFixed9to_stringEi", "APyFixed::to_string::base"], [11, 2, 1, "_CPPv4NK8APyFixed13to_string_decEv", "APyFixed::to_string_dec"], [11, 2, 1, "_CPPv4NK8APyFixed13to_string_hexEv", "APyFixed::to_string_hex"], [11, 2, 1, "_CPPv4NK8APyFixed13to_string_octEv", "APyFixed::to_string_oct"], [11, 2, 1, "_CPPv4NK8APyFixed11vector_sizeEv", "APyFixed::vector_size"], [17, 1, 1, "_CPPv426APyFixedAccumulatorContext", "APyFixedAccumulatorContext"], [17, 2, 1, "_CPPv4N26APyFixedAccumulatorContext26APyFixedAccumulatorContextENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixedAccumulatorContext::APyFixedAccumulatorContext"], [17, 3, 1, "_CPPv4N26APyFixedAccumulatorContext26APyFixedAccumulatorContextENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixedAccumulatorContext::APyFixedAccumulatorContext::bits"], [17, 3, 1, "_CPPv4N26APyFixedAccumulatorContext26APyFixedAccumulatorContextENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixedAccumulatorContext::APyFixedAccumulatorContext::frac_bits"], [17, 3, 1, "_CPPv4N26APyFixedAccumulatorContext26APyFixedAccumulatorContextENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixedAccumulatorContext::APyFixedAccumulatorContext::int_bits"], [17, 3, 1, "_CPPv4N26APyFixedAccumulatorContext26APyFixedAccumulatorContextENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixedAccumulatorContext::APyFixedAccumulatorContext::overflow"], [17, 3, 1, "_CPPv4N26APyFixedAccumulatorContext26APyFixedAccumulatorContextENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixedAccumulatorContext::APyFixedAccumulatorContext::quantization"], [17, 5, 1, "_CPPv4N26APyFixedAccumulatorContext12current_modeE", "APyFixedAccumulatorContext::current_mode"], [17, 2, 1, "_CPPv4N26APyFixedAccumulatorContext13enter_contextEv", "APyFixedAccumulatorContext::enter_context"], [17, 2, 1, "_CPPv4N26APyFixedAccumulatorContext12exit_contextEv", "APyFixedAccumulatorContext::exit_context"], [17, 5, 1, "_CPPv4N26APyFixedAccumulatorContext13previous_modeE", "APyFixedAccumulatorContext::previous_mode"], [17, 1, 1, "_CPPv425APyFixedAccumulatorOption", "APyFixedAccumulatorOption"], [17, 5, 1, "_CPPv4N25APyFixedAccumulatorOption4bitsE", "APyFixedAccumulatorOption::bits"], [17, 5, 1, "_CPPv4N25APyFixedAccumulatorOption8int_bitsE", "APyFixedAccumulatorOption::int_bits"], [17, 5, 1, "_CPPv4N25APyFixedAccumulatorOption8overflowE", "APyFixedAccumulatorOption::overflow"], [17, 5, 1, "_CPPv4N25APyFixedAccumulatorOption12quantizationE", "APyFixedAccumulatorOption::quantization"], [13, 1, 1, "_CPPv413APyFixedArray", "APyFixedArray"], [13, 2, 1, "_CPPv4N13APyFixedArray13APyFixedArrayERKN2nb8sequenceENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::APyFixedArray"], [13, 2, 1, "_CPPv4N13APyFixedArray13APyFixedArrayERKNSt6vectorINSt6size_tEEENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::APyFixedArray"], [13, 2, 1, "_CPPv4N13APyFixedArray13APyFixedArrayERKNSt6vectorINSt6size_tEEEii", "APyFixedArray::APyFixedArray"], [13, 2, 1, "_CPPv4N13APyFixedArray13APyFixedArrayEv", "APyFixedArray::APyFixedArray"], [13, 3, 1, "_CPPv4N13APyFixedArray13APyFixedArrayERKN2nb8sequenceENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::APyFixedArray::bit_pattern_sequence"], [13, 3, 1, "_CPPv4N13APyFixedArray13APyFixedArrayERKN2nb8sequenceENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::APyFixedArray::bits"], [13, 3, 1, "_CPPv4N13APyFixedArray13APyFixedArrayERKNSt6vectorINSt6size_tEEENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::APyFixedArray::bits"], [13, 3, 1, "_CPPv4N13APyFixedArray13APyFixedArrayERKNSt6vectorINSt6size_tEEEii", "APyFixedArray::APyFixedArray::bits"], [13, 3, 1, "_CPPv4N13APyFixedArray13APyFixedArrayERKN2nb8sequenceENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::APyFixedArray::frac_bits"], [13, 3, 1, "_CPPv4N13APyFixedArray13APyFixedArrayERKNSt6vectorINSt6size_tEEENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::APyFixedArray::frac_bits"], [13, 3, 1, "_CPPv4N13APyFixedArray13APyFixedArrayERKN2nb8sequenceENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::APyFixedArray::int_bits"], [13, 3, 1, "_CPPv4N13APyFixedArray13APyFixedArrayERKNSt6vectorINSt6size_tEEENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::APyFixedArray::int_bits"], [13, 3, 1, "_CPPv4N13APyFixedArray13APyFixedArrayERKNSt6vectorINSt6size_tEEEii", "APyFixedArray::APyFixedArray::int_bits"], [13, 3, 1, "_CPPv4N13APyFixedArray13APyFixedArrayERKNSt6vectorINSt6size_tEEENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::APyFixedArray::shape"], [13, 3, 1, "_CPPv4N13APyFixedArray13APyFixedArrayERKNSt6vectorINSt6size_tEEEii", "APyFixedArray::APyFixedArray::shape"], [13, 2, 1, "_CPPv4NK13APyFixedArray3absEv", "APyFixedArray::abs"], [13, 2, 1, "_CPPv4NK13APyFixedArray4bitsEv", "APyFixedArray::bits"], [13, 2, 1, "_CPPv4NK13APyFixedArray12broadcast_toEKNSt6vectorINSt6size_tEEE", "APyFixedArray::broadcast_to"], [13, 3, 1, "_CPPv4NK13APyFixedArray12broadcast_toEKNSt6vectorINSt6size_tEEE", "APyFixedArray::broadcast_to::shape"], [13, 2, 1, "_CPPv4NK13APyFixedArray19broadcast_to_pythonEKNSt7variantIN2nb5tupleEN2nb4int_EEE", "APyFixedArray::broadcast_to_python"], [13, 3, 1, "_CPPv4NK13APyFixedArray19broadcast_to_pythonEKNSt7variantIN2nb5tupleEN2nb4int_EEE", "APyFixedArray::broadcast_to_python::shape"], [13, 2, 1, "_CPPv4NK13APyFixedArray4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixedArray::cast"], [13, 3, 1, "_CPPv4NK13APyFixedArray4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixedArray::cast::bits"], [13, 3, 1, "_CPPv4NK13APyFixedArray4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixedArray::cast::frac_bits"], [13, 3, 1, "_CPPv4NK13APyFixedArray4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixedArray::cast::int_bits"], [13, 3, 1, "_CPPv4NK13APyFixedArray4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixedArray::cast::overflow"], [13, 3, 1, "_CPPv4NK13APyFixedArray4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEENSt8optionalIiEE", "APyFixedArray::cast::quantization"], [13, 2, 1, "_CPPv4NK13APyFixedArray9frac_bitsEv", "APyFixedArray::frac_bits"], [13, 2, 1, "_CPPv4N13APyFixedArray10from_arrayERKN2nb7ndarrayIN2nb8c_contigEEENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::from_array"], [13, 3, 1, "_CPPv4N13APyFixedArray10from_arrayERKN2nb7ndarrayIN2nb8c_contigEEENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::from_array::bits"], [13, 3, 1, "_CPPv4N13APyFixedArray10from_arrayERKN2nb7ndarrayIN2nb8c_contigEEENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::from_array::double_seq"], [13, 3, 1, "_CPPv4N13APyFixedArray10from_arrayERKN2nb7ndarrayIN2nb8c_contigEEENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::from_array::frac_bits"], [13, 3, 1, "_CPPv4N13APyFixedArray10from_arrayERKN2nb7ndarrayIN2nb8c_contigEEENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::from_array::int_bits"], [13, 2, 1, "_CPPv4N13APyFixedArray11from_doubleERKN2nb8sequenceENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::from_double"], [13, 3, 1, "_CPPv4N13APyFixedArray11from_doubleERKN2nb8sequenceENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::from_double::bits"], [13, 3, 1, "_CPPv4N13APyFixedArray11from_doubleERKN2nb8sequenceENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::from_double::double_seq"], [13, 3, 1, "_CPPv4N13APyFixedArray11from_doubleERKN2nb8sequenceENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::from_double::frac_bits"], [13, 3, 1, "_CPPv4N13APyFixedArray11from_doubleERKN2nb8sequenceENSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "APyFixedArray::from_double::int_bits"], [13, 2, 1, "_CPPv4NK13APyFixedArray8get_itemENSt6size_tE", "APyFixedArray::get_item"], [13, 3, 1, "_CPPv4NK13APyFixedArray8get_itemENSt6size_tE", "APyFixedArray::get_item::idx"], [13, 2, 1, "_CPPv4NK13APyFixedArray8int_bitsEv", "APyFixedArray::int_bits"], [13, 2, 1, "_CPPv4NK13APyFixedArray12is_identicalERK13APyFixedArray", "APyFixedArray::is_identical"], [13, 3, 1, "_CPPv4NK13APyFixedArray12is_identicalERK13APyFixedArray", "APyFixedArray::is_identical::other"], [13, 2, 1, "_CPPv4NK13APyFixedArray6matmulERK13APyFixedArray", "APyFixedArray::matmul"], [13, 3, 1, "_CPPv4NK13APyFixedArray6matmulERK13APyFixedArray", "APyFixedArray::matmul::rhs"], [13, 2, 1, "_CPPv4NK13APyFixedArray4ndimEv", "APyFixedArray::ndim"], [13, 2, 1, "_CPPv4NK13APyFixedArraymlERK13APyFixedArray", "APyFixedArray::operator*"], [13, 2, 1, "_CPPv4NK13APyFixedArraymlERK8APyFixed", "APyFixedArray::operator*"], [13, 3, 1, "_CPPv4NK13APyFixedArraymlERK13APyFixedArray", "APyFixedArray::operator*::rhs"], [13, 3, 1, "_CPPv4NK13APyFixedArraymlERK8APyFixed", "APyFixedArray::operator*::rhs"], [13, 2, 1, "_CPPv4NK13APyFixedArrayplERK13APyFixedArray", "APyFixedArray::operator+"], [13, 2, 1, "_CPPv4NK13APyFixedArrayplERK8APyFixed", "APyFixedArray::operator+"], [13, 3, 1, "_CPPv4NK13APyFixedArrayplERK13APyFixedArray", "APyFixedArray::operator+::rhs"], [13, 3, 1, "_CPPv4NK13APyFixedArrayplERK8APyFixed", "APyFixedArray::operator+::rhs"], [13, 2, 1, "_CPPv4NK13APyFixedArraymiERK13APyFixedArray", "APyFixedArray::operator-"], [13, 2, 1, "_CPPv4NK13APyFixedArraymiERK8APyFixed", "APyFixedArray::operator-"], [13, 2, 1, "_CPPv4NK13APyFixedArraymiEv", "APyFixedArray::operator-"], [13, 3, 1, "_CPPv4NK13APyFixedArraymiERK13APyFixedArray", "APyFixedArray::operator-::rhs"], [13, 3, 1, "_CPPv4NK13APyFixedArraymiERK8APyFixed", "APyFixedArray::operator-::rhs"], [13, 2, 1, "_CPPv4NK13APyFixedArraydvERK13APyFixedArray", "APyFixedArray::operator/"], [13, 2, 1, "_CPPv4NK13APyFixedArraydvERK8APyFixed", "APyFixedArray::operator/"], [13, 3, 1, "_CPPv4NK13APyFixedArraydvERK13APyFixedArray", "APyFixedArray::operator/::rhs"], [13, 3, 1, "_CPPv4NK13APyFixedArraydvERK8APyFixed", "APyFixedArray::operator/::rhs"], [13, 2, 1, "_CPPv4NK13APyFixedArraylsEKi", "APyFixedArray::operator&lt;&lt;"], [13, 3, 1, "_CPPv4NK13APyFixedArraylsEKi", "APyFixedArray::operator&lt;&lt;::shift_val"], [13, 2, 1, "_CPPv4N13APyFixedArraylSEKi", "APyFixedArray::operator&lt;&lt;="], [13, 3, 1, "_CPPv4N13APyFixedArraylSEKi", "APyFixedArray::operator&lt;&lt;=::shift_val"], [13, 2, 1, "_CPPv4NK13APyFixedArrayrsEKi", "APyFixedArray::operator&gt;&gt;"], [13, 3, 1, "_CPPv4NK13APyFixedArrayrsEKi", "APyFixedArray::operator&gt;&gt;::shift_val"], [13, 2, 1, "_CPPv4N13APyFixedArrayrSEKi", "APyFixedArray::operator&gt;&gt;="], [13, 3, 1, "_CPPv4N13APyFixedArrayrSEKi", "APyFixedArray::operator&gt;&gt;=::shift_val"], [13, 2, 1, "_CPPv4NK13APyFixedArray4rdivERK8APyFixed", "APyFixedArray::rdiv"], [13, 3, 1, "_CPPv4NK13APyFixedArray4rdivERK8APyFixed", "APyFixedArray::rdiv::rhs"], [13, 2, 1, "_CPPv4NK13APyFixedArray4reprEv", "APyFixedArray::repr"], [13, 2, 1, "_CPPv4NK13APyFixedArray7reshapeEN2nb5tupleE", "APyFixedArray::reshape"], [13, 3, 1, "_CPPv4NK13APyFixedArray7reshapeEN2nb5tupleE", "APyFixedArray::reshape::new_shape"], [13, 2, 1, "_CPPv4NK13APyFixedArray4rsubERK8APyFixed", "APyFixedArray::rsub"], [13, 3, 1, "_CPPv4NK13APyFixedArray4rsubERK8APyFixed", "APyFixedArray::rsub::rhs"], [13, 2, 1, "_CPPv4NK13APyFixedArray5shapeEv", "APyFixedArray::shape"], [13, 2, 1, "_CPPv4NK13APyFixedArray4sizeEv", "APyFixedArray::size"], [13, 2, 1, "_CPPv4NK13APyFixedArray7squeezeENSt8optionalINSt7variantIN2nb4int_EN2nb5tupleEEEEE", "APyFixedArray::squeeze"], [13, 3, 1, "_CPPv4NK13APyFixedArray7squeezeENSt8optionalINSt7variantIN2nb4int_EN2nb5tupleEEEEE", "APyFixedArray::squeeze::axis"], [13, 2, 1, "_CPPv4NK13APyFixedArray8to_numpyEv", "APyFixedArray::to_numpy"], [13, 2, 1, "_CPPv4NK13APyFixedArray9transposeEv", "APyFixedArray::transpose"], [17, 1, 1, "_CPPv419APyFixedCastContext", "APyFixedCastContext"], [17, 2, 1, "_CPPv4N19APyFixedCastContext19APyFixedCastContextENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEE", "APyFixedCastContext::APyFixedCastContext"], [17, 3, 1, "_CPPv4N19APyFixedCastContext19APyFixedCastContextENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEE", "APyFixedCastContext::APyFixedCastContext::overflow"], [17, 3, 1, "_CPPv4N19APyFixedCastContext19APyFixedCastContextENSt8optionalI16QuantizationModeEENSt8optionalI12OverflowModeEE", "APyFixedCastContext::APyFixedCastContext::quantization"], [17, 5, 1, "_CPPv4N19APyFixedCastContext12current_modeE", "APyFixedCastContext::current_mode"], [17, 2, 1, "_CPPv4N19APyFixedCastContext13enter_contextEv", "APyFixedCastContext::enter_context"], [17, 2, 1, "_CPPv4N19APyFixedCastContext12exit_contextEv", "APyFixedCastContext::exit_context"], [17, 5, 1, "_CPPv4N19APyFixedCastContext13previous_modeE", "APyFixedCastContext::previous_mode"], [17, 1, 1, "_CPPv418APyFixedCastOption", "APyFixedCastOption"], [17, 5, 1, "_CPPv4N18APyFixedCastOption8overflowE", "APyFixedCastOption::overflow"], [17, 5, 1, "_CPPv4N18APyFixedCastOption12quantizationE", "APyFixedCastOption::quantization"], [14, 1, 1, "_CPPv48APyFloat", "APyFloat"], [14, 2, 1, "_CPPv4N8APyFloat8APyFloatENSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::APyFloat"], [14, 2, 1, "_CPPv4N8APyFloat8APyFloatENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloat::APyFloat"], [14, 2, 1, "_CPPv4N8APyFloat8APyFloatERK12APyFloatDataNSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::APyFloat"], [14, 2, 1, "_CPPv4N8APyFloat8APyFloatEb5exp_t5man_tNSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::APyFloat"], [14, 2, 1, "_CPPv4N8APyFloat8APyFloatEb5exp_t5man_tNSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloat::APyFloat"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatENSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::APyFloat::bias"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloat::APyFloat::bias"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatERK12APyFloatDataNSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::APyFloat::bias"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatEb5exp_t5man_tNSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::APyFloat::bias"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatEb5exp_t5man_tNSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloat::APyFloat::bias"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatERK12APyFloatDataNSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::APyFloat::data"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatEb5exp_t5man_tNSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::APyFloat::exp"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatEb5exp_t5man_tNSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloat::APyFloat::exp"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatENSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::APyFloat::exp_bits"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloat::APyFloat::exp_bits"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatERK12APyFloatDataNSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::APyFloat::exp_bits"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatEb5exp_t5man_tNSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::APyFloat::exp_bits"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatEb5exp_t5man_tNSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloat::APyFloat::exp_bits"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatEb5exp_t5man_tNSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::APyFloat::man"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatEb5exp_t5man_tNSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloat::APyFloat::man"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatENSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::APyFloat::man_bits"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloat::APyFloat::man_bits"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatERK12APyFloatDataNSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::APyFloat::man_bits"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatEb5exp_t5man_tNSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::APyFloat::man_bits"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatEb5exp_t5man_tNSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloat::APyFloat::man_bits"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatEb5exp_t5man_tNSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::APyFloat::sign"], [14, 3, 1, "_CPPv4N8APyFloat8APyFloatEb5exp_t5man_tNSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloat::APyFloat::sign"], [14, 2, 1, "_CPPv4NK8APyFloat5_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", "APyFloat::_cast"], [14, 2, 1, "_CPPv4NK8APyFloat5_castENSt7uint8_tENSt7uint8_tE5exp_tNSt8optionalI16QuantizationModeEE", "APyFloat::_cast"], [14, 3, 1, "_CPPv4NK8APyFloat5_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", "APyFloat::_cast::bias"], [14, 3, 1, "_CPPv4NK8APyFloat5_castENSt7uint8_tENSt7uint8_tE5exp_tNSt8optionalI16QuantizationModeEE", "APyFloat::_cast::bias"], [14, 3, 1, "_CPPv4NK8APyFloat5_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", "APyFloat::_cast::exp_bits"], [14, 3, 1, "_CPPv4NK8APyFloat5_castENSt7uint8_tENSt7uint8_tE5exp_tNSt8optionalI16QuantizationModeEE", "APyFloat::_cast::exp_bits"], [14, 3, 1, "_CPPv4NK8APyFloat5_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", "APyFloat::_cast::man_bits"], [14, 3, 1, "_CPPv4NK8APyFloat5_castENSt7uint8_tENSt7uint8_tE5exp_tNSt8optionalI16QuantizationModeEE", "APyFloat::_cast::man_bits"], [14, 3, 1, "_CPPv4NK8APyFloat5_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", "APyFloat::_cast::quantization"], [14, 3, 1, "_CPPv4NK8APyFloat5_castENSt7uint8_tENSt7uint8_tE5exp_tNSt8optionalI16QuantizationModeEE", "APyFloat::_cast::quantization"], [14, 2, 1, "_CPPv4NK8APyFloat15_cast_to_doubleEv", "APyFloat::_cast_to_double"], [14, 2, 1, "_CPPv4NK8APyFloat13_checked_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", "APyFloat::_checked_cast"], [14, 3, 1, "_CPPv4NK8APyFloat13_checked_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", "APyFloat::_checked_cast::bias"], [14, 3, 1, "_CPPv4NK8APyFloat13_checked_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", "APyFloat::_checked_cast::exp_bits"], [14, 3, 1, "_CPPv4NK8APyFloat13_checked_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", "APyFloat::_checked_cast::man_bits"], [14, 3, 1, "_CPPv4NK8APyFloat13_checked_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", "APyFloat::_checked_cast::quantization"], [14, 2, 1, "_CPPv4NK8APyFloat3absEv", "APyFloat::abs"], [14, 2, 1, "_CPPv4NK8APyFloat4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI5exp_tEENSt8optionalI16QuantizationModeEE", "APyFloat::cast"], [14, 3, 1, "_CPPv4NK8APyFloat4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI5exp_tEENSt8optionalI16QuantizationModeEE", "APyFloat::cast::bias"], [14, 3, 1, "_CPPv4NK8APyFloat4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI5exp_tEENSt8optionalI16QuantizationModeEE", "APyFloat::cast::exp_bits"], [14, 3, 1, "_CPPv4NK8APyFloat4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI5exp_tEENSt8optionalI16QuantizationModeEE", "APyFloat::cast::man_bits"], [14, 3, 1, "_CPPv4NK8APyFloat4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI5exp_tEENSt8optionalI16QuantizationModeEE", "APyFloat::cast::quantization"], [14, 2, 1, "_CPPv4NK8APyFloat16cast_from_doubleENSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::cast_from_double"], [14, 3, 1, "_CPPv4NK8APyFloat16cast_from_doubleENSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::cast_from_double::bias"], [14, 3, 1, "_CPPv4NK8APyFloat16cast_from_doubleENSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::cast_from_double::exp_bits"], [14, 3, 1, "_CPPv4NK8APyFloat16cast_from_doubleENSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::cast_from_double::man_bits"], [14, 2, 1, "_CPPv4N8APyFloat13cast_mantissaENSt7uint8_tE16QuantizationMode", "APyFloat::cast_mantissa"], [14, 3, 1, "_CPPv4N8APyFloat13cast_mantissaENSt7uint8_tE16QuantizationMode", "APyFloat::cast_mantissa::man_bits"], [14, 3, 1, "_CPPv4N8APyFloat13cast_mantissaENSt7uint8_tE16QuantizationMode", "APyFloat::cast_mantissa::quantization"], [14, 2, 1, "_CPPv4N8APyFloat21cast_mantissa_shorterENSt7uint8_tE16QuantizationMode", "APyFloat::cast_mantissa_shorter"], [14, 3, 1, "_CPPv4N8APyFloat21cast_mantissa_shorterENSt7uint8_tE16QuantizationMode", "APyFloat::cast_mantissa_shorter::man_bits"], [14, 3, 1, "_CPPv4N8APyFloat21cast_mantissa_shorterENSt7uint8_tE16QuantizationMode", "APyFloat::cast_mantissa_shorter::quantization"], [14, 2, 1, "_CPPv4N8APyFloat23cast_mantissa_subnormalENSt7uint8_tE16QuantizationMode", "APyFloat::cast_mantissa_subnormal"], [14, 3, 1, "_CPPv4N8APyFloat23cast_mantissa_subnormalENSt7uint8_tE16QuantizationMode", "APyFloat::cast_mantissa_subnormal::man_bits_delta"], [14, 3, 1, "_CPPv4N8APyFloat23cast_mantissa_subnormalENSt7uint8_tE16QuantizationMode", "APyFloat::cast_mantissa_subnormal::quantization"], [14, 2, 1, "_CPPv4NK8APyFloat13cast_no_quantENSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::cast_no_quant"], [14, 2, 1, "_CPPv4NK8APyFloat13cast_no_quantENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloat::cast_no_quant"], [14, 3, 1, "_CPPv4NK8APyFloat13cast_no_quantENSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::cast_no_quant::bias"], [14, 3, 1, "_CPPv4NK8APyFloat13cast_no_quantENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloat::cast_no_quant::bias"], [14, 3, 1, "_CPPv4NK8APyFloat13cast_no_quantENSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::cast_no_quant::exp_bits"], [14, 3, 1, "_CPPv4NK8APyFloat13cast_no_quantENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloat::cast_no_quant::exp_bits"], [14, 3, 1, "_CPPv4NK8APyFloat13cast_no_quantENSt7uint8_tENSt7uint8_tE5exp_t", "APyFloat::cast_no_quant::man_bits"], [14, 3, 1, "_CPPv4NK8APyFloat13cast_no_quantENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloat::cast_no_quant::man_bits"], [14, 2, 1, "_CPPv4NK8APyFloat16cast_to_bfloat16ENSt8optionalI16QuantizationModeEE", "APyFloat::cast_to_bfloat16"], [14, 3, 1, "_CPPv4NK8APyFloat16cast_to_bfloat16ENSt8optionalI16QuantizationModeEE", "APyFloat::cast_to_bfloat16::quantization"], [14, 2, 1, "_CPPv4NK8APyFloat14cast_to_doubleENSt8optionalI16QuantizationModeEE", "APyFloat::cast_to_double"], [14, 3, 1, "_CPPv4NK8APyFloat14cast_to_doubleENSt8optionalI16QuantizationModeEE", "APyFloat::cast_to_double::quantization"], [14, 2, 1, "_CPPv4NK8APyFloat12cast_to_halfENSt8optionalI16QuantizationModeEE", "APyFloat::cast_to_half"], [14, 3, 1, "_CPPv4NK8APyFloat12cast_to_halfENSt8optionalI16QuantizationModeEE", "APyFloat::cast_to_half::quantization"], [14, 2, 1, "_CPPv4NK8APyFloat14cast_to_singleENSt8optionalI16QuantizationModeEE", "APyFloat::cast_to_single"], [14, 3, 1, "_CPPv4NK8APyFloat14cast_to_singleENSt8optionalI16QuantizationModeEE", "APyFloat::cast_to_single::quantization"], [14, 2, 1, "_CPPv4NK8APyFloat13construct_infENSt8optionalIbEE", "APyFloat::construct_inf"], [14, 3, 1, "_CPPv4NK8APyFloat13construct_infENSt8optionalIbEE", "APyFloat::construct_inf::new_sign"], [14, 2, 1, "_CPPv4NK8APyFloat13construct_nanENSt8optionalIbEE5man_t", "APyFloat::construct_nan"], [14, 3, 1, "_CPPv4NK8APyFloat13construct_nanENSt8optionalIbEE5man_t", "APyFloat::construct_nan::new_sign"], [14, 3, 1, "_CPPv4NK8APyFloat13construct_nanENSt8optionalIbEE5man_t", "APyFloat::construct_nan::payload"], [14, 2, 1, "_CPPv4NK8APyFloat14construct_zeroENSt8optionalIbEE", "APyFloat::construct_zero"], [14, 3, 1, "_CPPv4NK8APyFloat14construct_zeroENSt8optionalIbEE", "APyFloat::construct_zero::new_sign"], [14, 2, 1, "_CPPv4N8APyFloat15create_in_placeEP8APyFloati5exp_t5man_tiiNSt8optionalI5exp_tEE", "APyFloat::create_in_place"], [14, 3, 1, "_CPPv4N8APyFloat15create_in_placeEP8APyFloati5exp_t5man_tiiNSt8optionalI5exp_tEE", "APyFloat::create_in_place::apyfloat"], [14, 3, 1, "_CPPv4N8APyFloat15create_in_placeEP8APyFloati5exp_t5man_tiiNSt8optionalI5exp_tEE", "APyFloat::create_in_place::bias"], [14, 3, 1, "_CPPv4N8APyFloat15create_in_placeEP8APyFloati5exp_t5man_tiiNSt8optionalI5exp_tEE", "APyFloat::create_in_place::exp"], [14, 3, 1, "_CPPv4N8APyFloat15create_in_placeEP8APyFloati5exp_t5man_tiiNSt8optionalI5exp_tEE", "APyFloat::create_in_place::exp_bits"], [14, 3, 1, "_CPPv4N8APyFloat15create_in_placeEP8APyFloati5exp_t5man_tiiNSt8optionalI5exp_tEE", "APyFloat::create_in_place::man"], [14, 3, 1, "_CPPv4N8APyFloat15create_in_placeEP8APyFloati5exp_t5man_tiiNSt8optionalI5exp_tEE", "APyFloat::create_in_place::man_bits"], [14, 3, 1, "_CPPv4N8APyFloat15create_in_placeEP8APyFloati5exp_t5man_tiiNSt8optionalI5exp_tEE", "APyFloat::create_in_place::sign"], [14, 2, 1, "_CPPv4N8APyFloat9from_bitsEN8nanobind4int_EiiNSt8optionalI5exp_tEE", "APyFloat::from_bits"], [14, 3, 1, "_CPPv4N8APyFloat9from_bitsEN8nanobind4int_EiiNSt8optionalI5exp_tEE", "APyFloat::from_bits::bias"], [14, 3, 1, "_CPPv4N8APyFloat9from_bitsEN8nanobind4int_EiiNSt8optionalI5exp_tEE", "APyFloat::from_bits::exp_bits"], [14, 3, 1, "_CPPv4N8APyFloat9from_bitsEN8nanobind4int_EiiNSt8optionalI5exp_tEE", "APyFloat::from_bits::man_bits"], [14, 3, 1, "_CPPv4N8APyFloat9from_bitsEN8nanobind4int_EiiNSt8optionalI5exp_tEE", "APyFloat::from_bits::python_long_int_bit_pattern"], [14, 2, 1, "_CPPv4N8APyFloat11from_doubleEdiiNSt8optionalI5exp_tEE", "APyFloat::from_double"], [14, 3, 1, "_CPPv4N8APyFloat11from_doubleEdiiNSt8optionalI5exp_tEE", "APyFloat::from_double::bias"], [14, 3, 1, "_CPPv4N8APyFloat11from_doubleEdiiNSt8optionalI5exp_tEE", "APyFloat::from_double::exp_bits"], [14, 3, 1, "_CPPv4N8APyFloat11from_doubleEdiiNSt8optionalI5exp_tEE", "APyFloat::from_double::man_bits"], [14, 3, 1, "_CPPv4N8APyFloat11from_doubleEdiiNSt8optionalI5exp_tEE", "APyFloat::from_double::value"], [14, 2, 1, "_CPPv4N8APyFloat12from_integerEKN2nb4int_EiiNSt8optionalI5exp_tEE", "APyFloat::from_integer"], [14, 3, 1, "_CPPv4N8APyFloat12from_integerEKN2nb4int_EiiNSt8optionalI5exp_tEE", "APyFloat::from_integer::bias"], [14, 3, 1, "_CPPv4N8APyFloat12from_integerEKN2nb4int_EiiNSt8optionalI5exp_tEE", "APyFloat::from_integer::exp_bits"], [14, 3, 1, "_CPPv4N8APyFloat12from_integerEKN2nb4int_EiiNSt8optionalI5exp_tEE", "APyFloat::from_integer::man_bits"], [14, 3, 1, "_CPPv4N8APyFloat12from_integerEKN2nb4int_EiiNSt8optionalI5exp_tEE", "APyFloat::from_integer::value"], [14, 2, 1, "_CPPv4N8APyFloat11from_numberERKN2nb6objectEiiNSt8optionalI5exp_tEE", "APyFloat::from_number"], [14, 3, 1, "_CPPv4N8APyFloat11from_numberERKN2nb6objectEiiNSt8optionalI5exp_tEE", "APyFloat::from_number::bias"], [14, 3, 1, "_CPPv4N8APyFloat11from_numberERKN2nb6objectEiiNSt8optionalI5exp_tEE", "APyFloat::from_number::exp_bits"], [14, 3, 1, "_CPPv4N8APyFloat11from_numberERKN2nb6objectEiiNSt8optionalI5exp_tEE", "APyFloat::from_number::man_bits"], [14, 3, 1, "_CPPv4N8APyFloat11from_numberERKN2nb6objectEiiNSt8optionalI5exp_tEE", "APyFloat::from_number::py_obj"], [14, 2, 1, "_CPPv4NK8APyFloat8get_biasEv", "APyFloat::get_bias"], [14, 2, 1, "_CPPv4NK8APyFloat8get_bitsEv", "APyFloat::get_bits"], [14, 2, 1, "_CPPv4NK8APyFloat8get_dataEv", "APyFloat::get_data"], [14, 2, 1, "_CPPv4NK8APyFloat7get_expEv", "APyFloat::get_exp"], [14, 2, 1, "_CPPv4NK8APyFloat12get_exp_bitsEv", "APyFloat::get_exp_bits"], [14, 2, 1, "_CPPv4NK8APyFloat7get_manEv", "APyFloat::get_man"], [14, 2, 1, "_CPPv4NK8APyFloat12get_man_bitsEv", "APyFloat::get_man_bits"], [14, 2, 1, "_CPPv4NK8APyFloat8get_signEv", "APyFloat::get_sign"], [14, 2, 1, "_CPPv4N8APyFloat9ieee_biasENSt7uint8_tE", "APyFloat::ieee_bias"], [14, 3, 1, "_CPPv4N8APyFloat9ieee_biasENSt7uint8_tE", "APyFloat::ieee_bias::exp_bits"], [14, 2, 1, "_CPPv4NK8APyFloat9is_finiteEv", "APyFloat::is_finite"], [14, 2, 1, "_CPPv4NK8APyFloat12is_identicalERK8APyFloat", "APyFloat::is_identical"], [14, 3, 1, "_CPPv4NK8APyFloat12is_identicalERK8APyFloat", "APyFloat::is_identical::other"], [14, 2, 1, "_CPPv4NK8APyFloat6is_infEv", "APyFloat::is_inf"], [14, 2, 1, "_CPPv4NK8APyFloat15is_max_exponentEv", "APyFloat::is_max_exponent"], [14, 2, 1, "_CPPv4NK8APyFloat6is_nanEv", "APyFloat::is_nan"], [14, 2, 1, "_CPPv4NK8APyFloat9is_normalEv", "APyFloat::is_normal"], [14, 2, 1, "_CPPv4NK8APyFloat12is_subnormalEv", "APyFloat::is_subnormal"], [14, 2, 1, "_CPPv4NK8APyFloat7is_zeroEv", "APyFloat::is_zero"], [14, 2, 1, "_CPPv4NK8APyFloat5latexEv", "APyFloat::latex"], [14, 2, 1, "_CPPv4NK8APyFloat9next_downEv", "APyFloat::next_down"], [14, 2, 1, "_CPPv4NK8APyFloat7next_upEv", "APyFloat::next_up"], [14, 2, 1, "_CPPv4NK8APyFloatcvdEv", "APyFloat::operator double"], [14, 2, 1, "_CPPv4NK8APyFloatneEKd", "APyFloat::operator!="], [14, 2, 1, "_CPPv4NK8APyFloatneERK8APyFixed", "APyFloat::operator!="], [14, 2, 1, "_CPPv4NK8APyFloatneERK8APyFloat", "APyFloat::operator!="], [14, 3, 1, "_CPPv4NK8APyFloatneEKd", "APyFloat::operator!=::rhs"], [14, 3, 1, "_CPPv4NK8APyFloatneERK8APyFixed", "APyFloat::operator!=::rhs"], [14, 3, 1, "_CPPv4NK8APyFloatneERK8APyFloat", "APyFloat::operator!=::rhs"], [14, 2, 1, "_CPPv4NK8APyFloatanERK8APyFloat", "APyFloat::operator&amp;"], [14, 3, 1, "_CPPv4NK8APyFloatanERK8APyFloat", "APyFloat::operator&amp;::rhs"], [14, 2, 1, "_CPPv4NK8APyFloatmlERK8APyFloat", "APyFloat::operator*"], [14, 3, 1, "_CPPv4NK8APyFloatmlERK8APyFloat", "APyFloat::operator*::rhs"], [14, 2, 1, "_CPPv4NK8APyFloatplERK8APyFloat", "APyFloat::operator+"], [14, 3, 1, "_CPPv4NK8APyFloatplERK8APyFloat", "APyFloat::operator+::rhs"], [14, 2, 1, "_CPPv4N8APyFloatpLERK8APyFloat", "APyFloat::operator+="], [14, 3, 1, "_CPPv4N8APyFloatpLERK8APyFloat", "APyFloat::operator+=::rhs"], [14, 2, 1, "_CPPv4NK8APyFloatmiERK8APyFloat", "APyFloat::operator-"], [14, 2, 1, "_CPPv4NK8APyFloatmiEv", "APyFloat::operator-"], [14, 3, 1, "_CPPv4NK8APyFloatmiERK8APyFloat", "APyFloat::operator-::rhs"], [14, 2, 1, "_CPPv4NK8APyFloatdvERK8APyFloat", "APyFloat::operator/"], [14, 3, 1, "_CPPv4NK8APyFloatdvERK8APyFloat", "APyFloat::operator/::rhs"], [14, 2, 1, "_CPPv4NK8APyFloatltEKd", "APyFloat::operator&lt;"], [14, 2, 1, "_CPPv4NK8APyFloatltERK8APyFixed", "APyFloat::operator&lt;"], [14, 2, 1, "_CPPv4NK8APyFloatltERK8APyFloat", "APyFloat::operator&lt;"], [14, 3, 1, "_CPPv4NK8APyFloatltEKd", "APyFloat::operator&lt;::rhs"], [14, 3, 1, "_CPPv4NK8APyFloatltERK8APyFixed", "APyFloat::operator&lt;::rhs"], [14, 3, 1, "_CPPv4NK8APyFloatltERK8APyFloat", "APyFloat::operator&lt;::rhs"], [14, 2, 1, "_CPPv4NK8APyFloatleEKd", "APyFloat::operator&lt;="], [14, 2, 1, "_CPPv4NK8APyFloatleERK8APyFixed", "APyFloat::operator&lt;="], [14, 2, 1, "_CPPv4NK8APyFloatleERK8APyFloat", "APyFloat::operator&lt;="], [14, 3, 1, "_CPPv4NK8APyFloatleEKd", "APyFloat::operator&lt;=::rhs"], [14, 3, 1, "_CPPv4NK8APyFloatleERK8APyFixed", "APyFloat::operator&lt;=::rhs"], [14, 3, 1, "_CPPv4NK8APyFloatleERK8APyFloat", "APyFloat::operator&lt;=::rhs"], [14, 2, 1, "_CPPv4NK8APyFloateqEKd", "APyFloat::operator=="], [14, 2, 1, "_CPPv4NK8APyFloateqERK8APyFixed", "APyFloat::operator=="], [14, 2, 1, "_CPPv4NK8APyFloateqERK8APyFloat", "APyFloat::operator=="], [14, 3, 1, "_CPPv4NK8APyFloateqEKd", "APyFloat::operator==::rhs"], [14, 3, 1, "_CPPv4NK8APyFloateqERK8APyFixed", "APyFloat::operator==::rhs"], [14, 3, 1, "_CPPv4NK8APyFloateqERK8APyFloat", "APyFloat::operator==::rhs"], [14, 2, 1, "_CPPv4NK8APyFloatgtEKd", "APyFloat::operator&gt;"], [14, 2, 1, "_CPPv4NK8APyFloatgtERK8APyFixed", "APyFloat::operator&gt;"], [14, 2, 1, "_CPPv4NK8APyFloatgtERK8APyFloat", "APyFloat::operator&gt;"], [14, 3, 1, "_CPPv4NK8APyFloatgtEKd", "APyFloat::operator&gt;::rhs"], [14, 3, 1, "_CPPv4NK8APyFloatgtERK8APyFixed", "APyFloat::operator&gt;::rhs"], [14, 3, 1, "_CPPv4NK8APyFloatgtERK8APyFloat", "APyFloat::operator&gt;::rhs"], [14, 2, 1, "_CPPv4NK8APyFloatgeEKd", "APyFloat::operator&gt;="], [14, 2, 1, "_CPPv4NK8APyFloatgeERK8APyFixed", "APyFloat::operator&gt;="], [14, 2, 1, "_CPPv4NK8APyFloatgeERK8APyFloat", "APyFloat::operator&gt;="], [14, 3, 1, "_CPPv4NK8APyFloatgeEKd", "APyFloat::operator&gt;=::rhs"], [14, 3, 1, "_CPPv4NK8APyFloatgeERK8APyFixed", "APyFloat::operator&gt;=::rhs"], [14, 3, 1, "_CPPv4NK8APyFloatgeERK8APyFloat", "APyFloat::operator&gt;=::rhs"], [14, 2, 1, "_CPPv4NK8APyFloateoERK8APyFloat", "APyFloat::operator^"], [14, 3, 1, "_CPPv4NK8APyFloateoERK8APyFloat", "APyFloat::operator^::rhs"], [14, 2, 1, "_CPPv4NK8APyFloatorERK8APyFloat", "APyFloat::operator|"], [14, 3, 1, "_CPPv4NK8APyFloatorERK8APyFloat", "APyFloat::operator|::rhs"], [14, 2, 1, "_CPPv4NK8APyFloatcoEv", "APyFloat::operator~"], [14, 2, 1, "_CPPv4N8APyFloat3powERK8APyFloatRK8APyFloat", "APyFloat::pow"], [14, 3, 1, "_CPPv4N8APyFloat3powERK8APyFloatRK8APyFloat", "APyFloat::pow::x"], [14, 3, 1, "_CPPv4N8APyFloat3powERK8APyFloatRK8APyFloat", "APyFloat::pow::y"], [14, 2, 1, "_CPPv4N8APyFloat4pownERK8APyFloati", "APyFloat::pown"], [14, 3, 1, "_CPPv4N8APyFloat4pownERK8APyFloati", "APyFloat::pown::n"], [14, 3, 1, "_CPPv4N8APyFloat4pownERK8APyFloati", "APyFloat::pown::x"], [14, 2, 1, "_CPPv4NK8APyFloat4reprEv", "APyFloat::repr"], [14, 2, 1, "_CPPv4N8APyFloat8set_dataERK12APyFloatData", "APyFloat::set_data"], [14, 3, 1, "_CPPv4N8APyFloat8set_dataERK12APyFloatData", "APyFloat::set_data::data"], [14, 2, 1, "_CPPv4N8APyFloat8set_signEb", "APyFloat::set_sign"], [14, 3, 1, "_CPPv4N8APyFloat8set_signEb", "APyFloat::set_sign::new_sign"], [14, 2, 1, "_CPPv4N8APyFloat10set_to_infEv", "APyFloat::set_to_inf"], [14, 2, 1, "_CPPv4N8APyFloat10set_to_nanEv", "APyFloat::set_to_nan"], [14, 2, 1, "_CPPv4N8APyFloat11set_to_zeroEb", "APyFloat::set_to_zero"], [14, 2, 1, "_CPPv4N8APyFloat11set_to_zeroEv", "APyFloat::set_to_zero"], [14, 3, 1, "_CPPv4N8APyFloat11set_to_zeroEb", "APyFloat::set_to_zero::new_sign"], [14, 2, 1, "_CPPv4NK8APyFloat3strEv", "APyFloat::str"], [14, 2, 1, "_CPPv4NK8APyFloat7to_bitsEv", "APyFloat::to_bits"], [14, 2, 1, "_CPPv4NK8APyFloat9to_doubleEv", "APyFloat::to_double"], [14, 2, 1, "_CPPv4NK8APyFloat8to_fixedEv", "APyFloat::to_fixed"], [14, 2, 1, "_CPPv4NK8APyFloat8true_expEv", "APyFloat::true_exp"], [14, 2, 1, "_CPPv4NK8APyFloat8true_manEv", "APyFloat::true_man"], [17, 1, 1, "_CPPv426APyFloatAccumulatorContext", "APyFloatAccumulatorContext"], [17, 2, 1, "_CPPv4N26APyFloatAccumulatorContext26APyFloatAccumulatorContextENSt8optionalIiEENSt8optionalIiEENSt8optionalI5exp_tEENSt8optionalI16QuantizationModeEE", "APyFloatAccumulatorContext::APyFloatAccumulatorContext"], [17, 3, 1, "_CPPv4N26APyFloatAccumulatorContext26APyFloatAccumulatorContextENSt8optionalIiEENSt8optionalIiEENSt8optionalI5exp_tEENSt8optionalI16QuantizationModeEE", "APyFloatAccumulatorContext::APyFloatAccumulatorContext::quantization"], [17, 5, 1, "_CPPv4N26APyFloatAccumulatorContext12current_modeE", "APyFloatAccumulatorContext::current_mode"], [17, 2, 1, "_CPPv4N26APyFloatAccumulatorContext13enter_contextEv", "APyFloatAccumulatorContext::enter_context"], [17, 2, 1, "_CPPv4N26APyFloatAccumulatorContext12exit_contextEv", "APyFloatAccumulatorContext::exit_context"], [17, 5, 1, "_CPPv4N26APyFloatAccumulatorContext13previous_modeE", "APyFloatAccumulatorContext::previous_mode"], [17, 1, 1, "_CPPv425APyFloatAccumulatorOption", "APyFloatAccumulatorOption"], [17, 5, 1, "_CPPv4N25APyFloatAccumulatorOption4biasE", "APyFloatAccumulatorOption::bias"], [17, 5, 1, "_CPPv4N25APyFloatAccumulatorOption8exp_bitsE", "APyFloatAccumulatorOption::exp_bits"], [17, 5, 1, "_CPPv4N25APyFloatAccumulatorOption8man_bitsE", "APyFloatAccumulatorOption::man_bits"], [17, 5, 1, "_CPPv4N25APyFloatAccumulatorOption12quantizationE", "APyFloatAccumulatorOption::quantization"], [16, 1, 1, "_CPPv413APyFloatArray", "APyFloatArray"], [16, 2, 1, "_CPPv4N13APyFloatArray13APyFloatArrayERKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloatArray::APyFloatArray"], [16, 3, 1, "_CPPv4N13APyFloatArray13APyFloatArrayERKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloatArray::APyFloatArray::bias"], [16, 3, 1, "_CPPv4N13APyFloatArray13APyFloatArrayERKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloatArray::APyFloatArray::exp_bits"], [16, 3, 1, "_CPPv4N13APyFloatArray13APyFloatArrayERKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloatArray::APyFloatArray::exp_seq"], [16, 3, 1, "_CPPv4N13APyFloatArray13APyFloatArrayERKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloatArray::APyFloatArray::man_bits"], [16, 3, 1, "_CPPv4N13APyFloatArray13APyFloatArrayERKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloatArray::APyFloatArray::man_seq"], [16, 3, 1, "_CPPv4N13APyFloatArray13APyFloatArrayERKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloatArray::APyFloatArray::sign_seq"], [16, 2, 1, "_CPPv4NK13APyFloatArray5_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", "APyFloatArray::_cast"], [16, 2, 1, "_CPPv4NK13APyFloatArray5_castENSt7uint8_tENSt7uint8_tE5exp_tNSt8optionalI16QuantizationModeEE", "APyFloatArray::_cast"], [16, 3, 1, "_CPPv4NK13APyFloatArray5_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", "APyFloatArray::_cast::bias"], [16, 3, 1, "_CPPv4NK13APyFloatArray5_castENSt7uint8_tENSt7uint8_tE5exp_tNSt8optionalI16QuantizationModeEE", "APyFloatArray::_cast::bias"], [16, 3, 1, "_CPPv4NK13APyFloatArray5_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", "APyFloatArray::_cast::exp_bits"], [16, 3, 1, "_CPPv4NK13APyFloatArray5_castENSt7uint8_tENSt7uint8_tE5exp_tNSt8optionalI16QuantizationModeEE", "APyFloatArray::_cast::exp_bits"], [16, 3, 1, "_CPPv4NK13APyFloatArray5_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", "APyFloatArray::_cast::man_bits"], [16, 3, 1, "_CPPv4NK13APyFloatArray5_castENSt7uint8_tENSt7uint8_tE5exp_tNSt8optionalI16QuantizationModeEE", "APyFloatArray::_cast::man_bits"], [16, 3, 1, "_CPPv4NK13APyFloatArray5_castENSt7uint8_tENSt7uint8_tE5exp_t16QuantizationMode", "APyFloatArray::_cast::quantization"], [16, 3, 1, "_CPPv4NK13APyFloatArray5_castENSt7uint8_tENSt7uint8_tE5exp_tNSt8optionalI16QuantizationModeEE", "APyFloatArray::_cast::quantization"], [16, 2, 1, "_CPPv4N13APyFloatArray24_set_values_from_ndarrayERKN8nanobind7ndarrayIN8nanobind8c_contigEEE", "APyFloatArray::_set_values_from_ndarray"], [16, 3, 1, "_CPPv4N13APyFloatArray24_set_values_from_ndarrayERKN8nanobind7ndarrayIN8nanobind8c_contigEEE", "APyFloatArray::_set_values_from_ndarray::ndarray"], [16, 2, 1, "_CPPv4NK13APyFloatArray3absEv", "APyFloatArray::abs"], [16, 5, 1, "_CPPv4N13APyFloatArray4biasE", "APyFloatArray::bias"], [16, 2, 1, "_CPPv4NK13APyFloatArray12broadcast_toEKNSt6vectorINSt6size_tEEE", "APyFloatArray::broadcast_to"], [16, 3, 1, "_CPPv4NK13APyFloatArray12broadcast_toEKNSt6vectorINSt6size_tEEE", "APyFloatArray::broadcast_to::shape"], [16, 2, 1, "_CPPv4NK13APyFloatArray19broadcast_to_pythonEKNSt7variantIN2nb5tupleEN2nb4int_EEE", "APyFloatArray::broadcast_to_python"], [16, 3, 1, "_CPPv4NK13APyFloatArray19broadcast_to_pythonEKNSt7variantIN2nb5tupleEN2nb4int_EEE", "APyFloatArray::broadcast_to_python::shape"], [16, 2, 1, "_CPPv4NK13APyFloatArray4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI5exp_tEENSt8optionalI16QuantizationModeEE", "APyFloatArray::cast"], [16, 3, 1, "_CPPv4NK13APyFloatArray4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI5exp_tEENSt8optionalI16QuantizationModeEE", "APyFloatArray::cast::bias"], [16, 3, 1, "_CPPv4NK13APyFloatArray4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI5exp_tEENSt8optionalI16QuantizationModeEE", "APyFloatArray::cast::exp_bits"], [16, 3, 1, "_CPPv4NK13APyFloatArray4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI5exp_tEENSt8optionalI16QuantizationModeEE", "APyFloatArray::cast::man_bits"], [16, 3, 1, "_CPPv4NK13APyFloatArray4castENSt8optionalIiEENSt8optionalIiEENSt8optionalI5exp_tEENSt8optionalI16QuantizationModeEE", "APyFloatArray::cast::quantization"], [16, 2, 1, "_CPPv4NK13APyFloatArray13cast_no_quantENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloatArray::cast_no_quant"], [16, 3, 1, "_CPPv4NK13APyFloatArray13cast_no_quantENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloatArray::cast_no_quant::bias"], [16, 3, 1, "_CPPv4NK13APyFloatArray13cast_no_quantENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloatArray::cast_no_quant::exp_bits"], [16, 3, 1, "_CPPv4NK13APyFloatArray13cast_no_quantENSt7uint8_tENSt7uint8_tENSt8optionalI5exp_tEE", "APyFloatArray::cast_no_quant::man_bits"], [16, 2, 1, "_CPPv4NK13APyFloatArray16cast_to_bfloat16ENSt8optionalI16QuantizationModeEE", "APyFloatArray::cast_to_bfloat16"], [16, 3, 1, "_CPPv4NK13APyFloatArray16cast_to_bfloat16ENSt8optionalI16QuantizationModeEE", "APyFloatArray::cast_to_bfloat16::quantization"], [16, 2, 1, "_CPPv4NK13APyFloatArray14cast_to_doubleENSt8optionalI16QuantizationModeEE", "APyFloatArray::cast_to_double"], [16, 3, 1, "_CPPv4NK13APyFloatArray14cast_to_doubleENSt8optionalI16QuantizationModeEE", "APyFloatArray::cast_to_double::quantization"], [16, 2, 1, "_CPPv4NK13APyFloatArray12cast_to_halfENSt8optionalI16QuantizationModeEE", "APyFloatArray::cast_to_half"], [16, 3, 1, "_CPPv4NK13APyFloatArray12cast_to_halfENSt8optionalI16QuantizationModeEE", "APyFloatArray::cast_to_half::quantization"], [16, 2, 1, "_CPPv4NK13APyFloatArray14cast_to_singleENSt8optionalI16QuantizationModeEE", "APyFloatArray::cast_to_single"], [16, 3, 1, "_CPPv4NK13APyFloatArray14cast_to_singleENSt8optionalI16QuantizationModeEE", "APyFloatArray::cast_to_single::quantization"], [16, 2, 1, "_CPPv4N13APyFloatArray15create_in_placeEP13APyFloatArrayRKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceEiiNSt8optionalI5exp_tEE", "APyFloatArray::create_in_place"], [16, 3, 1, "_CPPv4N13APyFloatArray15create_in_placeEP13APyFloatArrayRKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceEiiNSt8optionalI5exp_tEE", "APyFloatArray::create_in_place::apyfloatarray"], [16, 3, 1, "_CPPv4N13APyFloatArray15create_in_placeEP13APyFloatArrayRKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceEiiNSt8optionalI5exp_tEE", "APyFloatArray::create_in_place::bias"], [16, 3, 1, "_CPPv4N13APyFloatArray15create_in_placeEP13APyFloatArrayRKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceEiiNSt8optionalI5exp_tEE", "APyFloatArray::create_in_place::exp_bits"], [16, 3, 1, "_CPPv4N13APyFloatArray15create_in_placeEP13APyFloatArrayRKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceEiiNSt8optionalI5exp_tEE", "APyFloatArray::create_in_place::exp_seq"], [16, 3, 1, "_CPPv4N13APyFloatArray15create_in_placeEP13APyFloatArrayRKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceEiiNSt8optionalI5exp_tEE", "APyFloatArray::create_in_place::man_bits"], [16, 3, 1, "_CPPv4N13APyFloatArray15create_in_placeEP13APyFloatArrayRKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceEiiNSt8optionalI5exp_tEE", "APyFloatArray::create_in_place::man_seq"], [16, 3, 1, "_CPPv4N13APyFloatArray15create_in_placeEP13APyFloatArrayRKN8nanobind8sequenceERKN8nanobind8sequenceERKN8nanobind8sequenceEiiNSt8optionalI5exp_tEE", "APyFloatArray::create_in_place::sign_seq"], [16, 5, 1, "_CPPv4N13APyFloatArray4dataE", "APyFloatArray::data"], [16, 5, 1, "_CPPv4N13APyFloatArray8exp_bitsE", "APyFloatArray::exp_bits"], [16, 2, 1, "_CPPv4N13APyFloatArray10from_arrayERKN8nanobind7ndarrayIN8nanobind8c_contigEEEiiNSt8optionalI5exp_tEE", "APyFloatArray::from_array"], [16, 3, 1, "_CPPv4N13APyFloatArray10from_arrayERKN8nanobind7ndarrayIN8nanobind8c_contigEEEiiNSt8optionalI5exp_tEE", "APyFloatArray::from_array::bias"], [16, 3, 1, "_CPPv4N13APyFloatArray10from_arrayERKN8nanobind7ndarrayIN8nanobind8c_contigEEEiiNSt8optionalI5exp_tEE", "APyFloatArray::from_array::exp_bits"], [16, 3, 1, "_CPPv4N13APyFloatArray10from_arrayERKN8nanobind7ndarrayIN8nanobind8c_contigEEEiiNSt8optionalI5exp_tEE", "APyFloatArray::from_array::man_bits"], [16, 3, 1, "_CPPv4N13APyFloatArray10from_arrayERKN8nanobind7ndarrayIN8nanobind8c_contigEEEiiNSt8optionalI5exp_tEE", "APyFloatArray::from_array::ndarray"], [16, 2, 1, "_CPPv4N13APyFloatArray11from_doubleERKN8nanobind8sequenceEiiNSt8optionalI5exp_tEE", "APyFloatArray::from_double"], [16, 3, 1, "_CPPv4N13APyFloatArray11from_doubleERKN8nanobind8sequenceEiiNSt8optionalI5exp_tEE", "APyFloatArray::from_double::bias"], [16, 3, 1, "_CPPv4N13APyFloatArray11from_doubleERKN8nanobind8sequenceEiiNSt8optionalI5exp_tEE", "APyFloatArray::from_double::double_seq"], [16, 3, 1, "_CPPv4N13APyFloatArray11from_doubleERKN8nanobind8sequenceEiiNSt8optionalI5exp_tEE", "APyFloatArray::from_double::exp_bits"], [16, 3, 1, "_CPPv4N13APyFloatArray11from_doubleERKN8nanobind8sequenceEiiNSt8optionalI5exp_tEE", "APyFloatArray::from_double::man_bits"], [16, 2, 1, "_CPPv4NK13APyFloatArray8get_biasEv", "APyFloatArray::get_bias"], [16, 2, 1, "_CPPv4NK13APyFloatArray8get_bitsEv", "APyFloatArray::get_bits"], [16, 2, 1, "_CPPv4NK13APyFloatArray12get_exp_bitsEv", "APyFloatArray::get_exp_bits"], [16, 2, 1, "_CPPv4NK13APyFloatArray8get_itemENSt6size_tE", "APyFloatArray::get_item"], [16, 3, 1, "_CPPv4NK13APyFloatArray8get_itemENSt6size_tE", "APyFloatArray::get_item::idx"], [16, 2, 1, "_CPPv4NK13APyFloatArray12get_man_bitsEv", "APyFloatArray::get_man_bits"], [16, 2, 1, "_CPPv4NK13APyFloatArray8get_ndimEv", "APyFloatArray::get_ndim"], [16, 2, 1, "_CPPv4NK13APyFloatArray9get_shapeEv", "APyFloatArray::get_shape"], [16, 2, 1, "_CPPv4NK13APyFloatArray8get_sizeEv", "APyFloatArray::get_size"], [16, 2, 1, "_CPPv4NK13APyFloatArray12is_identicalERK13APyFloatArray", "APyFloatArray::is_identical"], [16, 3, 1, "_CPPv4NK13APyFloatArray12is_identicalERK13APyFloatArray", "APyFloatArray::is_identical::other"], [16, 5, 1, "_CPPv4N13APyFloatArray8man_bitsE", "APyFloatArray::man_bits"], [16, 2, 1, "_CPPv4NK13APyFloatArray6matmulERK13APyFloatArray", "APyFloatArray::matmul"], [16, 3, 1, "_CPPv4NK13APyFloatArray6matmulERK13APyFloatArray", "APyFloatArray::matmul::rhs"], [16, 2, 1, "_CPPv4NK13APyFloatArraymlERK13APyFloatArray", "APyFloatArray::operator*"], [16, 2, 1, "_CPPv4NK13APyFloatArraymlERK8APyFloat", "APyFloatArray::operator*"], [16, 3, 1, "_CPPv4NK13APyFloatArraymlERK13APyFloatArray", "APyFloatArray::operator*::rhs"], [16, 3, 1, "_CPPv4NK13APyFloatArraymlERK8APyFloat", "APyFloatArray::operator*::rhs"], [16, 2, 1, "_CPPv4NK13APyFloatArrayplERK13APyFloatArray", "APyFloatArray::operator+"], [16, 2, 1, "_CPPv4NK13APyFloatArrayplERK8APyFloat", "APyFloatArray::operator+"], [16, 3, 1, "_CPPv4NK13APyFloatArrayplERK13APyFloatArray", "APyFloatArray::operator+::rhs"], [16, 3, 1, "_CPPv4NK13APyFloatArrayplERK8APyFloat", "APyFloatArray::operator+::rhs"], [16, 2, 1, "_CPPv4NK13APyFloatArraymiERK13APyFloatArray", "APyFloatArray::operator-"], [16, 2, 1, "_CPPv4NK13APyFloatArraymiERK8APyFloat", "APyFloatArray::operator-"], [16, 2, 1, "_CPPv4NK13APyFloatArraymiEv", "APyFloatArray::operator-"], [16, 3, 1, "_CPPv4NK13APyFloatArraymiERK13APyFloatArray", "APyFloatArray::operator-::rhs"], [16, 3, 1, "_CPPv4NK13APyFloatArraymiERK8APyFloat", "APyFloatArray::operator-::rhs"], [16, 2, 1, "_CPPv4NK13APyFloatArraydvERK13APyFloatArray", "APyFloatArray::operator/"], [16, 2, 1, "_CPPv4NK13APyFloatArraydvERK8APyFloat", "APyFloatArray::operator/"], [16, 3, 1, "_CPPv4NK13APyFloatArraydvERK13APyFloatArray", "APyFloatArray::operator/::rhs"], [16, 3, 1, "_CPPv4NK13APyFloatArraydvERK8APyFloat", "APyFloatArray::operator/::rhs"], [16, 2, 1, "_CPPv4NK13APyFloatArray4reprEv", "APyFloatArray::repr"], [16, 2, 1, "_CPPv4N13APyFloatArray7reshapeEN2nb5tupleE", "APyFloatArray::reshape"], [16, 3, 1, "_CPPv4N13APyFloatArray7reshapeEN2nb5tupleE", "APyFloatArray::reshape::new_shape"], [16, 2, 1, "_CPPv4NK13APyFloatArray8rtruedivERK8APyFloat", "APyFloatArray::rtruediv"], [16, 3, 1, "_CPPv4NK13APyFloatArray8rtruedivERK8APyFloat", "APyFloatArray::rtruediv::rhs"], [16, 2, 1, "_CPPv4NK13APyFloatArray12same_type_asERK13APyFloatArray", "APyFloatArray::same_type_as"], [16, 2, 1, "_CPPv4NK13APyFloatArray12same_type_asERK8APyFloat", "APyFloatArray::same_type_as"], [16, 3, 1, "_CPPv4NK13APyFloatArray12same_type_asERK13APyFloatArray", "APyFloatArray::same_type_as::other"], [16, 3, 1, "_CPPv4NK13APyFloatArray12same_type_asERK8APyFloat", "APyFloatArray::same_type_as::other"], [16, 2, 1, "_CPPv4NK13APyFloatArray7squeezeENSt8optionalINSt7variantIN2nb4int_EN2nb5tupleEEEEE", "APyFloatArray::squeeze"], [16, 3, 1, "_CPPv4NK13APyFloatArray7squeezeENSt8optionalINSt7variantIN2nb4int_EN2nb5tupleEEEEE", "APyFloatArray::squeeze::axis"], [16, 2, 1, "_CPPv4NK13APyFloatArray8to_numpyEv", "APyFloatArray::to_numpy"], [16, 2, 1, "_CPPv4NK13APyFloatArray9transposeEv", "APyFloatArray::transpose"], [17, 1, 1, "_CPPv412APyFloatData", "APyFloatData"], [17, 5, 1, "_CPPv4N12APyFloatData3expE", "APyFloatData::exp"], [17, 5, 1, "_CPPv4N12APyFloatData3manE", "APyFloatData::man"], [17, 2, 1, "_CPPv4NK12APyFloatDataeqERK12APyFloatData", "APyFloatData::operator=="], [17, 3, 1, "_CPPv4NK12APyFloatDataeqERK12APyFloatData", "APyFloatData::operator==::other"], [17, 5, 1, "_CPPv4N12APyFloatData4signE", "APyFloatData::sign"], [17, 1, 1, "_CPPv427APyFloatQuantizationContext", "APyFloatQuantizationContext"], [17, 2, 1, "_CPPv4N27APyFloatQuantizationContext27APyFloatQuantizationContextERK16QuantizationModeNSt8optionalINSt8uint64_tEEE", "APyFloatQuantizationContext::APyFloatQuantizationContext"], [17, 3, 1, "_CPPv4N27APyFloatQuantizationContext27APyFloatQuantizationContextERK16QuantizationModeNSt8optionalINSt8uint64_tEEE", "APyFloatQuantizationContext::APyFloatQuantizationContext::new_mode"], [17, 3, 1, "_CPPv4N27APyFloatQuantizationContext27APyFloatQuantizationContextERK16QuantizationModeNSt8optionalINSt8uint64_tEEE", "APyFloatQuantizationContext::APyFloatQuantizationContext::new_seed"], [17, 2, 1, "_CPPv4N27APyFloatQuantizationContext13enter_contextEv", "APyFloatQuantizationContext::enter_context"], [17, 2, 1, "_CPPv4N27APyFloatQuantizationContext12exit_contextEv", "APyFloatQuantizationContext::exit_context"], [17, 5, 1, "_CPPv4N27APyFloatQuantizationContext8new_modeE", "APyFloatQuantizationContext::new_mode"], [17, 5, 1, "_CPPv4N27APyFloatQuantizationContext8new_seedE", "APyFloatQuantizationContext::new_seed"], [17, 5, 1, "_CPPv4N27APyFloatQuantizationContext9prev_modeE", "APyFloatQuantizationContext::prev_mode"], [17, 5, 1, "_CPPv4N27APyFloatQuantizationContext9prev_seedE", "APyFloatQuantizationContext::prev_seed"], [20, 2, 1, "_CPPv424CREATE_FUNCTOR_FROM_FUNC17mpn_add_n_functor9mpn_add_n", "CREATE_FUNCTOR_FROM_FUNC"], [20, 2, 1, "_CPPv424CREATE_FUNCTOR_FROM_FUNC17mpn_sub_n_functor9mpn_sub_n", "CREATE_FUNCTOR_FROM_FUNC"], [17, 1, 1, "_CPPv414ContextManager", "ContextManager"], [17, 2, 1, "_CPPv4N14ContextManager13enter_contextEv", "ContextManager::enter_context"], [17, 2, 1, "_CPPv4N14ContextManager12exit_contextEv", "ContextManager::exit_context"], [17, 2, 1, "_CPPv4N14ContextManagerD0Ev", "ContextManager::~ContextManager"], [20, 1, 1, "_CPPv416DoubleDabbleList", "DoubleDabbleList"], [20, 5, 1, "_CPPv4N16DoubleDabbleList12_NIBBLE_MASKE", "DoubleDabbleList::_NIBBLE_MASK"], [20, 5, 1, "_CPPv4N16DoubleDabbleList4dataE", "DoubleDabbleList::data"], [20, 2, 1, "_CPPv4N16DoubleDabbleList9do_dabbleEv", "DoubleDabbleList::do_dabble"], [20, 2, 1, "_CPPv4N16DoubleDabbleList9do_doubleE9mp_limb_t", "DoubleDabbleList::do_double"], [20, 3, 1, "_CPPv4N16DoubleDabbleList9do_doubleE9mp_limb_t", "DoubleDabbleList::do_double::new_bit"], [20, 2, 1, "_CPPv4N16DoubleDabbleList17do_reverse_dabbleEv", "DoubleDabbleList::do_reverse_dabble"], [20, 2, 1, "_CPPv4N16DoubleDabbleList17do_reverse_doubleER9mp_limb_t", "DoubleDabbleList::do_reverse_double"], [20, 3, 1, "_CPPv4N16DoubleDabbleList17do_reverse_doubleER9mp_limb_t", "DoubleDabbleList::do_reverse_double::limb_out"], [20, 1, 1, "_CPPv423NotImplementedException", "NotImplementedException"], [20, 2, 1, "_CPPv4N23NotImplementedException23NotImplementedExceptionENSt8optionalINSt6stringEEE", "NotImplementedException::NotImplementedException"], [20, 3, 1, "_CPPv4N23NotImplementedException23NotImplementedExceptionENSt8optionalINSt6stringEEE", "NotImplementedException::NotImplementedException::msg"], [17, 6, 1, "_CPPv412OverflowMode", "OverflowMode"], [17, 7, 1, "_CPPv4N12OverflowMode11NUMERIC_STDE", "OverflowMode::NUMERIC_STD"], [17, 7, 1, "_CPPv4N12OverflowMode3SATE", "OverflowMode::SAT"], [17, 7, 1, "_CPPv4N12OverflowMode4WRAPE", "OverflowMode::WRAP"], [24, 2, 1, "_CPPv410PyLong_NewNSt6size_tE", "PyLong_New"], [24, 3, 1, "_CPPv410PyLong_NewNSt6size_tE", "PyLong_New::python_digits"], [17, 6, 1, "_CPPv416QuantizationMode", "QuantizationMode"], [17, 7, 1, "_CPPv4N16QuantizationMode3JAME", "QuantizationMode::JAM"], [17, 7, 1, "_CPPv4N16QuantizationMode12JAM_UNBIASEDE", "QuantizationMode::JAM_UNBIASED"], [17, 7, 1, "_CPPv4N16QuantizationMode3RNDE", "QuantizationMode::RND"], [17, 7, 1, "_CPPv4N16QuantizationMode8RND_CONVE", "QuantizationMode::RND_CONV"], [17, 7, 1, "_CPPv4N16QuantizationMode12RND_CONV_ODDE", "QuantizationMode::RND_CONV_ODD"], [17, 7, 1, "_CPPv4N16QuantizationMode7RND_INFE", "QuantizationMode::RND_INF"], [17, 7, 1, "_CPPv4N16QuantizationMode11RND_MIN_INFE", "QuantizationMode::RND_MIN_INF"], [17, 7, 1, "_CPPv4N16QuantizationMode8RND_ZEROE", "QuantizationMode::RND_ZERO"], [17, 7, 1, "_CPPv4N16QuantizationMode11STOCH_EQUALE", "QuantizationMode::STOCH_EQUAL"], [17, 7, 1, "_CPPv4N16QuantizationMode14STOCH_WEIGHTEDE", "QuantizationMode::STOCH_WEIGHTED"], [17, 7, 1, "_CPPv4N16QuantizationMode3TRNE", "QuantizationMode::TRN"], [17, 7, 1, "_CPPv4N16QuantizationMode8TRN_AWAYE", "QuantizationMode::TRN_AWAY"], [17, 7, 1, "_CPPv4N16QuantizationMode7TRN_INFE", "QuantizationMode::TRN_INF"], [17, 7, 1, "_CPPv4N16QuantizationMode7TRN_MAGE", "QuantizationMode::TRN_MAG"], [17, 7, 1, "_CPPv4N16QuantizationMode8TRN_ZEROE", "QuantizationMode::TRN_ZERO"], [18, 1, 1, "_CPPv4I00E14SVIteratorBase", "SVIteratorBase"], [18, 4, 1, "_CPPv4I00E14SVIteratorBase", "SVIteratorBase::PTR_T"], [18, 2, 1, "_CPPv4N14SVIteratorBase14SVIteratorBaseE7pointer", "SVIteratorBase::SVIteratorBase"], [18, 3, 1, "_CPPv4N14SVIteratorBase14SVIteratorBaseE7pointer", "SVIteratorBase::SVIteratorBase::ptr"], [18, 4, 1, "_CPPv4I00E14SVIteratorBase", "SVIteratorBase::T"], [18, 5, 1, "_CPPv4N14SVIteratorBase4_ptrE", "SVIteratorBase::_ptr"], [18, 8, 1, "_CPPv4N14SVIteratorBase15const_referenceE", "SVIteratorBase::const_reference"], [18, 8, 1, "_CPPv4N14SVIteratorBase15difference_typeE", "SVIteratorBase::difference_type"], [18, 8, 1, "_CPPv4N14SVIteratorBase17iterator_categoryE", "SVIteratorBase::iterator_category"], [18, 2, 1, "_CPPv4NK14SVIteratorBaseneE14SVIteratorBase", "SVIteratorBase::operator!="], [18, 3, 1, "_CPPv4NK14SVIteratorBaseneE14SVIteratorBase", "SVIteratorBase::operator!=::other"], [18, 2, 1, "_CPPv4N14SVIteratorBasemlEv", "SVIteratorBase::operator*"], [18, 2, 1, "_CPPv4NK14SVIteratorBasemlEv", "SVIteratorBase::operator*"], [18, 2, 1, "_CPPv4NK14SVIteratorBaseplE15difference_type", "SVIteratorBase::operator+"], [18, 2, 1, "_CPPv4N14SVIteratorBaseppEi", "SVIteratorBase::operator++"], [18, 2, 1, "_CPPv4N14SVIteratorBaseppEv", "SVIteratorBase::operator++"], [18, 3, 1, "_CPPv4NK14SVIteratorBaseplE15difference_type", "SVIteratorBase::operator+::n"], [18, 2, 1, "_CPPv4N14SVIteratorBasepLE15difference_type", "SVIteratorBase::operator+="], [18, 3, 1, "_CPPv4N14SVIteratorBasepLE15difference_type", "SVIteratorBase::operator+=::n"], [18, 2, 1, "_CPPv4NK14SVIteratorBasemiE14SVIteratorBase", "SVIteratorBase::operator-"], [18, 2, 1, "_CPPv4NK14SVIteratorBasemiE15difference_type", "SVIteratorBase::operator-"], [18, 2, 1, "_CPPv4N14SVIteratorBasemmEi", "SVIteratorBase::operator--"], [18, 2, 1, "_CPPv4N14SVIteratorBasemmEv", "SVIteratorBase::operator--"], [18, 3, 1, "_CPPv4NK14SVIteratorBasemiE15difference_type", "SVIteratorBase::operator-::n"], [18, 3, 1, "_CPPv4NK14SVIteratorBasemiE14SVIteratorBase", "SVIteratorBase::operator-::other"], [18, 2, 1, "_CPPv4N14SVIteratorBasemIE15difference_type", "SVIteratorBase::operator-="], [18, 3, 1, "_CPPv4N14SVIteratorBasemIE15difference_type", "SVIteratorBase::operator-=::n"], [18, 2, 1, "_CPPv4NK14SVIteratorBaseltE14SVIteratorBase", "SVIteratorBase::operator&lt;"], [18, 3, 1, "_CPPv4NK14SVIteratorBaseltE14SVIteratorBase", "SVIteratorBase::operator&lt;::other"], [18, 2, 1, "_CPPv4NK14SVIteratorBaseleE14SVIteratorBase", "SVIteratorBase::operator&lt;="], [18, 3, 1, "_CPPv4NK14SVIteratorBaseleE14SVIteratorBase", "SVIteratorBase::operator&lt;=::other"], [18, 2, 1, "_CPPv4NK14SVIteratorBaseeqE14SVIteratorBase", "SVIteratorBase::operator=="], [18, 3, 1, "_CPPv4NK14SVIteratorBaseeqE14SVIteratorBase", "SVIteratorBase::operator==::other"], [18, 2, 1, "_CPPv4NK14SVIteratorBasegtE14SVIteratorBase", "SVIteratorBase::operator&gt;"], [18, 3, 1, "_CPPv4NK14SVIteratorBasegtE14SVIteratorBase", "SVIteratorBase::operator&gt;::other"], [18, 2, 1, "_CPPv4NK14SVIteratorBasegeE14SVIteratorBase", "SVIteratorBase::operator&gt;="], [18, 3, 1, "_CPPv4NK14SVIteratorBasegeE14SVIteratorBase", "SVIteratorBase::operator&gt;=::other"], [18, 2, 1, "_CPPv4N14SVIteratorBaseixENSt6size_tE", "SVIteratorBase::operator[]"], [18, 2, 1, "_CPPv4NK14SVIteratorBaseixENSt6size_tE", "SVIteratorBase::operator[]"], [18, 3, 1, "_CPPv4N14SVIteratorBaseixENSt6size_tE", "SVIteratorBase::operator[]::n"], [18, 3, 1, "_CPPv4NK14SVIteratorBaseixENSt6size_tE", "SVIteratorBase::operator[]::n"], [18, 8, 1, "_CPPv4N14SVIteratorBase7pointerE", "SVIteratorBase::pointer"], [18, 8, 1, "_CPPv4N14SVIteratorBase9referenceE", "SVIteratorBase::reference"], [18, 8, 1, "_CPPv4N14SVIteratorBase10value_typeE", "SVIteratorBase::value_type"], [18, 1, 1, "_CPPv4I0_NSt6size_tE0E13ScratchVector", "ScratchVector"], [18, 4, 1, "_CPPv4I0_NSt6size_tE0E13ScratchVector", "ScratchVector::Allocator"], [18, 2, 1, "_CPPv4I0EN13ScratchVector13ScratchVectorE7InputIt7InputIt", "ScratchVector::ScratchVector"], [18, 2, 1, "_CPPv4N13ScratchVector13ScratchVectorE9size_type", "ScratchVector::ScratchVector"], [18, 2, 1, "_CPPv4N13ScratchVector13ScratchVectorE9size_typeRK1T", "ScratchVector::ScratchVector"], [18, 2, 1, "_CPPv4N13ScratchVector13ScratchVectorENSt16initializer_listI1TEE", "ScratchVector::ScratchVector"], [18, 2, 1, "_CPPv4N13ScratchVector13ScratchVectorERK13ScratchVector", "ScratchVector::ScratchVector"], [18, 2, 1, "_CPPv4N13ScratchVector13ScratchVectorEv", "ScratchVector::ScratchVector"], [18, 4, 1, "_CPPv4I0EN13ScratchVector13ScratchVectorE7InputIt7InputIt", "ScratchVector::ScratchVector::InputIt"], [18, 3, 1, "_CPPv4N13ScratchVector13ScratchVectorE9size_type", "ScratchVector::ScratchVector::count"], [18, 3, 1, "_CPPv4N13ScratchVector13ScratchVectorE9size_typeRK1T", "ScratchVector::ScratchVector::count"], [18, 3, 1, "_CPPv4I0EN13ScratchVector13ScratchVectorE7InputIt7InputIt", "ScratchVector::ScratchVector::first"], [18, 3, 1, "_CPPv4N13ScratchVector13ScratchVectorENSt16initializer_listI1TEE", "ScratchVector::ScratchVector::init"], [18, 3, 1, "_CPPv4I0EN13ScratchVector13ScratchVectorE7InputIt7InputIt", "ScratchVector::ScratchVector::last"], [18, 3, 1, "_CPPv4N13ScratchVector13ScratchVectorERK13ScratchVector", "ScratchVector::ScratchVector::other"], [18, 3, 1, "_CPPv4N13ScratchVector13ScratchVectorE9size_typeRK1T", "ScratchVector::ScratchVector::value"], [18, 4, 1, "_CPPv4I0_NSt6size_tE0E13ScratchVector", "ScratchVector::T"], [18, 4, 1, "_CPPv4I0_NSt6size_tE0E13ScratchVector", "ScratchVector::_N_SCRATCH_ELEMENTS"], [18, 5, 1, "_CPPv4N13ScratchVector9_capacityE", "ScratchVector::_capacity"], [18, 5, 1, "_CPPv4N13ScratchVector4_ptrE", "ScratchVector::_ptr"], [18, 5, 1, "_CPPv4N13ScratchVector13_scratch_dataE", "ScratchVector::_scratch_data"], [18, 5, 1, "_CPPv4N13ScratchVector5_sizeE", "ScratchVector::_size"], [18, 8, 1, "_CPPv4N13ScratchVector14allocator_typeE", "ScratchVector::allocator_type"], [18, 2, 1, "_CPPv4N13ScratchVector2atE9size_type", "ScratchVector::at"], [18, 2, 1, "_CPPv4NK13ScratchVector2atE9size_type", "ScratchVector::at"], [18, 3, 1, "_CPPv4N13ScratchVector2atE9size_type", "ScratchVector::at::pos"], [18, 3, 1, "_CPPv4NK13ScratchVector2atE9size_type", "ScratchVector::at::pos"], [18, 2, 1, "_CPPv4N13ScratchVector4backEv", "ScratchVector::back"], [18, 2, 1, "_CPPv4NK13ScratchVector4backEv", "ScratchVector::back"], [18, 2, 1, "_CPPv4N13ScratchVector5beginEv", "ScratchVector::begin"], [18, 2, 1, "_CPPv4NK13ScratchVector5beginEv", "ScratchVector::begin"], [18, 2, 1, "_CPPv4NK13ScratchVector8capacityEv", "ScratchVector::capacity"], [18, 2, 1, "_CPPv4NK13ScratchVector6cbeginEv", "ScratchVector::cbegin"], [18, 2, 1, "_CPPv4NK13ScratchVector4cendEv", "ScratchVector::cend"], [18, 8, 1, "_CPPv4N13ScratchVector14const_iteratorE", "ScratchVector::const_iterator"], [18, 8, 1, "_CPPv4N13ScratchVector13const_pointerE", "ScratchVector::const_pointer"], [18, 8, 1, "_CPPv4N13ScratchVector15const_referenceE", "ScratchVector::const_reference"], [18, 8, 1, "_CPPv4N13ScratchVector22const_reverse_iteratorE", "ScratchVector::const_reverse_iterator"], [18, 2, 1, "_CPPv4NK13ScratchVector7crbeginEv", "ScratchVector::crbegin"], [18, 2, 1, "_CPPv4NK13ScratchVector5crendEv", "ScratchVector::crend"], [18, 8, 1, "_CPPv4N13ScratchVector15difference_typeE", "ScratchVector::difference_type"], [18, 2, 1, "_CPPv4N13ScratchVector3endEv", "ScratchVector::end"], [18, 2, 1, "_CPPv4NK13ScratchVector3endEv", "ScratchVector::end"], [18, 8, 1, "_CPPv4N13ScratchVector8iteratorE", "ScratchVector::iterator"], [18, 2, 1, "_CPPv4NK13ScratchVectorcvNSt6vectorI1TEEEv", "ScratchVector::operator std::vector&lt;T&gt;"], [18, 2, 1, "_CPPv4I0_bEN13ScratchVectoraSER13ScratchVectorRK25RANDOM_ACCESS_VECTOR_TYPE", "ScratchVector::operator="], [18, 2, 1, "_CPPv4N13ScratchVectoraSERK13ScratchVector", "ScratchVector::operator="], [18, 4, 1, "_CPPv4I0_bEN13ScratchVectoraSER13ScratchVectorRK25RANDOM_ACCESS_VECTOR_TYPE", "ScratchVector::operator=::RANDOM_ACCESS_VECTOR_TYPE"], [18, 4, 1, "_CPPv4I0_bEN13ScratchVectoraSER13ScratchVectorRK25RANDOM_ACCESS_VECTOR_TYPE", "ScratchVector::operator=::SPECIALIZED"], [18, 3, 1, "_CPPv4I0_bEN13ScratchVectoraSER13ScratchVectorRK25RANDOM_ACCESS_VECTOR_TYPE", "ScratchVector::operator=::other"], [18, 3, 1, "_CPPv4N13ScratchVectoraSERK13ScratchVector", "ScratchVector::operator=::other"], [18, 2, 1, "_CPPv4N13ScratchVectorixE9size_type", "ScratchVector::operator[]"], [18, 2, 1, "_CPPv4NK13ScratchVectorixE9size_type", "ScratchVector::operator[]"], [18, 3, 1, "_CPPv4N13ScratchVectorixE9size_type", "ScratchVector::operator[]::pos"], [18, 3, 1, "_CPPv4NK13ScratchVectorixE9size_type", "ScratchVector::operator[]::pos"], [18, 8, 1, "_CPPv4N13ScratchVector7pointerE", "ScratchVector::pointer"], [18, 2, 1, "_CPPv4N13ScratchVector8pop_backEv", "ScratchVector::pop_back"], [18, 2, 1, "_CPPv4N13ScratchVector9push_backERK1T", "ScratchVector::push_back"], [18, 3, 1, "_CPPv4N13ScratchVector9push_backERK1T", "ScratchVector::push_back::value"], [18, 2, 1, "_CPPv4N13ScratchVector6rbeginEv", "ScratchVector::rbegin"], [18, 2, 1, "_CPPv4NK13ScratchVector6rbeginEv", "ScratchVector::rbegin"], [18, 8, 1, "_CPPv4N13ScratchVector9referenceE", "ScratchVector::reference"], [18, 2, 1, "_CPPv4N13ScratchVector4rendEv", "ScratchVector::rend"], [18, 2, 1, "_CPPv4NK13ScratchVector4rendEv", "ScratchVector::rend"], [18, 2, 1, "_CPPv4N13ScratchVector6resizeE9size_type", "ScratchVector::resize"], [18, 3, 1, "_CPPv4N13ScratchVector6resizeE9size_type", "ScratchVector::resize::count"], [18, 8, 1, "_CPPv4N13ScratchVector16reverse_iteratorE", "ScratchVector::reverse_iterator"], [18, 2, 1, "_CPPv4NK13ScratchVector4sizeEv", "ScratchVector::size"], [18, 8, 1, "_CPPv4N13ScratchVector9size_typeE", "ScratchVector::size_type"], [18, 8, 1, "_CPPv4N13ScratchVector10value_typeE", "ScratchVector::value_type"], [18, 2, 1, "_CPPv4N13ScratchVectorD0Ev", "ScratchVector::~ScratchVector"], [15, 5, 1, "_CPPv415_EXP_LIMIT_BITS", "_EXP_LIMIT_BITS"], [15, 5, 1, "_CPPv416_EXP_T_SIZE_BITS", "_EXP_T_SIZE_BITS"], [15, 5, 1, "_CPPv417_EXP_T_SIZE_BYTES", "_EXP_T_SIZE_BYTES"], [20, 5, 1, "_CPPv415_LIMB_SIZE_BITS", "_LIMB_SIZE_BITS"], [20, 5, 1, "_CPPv416_LIMB_SIZE_BYTES", "_LIMB_SIZE_BYTES"], [15, 5, 1, "_CPPv415_MAN_LIMIT_BITS", "_MAN_LIMIT_BITS"], [15, 5, 1, "_CPPv416_MAN_T_SIZE_BITS", "_MAN_T_SIZE_BITS"], [15, 5, 1, "_CPPv417_MAN_T_SIZE_BYTES", "_MAN_T_SIZE_BYTES"], [20, 2, 1, "_CPPv420apytypes_unreachablev", "apytypes_unreachable"], [20, 2, 1, "_CPPv417bcd_limb_vec_div2RNSt6vectorI9mp_limb_tEE", "bcd_limb_vec_div2"], [20, 3, 1, "_CPPv417bcd_limb_vec_div2RNSt6vectorI9mp_limb_tEE", "bcd_limb_vec_div2::bcd_list"], [20, 2, 1, "_CPPv417bcd_limb_vec_mul2RNSt6vectorI9mp_limb_tEE", "bcd_limb_vec_mul2"], [20, 3, 1, "_CPPv417bcd_limb_vec_mul2RNSt6vectorI9mp_limb_tEE", "bcd_limb_vec_mul2::bcd_list"], [20, 2, 1, "_CPPv48bcd_mul2RNSt6vectorINSt7uint8_tEEE", "bcd_mul2"], [20, 3, 1, "_CPPv48bcd_mul2RNSt6vectorINSt7uint8_tEEE", "bcd_mul2::bcd_list"], [20, 2, 1, "_CPPv414bcds_to_stringKNSt6vectorI9mp_limb_tEE", "bcds_to_string"], [20, 3, 1, "_CPPv414bcds_to_stringKNSt6vectorI9mp_limb_tEE", "bcds_to_string::bcds"], [20, 2, 1, "_CPPv4I0E9bit_widthNSt6size_tE8INT_TYPE", "bit_width"], [20, 4, 1, "_CPPv4I0E9bit_widthNSt6size_tE8INT_TYPE", "bit_width::INT_TYPE"], [20, 3, 1, "_CPPv4I0E9bit_widthNSt6size_tE8INT_TYPE", "bit_width::n"], [20, 2, 1, "_CPPv418bits_from_optionalNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "bits_from_optional"], [20, 3, 1, "_CPPv418bits_from_optionalNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "bits_from_optional::bits"], [20, 3, 1, "_CPPv418bits_from_optionalNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "bits_from_optional::frac_bits"], [20, 3, 1, "_CPPv418bits_from_optionalNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEE", "bits_from_optional::int_bits"], [20, 2, 1, "_CPPv423bits_from_optional_castNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEEii", "bits_from_optional_cast"], [20, 3, 1, "_CPPv423bits_from_optional_castNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEEii", "bits_from_optional_cast::bits"], [20, 3, 1, "_CPPv423bits_from_optional_castNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEEii", "bits_from_optional_cast::current_bits"], [20, 3, 1, "_CPPv423bits_from_optional_castNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEEii", "bits_from_optional_cast::current_int_bits"], [20, 3, 1, "_CPPv423bits_from_optional_castNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEEii", "bits_from_optional_cast::frac_bits"], [20, 3, 1, "_CPPv423bits_from_optional_castNSt8optionalIiEENSt8optionalIiEENSt8optionalIiEEii", "bits_from_optional_cast::int_bits"], [20, 2, 1, "_CPPv413bits_to_limbsNSt6size_tE", "bits_to_limbs"], [20, 3, 1, "_CPPv413bits_to_limbsNSt6size_tE", "bits_to_limbs::bits"], [21, 2, 1, "_CPPv4I00E19broadcast_data_copyv28RANDOM_ACCESS_CONST_ITERATOR22RANDOM_ACCESS_ITERATORRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEENSt6size_tE", "broadcast_data_copy"], [21, 4, 1, "_CPPv4I00E19broadcast_data_copyv28RANDOM_ACCESS_CONST_ITERATOR22RANDOM_ACCESS_ITERATORRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEENSt6size_tE", "broadcast_data_copy::RANDOM_ACCESS_CONST_ITERATOR"], [21, 4, 1, "_CPPv4I00E19broadcast_data_copyv28RANDOM_ACCESS_CONST_ITERATOR22RANDOM_ACCESS_ITERATORRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEENSt6size_tE", "broadcast_data_copy::RANDOM_ACCESS_ITERATOR"], [21, 3, 1, "_CPPv4I00E19broadcast_data_copyv28RANDOM_ACCESS_CONST_ITERATOR22RANDOM_ACCESS_ITERATORRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEENSt6size_tE", "broadcast_data_copy::dst"], [21, 3, 1, "_CPPv4I00E19broadcast_data_copyv28RANDOM_ACCESS_CONST_ITERATOR22RANDOM_ACCESS_ITERATORRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEENSt6size_tE", "broadcast_data_copy::dst_shape"], [21, 3, 1, "_CPPv4I00E19broadcast_data_copyv28RANDOM_ACCESS_CONST_ITERATOR22RANDOM_ACCESS_ITERATORRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEENSt6size_tE", "broadcast_data_copy::itemsize"], [21, 3, 1, "_CPPv4I00E19broadcast_data_copyv28RANDOM_ACCESS_CONST_ITERATOR22RANDOM_ACCESS_ITERATORRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEENSt6size_tE", "broadcast_data_copy::src"], [21, 3, 1, "_CPPv4I00E19broadcast_data_copyv28RANDOM_ACCESS_CONST_ITERATOR22RANDOM_ACCESS_ITERATORRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEENSt6size_tE", "broadcast_data_copy::src_shape"], [15, 2, 1, "_CPPv49calc_biasii5exp_ti5exp_t", "calc_bias"], [15, 3, 1, "_CPPv49calc_biasii5exp_ti5exp_t", "calc_bias::bias1"], [15, 3, 1, "_CPPv49calc_biasii5exp_ti5exp_t", "calc_bias::bias2"], [15, 3, 1, "_CPPv49calc_biasii5exp_ti5exp_t", "calc_bias::exp_bits1"], [15, 3, 1, "_CPPv49calc_biasii5exp_ti5exp_t", "calc_bias::exp_bits2"], [15, 3, 1, "_CPPv49calc_biasii5exp_ti5exp_t", "calc_bias::new_exp_bits"], [15, 2, 1, "_CPPv417calc_bias_generalii5exp_ti5exp_t", "calc_bias_general"], [15, 3, 1, "_CPPv417calc_bias_generalii5exp_ti5exp_t", "calc_bias_general::bias1"], [15, 3, 1, "_CPPv417calc_bias_generalii5exp_ti5exp_t", "calc_bias_general::bias2"], [15, 3, 1, "_CPPv417calc_bias_generalii5exp_ti5exp_t", "calc_bias_general::exp_bits1"], [15, 3, 1, "_CPPv417calc_bias_generalii5exp_ti5exp_t", "calc_bias_general::exp_bits2"], [15, 3, 1, "_CPPv417calc_bias_generalii5exp_ti5exp_t", "calc_bias_general::new_exp_bits"], [15, 2, 1, "_CPPv421check_exponent_formati", "check_exponent_format"], [15, 3, 1, "_CPPv421check_exponent_formati", "check_exponent_format::exp_bits"], [15, 2, 1, "_CPPv421check_mantissa_formati", "check_mantissa_format"], [15, 3, 1, "_CPPv421check_mantissa_formati", "check_mantissa_format::man_bits"], [20, 2, 1, "_CPPv4I0E19count_trailing_bitsNSt6size_tE8INT_TYPE", "count_trailing_bits"], [20, 4, 1, "_CPPv4I0E19count_trailing_bitsNSt6size_tE8INT_TYPE", "count_trailing_bits::INT_TYPE"], [20, 3, 1, "_CPPv4I0E19count_trailing_bitsNSt6size_tE8INT_TYPE", "count_trailing_bits::n"], [20, 2, 1, "_CPPv432cpp_shape_from_python_shape_likeRKNSt7variantIN8nanobind5tupleEN8nanobind4int_EEE", "cpp_shape_from_python_shape_like"], [20, 3, 1, "_CPPv432cpp_shape_from_python_shape_likeRKNSt7variantIN8nanobind5tupleEN8nanobind4int_EEE", "cpp_shape_from_python_shape_like::shape"], [15, 2, 1, "_CPPv411do_infinity16QuantizationModeb", "do_infinity"], [15, 3, 1, "_CPPv411do_infinity16QuantizationModeb", "do_infinity::mode"], [15, 3, 1, "_CPPv411do_infinity16QuantizationModeb", "do_infinity::sign"], [20, 2, 1, "_CPPv413double_dabbleNSt6vectorI9mp_limb_tEE", "double_dabble"], [20, 3, 1, "_CPPv413double_dabbleNSt6vectorI9mp_limb_tEE", "double_dabble::nibble_data"], [22, 2, 1, "_CPPv413exp_of_doubled", "exp_of_double"], [22, 3, 1, "_CPPv413exp_of_doubled", "exp_of_double::d"], [17, 8, 1, "_CPPv45exp_t", "exp_t"], [20, 2, 1, "_CPPv410fold_shapeRKNSt6vectorINSt6size_tEEE", "fold_shape"], [20, 3, 1, "_CPPv410fold_shapeRKNSt6vectorINSt6size_tEEE", "fold_shape::shape"], [20, 2, 1, "_CPPv416from_nibble_listRKNSt6vectorINSt7uint8_tEEE", "from_nibble_list"], [20, 3, 1, "_CPPv416from_nibble_listRKNSt6vectorINSt7uint8_tEEE", "from_nibble_list::nibble_list"], [17, 2, 1, "_CPPv426get_accumulator_mode_fixedv", "get_accumulator_mode_fixed"], [17, 2, 1, "_CPPv426get_accumulator_mode_floatv", "get_accumulator_mode_float"], [12, 2, 1, "_CPPv420get_data_from_doublediii", "get_data_from_double"], [12, 3, 1, "_CPPv420get_data_from_doublediii", "get_data_from_double::bits"], [12, 3, 1, "_CPPv420get_data_from_doublediii", "get_data_from_double::frac_bits"], [12, 3, 1, "_CPPv420get_data_from_doublediii", "get_data_from_double::shift_amnt"], [12, 3, 1, "_CPPv420get_data_from_doublediii", "get_data_from_double::value"], [17, 2, 1, "_CPPv419get_fixed_cast_modev", "get_fixed_cast_mode"], [17, 2, 1, "_CPPv427get_float_quantization_modev", "get_float_quantization_mode"], [17, 2, 1, "_CPPv427get_float_quantization_seedv", "get_float_quantization_seed"], [12, 2, 1, "_CPPv44ipow8APyFixedj", "ipow"], [15, 2, 1, "_CPPv44ipow5man_tj", "ipow"], [12, 3, 1, "_CPPv44ipow8APyFixedj", "ipow::base"], [15, 3, 1, "_CPPv44ipow5man_tj", "ipow::base"], [12, 3, 1, "_CPPv44ipow8APyFixedj", "ipow::n"], [15, 3, 1, "_CPPv44ipow5man_tj", "ipow::n"], [21, 2, 1, "_CPPv416is_broadcastableRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEE", "is_broadcastable"], [21, 3, 1, "_CPPv416is_broadcastableRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEE", "is_broadcastable::dst_shape"], [21, 3, 1, "_CPPv416is_broadcastableRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEE", "is_broadcastable::src_shape"], [20, 2, 1, "_CPPv431is_valid_decimal_numeric_stringRKNSt6stringE", "is_valid_decimal_numeric_string"], [20, 3, 1, "_CPPv431is_valid_decimal_numeric_stringRKNSt6stringE", "is_valid_decimal_numeric_string::str"], [20, 2, 1, "_CPPv4I0E12leading_onesNSt6size_tE8INT_TYPE", "leading_ones"], [20, 4, 1, "_CPPv4I0E12leading_onesNSt6size_tE8INT_TYPE", "leading_ones::INT_TYPE"], [20, 3, 1, "_CPPv4I0E12leading_onesNSt6size_tE8INT_TYPE", "leading_ones::n"], [20, 2, 1, "_CPPv4I0E13leading_zerosNSt6size_tE8INT_TYPE", "leading_zeros"], [20, 4, 1, "_CPPv4I0E13leading_zerosNSt6size_tE8INT_TYPE", "leading_zeros::INT_TYPE"], [20, 3, 1, "_CPPv4I0E13leading_zerosNSt6size_tE8INT_TYPE", "leading_zeros::n"], [15, 2, 1, "_CPPv422leading_zeros_apyfixedRK8APyFixed", "leading_zeros_apyfixed"], [15, 3, 1, "_CPPv422leading_zeros_apyfixedRK8APyFixed", "leading_zeros_apyfixed::fx"], [20, 2, 1, "_CPPv4I00E15limb_vector_absb25RANDOM_ACCESS_ITERATOR_IN25RANDOM_ACCESS_ITERATOR_IN26RANDOM_ACCESS_ITERATOR_OUT", "limb_vector_abs"], [20, 4, 1, "_CPPv4I00E15limb_vector_absb25RANDOM_ACCESS_ITERATOR_IN25RANDOM_ACCESS_ITERATOR_IN26RANDOM_ACCESS_ITERATOR_OUT", "limb_vector_abs::RANDOM_ACCESS_ITERATOR_IN"], [20, 4, 1, "_CPPv4I00E15limb_vector_absb25RANDOM_ACCESS_ITERATOR_IN25RANDOM_ACCESS_ITERATOR_IN26RANDOM_ACCESS_ITERATOR_OUT", "limb_vector_abs::RANDOM_ACCESS_ITERATOR_OUT"], [20, 3, 1, "_CPPv4I00E15limb_vector_absb25RANDOM_ACCESS_ITERATOR_IN25RANDOM_ACCESS_ITERATOR_IN26RANDOM_ACCESS_ITERATOR_OUT", "limb_vector_abs::cbegin_it"], [20, 3, 1, "_CPPv4I00E15limb_vector_absb25RANDOM_ACCESS_ITERATOR_IN25RANDOM_ACCESS_ITERATOR_IN26RANDOM_ACCESS_ITERATOR_OUT", "limb_vector_abs::cend_it"], [20, 3, 1, "_CPPv4I00E15limb_vector_absb25RANDOM_ACCESS_ITERATOR_IN25RANDOM_ACCESS_ITERATOR_IN26RANDOM_ACCESS_ITERATOR_OUT", "limb_vector_abs::res_it"], [20, 2, 1, "_CPPv4I0E20limb_vector_add_pow29mp_limb_t22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_add_pow2"], [20, 4, 1, "_CPPv4I0E20limb_vector_add_pow29mp_limb_t22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_add_pow2::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E20limb_vector_add_pow29mp_limb_t22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_add_pow2::it_begin"], [20, 3, 1, "_CPPv4I0E20limb_vector_add_pow29mp_limb_t22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_add_pow2::it_end"], [20, 3, 1, "_CPPv4I0E20limb_vector_add_pow29mp_limb_t22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_add_pow2::n"], [20, 2, 1, "_CPPv4I0E20limb_vector_all_onesb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_all_ones"], [20, 4, 1, "_CPPv4I0E20limb_vector_all_onesb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_all_ones::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E20limb_vector_all_onesb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_all_ones::cbegin_it"], [20, 3, 1, "_CPPv4I0E20limb_vector_all_onesb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_all_ones::cend_it"], [20, 3, 1, "_CPPv4I0E20limb_vector_all_onesb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_all_ones::n"], [20, 2, 1, "_CPPv4I0E21limb_vector_all_zerosb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_all_zeros"], [20, 4, 1, "_CPPv4I0E21limb_vector_all_zerosb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_all_zeros::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E21limb_vector_all_zerosb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_all_zeros::cbegin_it"], [20, 3, 1, "_CPPv4I0E21limb_vector_all_zerosb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_all_zeros::cend_it"], [20, 3, 1, "_CPPv4I0E21limb_vector_all_zerosb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_all_zeros::n"], [20, 2, 1, "_CPPv4I0E15limb_vector_asrv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_asr"], [20, 4, 1, "_CPPv4I0E15limb_vector_asrv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_asr::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E15limb_vector_asrv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_asr::it_begin"], [20, 3, 1, "_CPPv4I0E15limb_vector_asrv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_asr::it_end"], [20, 3, 1, "_CPPv4I0E15limb_vector_asrv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_asr::shift_amnt"], [20, 2, 1, "_CPPv425limb_vector_from_uint64_tNSt16initializer_listI8uint64_tEE", "limb_vector_from_uint64_t"], [20, 3, 1, "_CPPv425limb_vector_from_uint64_tNSt16initializer_listI8uint64_tEE", "limb_vector_from_uint64_t::list"], [20, 2, 1, "_CPPv4I0E20limb_vector_gte_pow2b22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_gte_pow2"], [20, 4, 1, "_CPPv4I0E20limb_vector_gte_pow2b22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_gte_pow2::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E20limb_vector_gte_pow2b22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_gte_pow2::it_begin"], [20, 3, 1, "_CPPv4I0E20limb_vector_gte_pow2b22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_gte_pow2::it_end"], [20, 3, 1, "_CPPv4I0E20limb_vector_gte_pow2b22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_gte_pow2::n"], [20, 2, 1, "_CPPv4I0E23limb_vector_is_negativeb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "limb_vector_is_negative"], [20, 4, 1, "_CPPv4I0E23limb_vector_is_negativeb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "limb_vector_is_negative::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E23limb_vector_is_negativeb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "limb_vector_is_negative::cbegin_it"], [20, 3, 1, "_CPPv4I0E23limb_vector_is_negativeb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "limb_vector_is_negative::cend_it"], [20, 2, 1, "_CPPv4I0E19limb_vector_is_zerob22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "limb_vector_is_zero"], [20, 4, 1, "_CPPv4I0E19limb_vector_is_zerob22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "limb_vector_is_zero::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E19limb_vector_is_zerob22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "limb_vector_is_zero::cbegin_it"], [20, 3, 1, "_CPPv4I0E19limb_vector_is_zerob22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "limb_vector_is_zero::cend_it"], [20, 2, 1, "_CPPv4I0E24limb_vector_leading_onesNSt6size_tE22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "limb_vector_leading_ones"], [20, 4, 1, "_CPPv4I0E24limb_vector_leading_onesNSt6size_tE22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "limb_vector_leading_ones::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E24limb_vector_leading_onesNSt6size_tE22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "limb_vector_leading_ones::begin"], [20, 3, 1, "_CPPv4I0E24limb_vector_leading_onesNSt6size_tE22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "limb_vector_leading_ones::end"], [20, 2, 1, "_CPPv4I0E25limb_vector_leading_zerosNSt6size_tE22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "limb_vector_leading_zeros"], [20, 4, 1, "_CPPv4I0E25limb_vector_leading_zerosNSt6size_tE22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "limb_vector_leading_zeros::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E25limb_vector_leading_zerosNSt6size_tE22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "limb_vector_leading_zeros::begin"], [20, 3, 1, "_CPPv4I0E25limb_vector_leading_zerosNSt6size_tE22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "limb_vector_leading_zeros::end"], [20, 2, 1, "_CPPv4I0E15limb_vector_lslv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_lsl"], [20, 4, 1, "_CPPv4I0E15limb_vector_lslv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_lsl::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E15limb_vector_lslv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_lsl::it_begin"], [20, 3, 1, "_CPPv4I0E15limb_vector_lslv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_lsl::it_end"], [20, 3, 1, "_CPPv4I0E15limb_vector_lslv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_lsl::shift_amnt"], [20, 2, 1, "_CPPv4I0E21limb_vector_lsl_innerv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORjjj", "limb_vector_lsl_inner"], [20, 4, 1, "_CPPv4I0E21limb_vector_lsl_innerv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORjjj", "limb_vector_lsl_inner::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E21limb_vector_lsl_innerv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORjjj", "limb_vector_lsl_inner::it_begin"], [20, 3, 1, "_CPPv4I0E21limb_vector_lsl_innerv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORjjj", "limb_vector_lsl_inner::it_end"], [20, 3, 1, "_CPPv4I0E21limb_vector_lsl_innerv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORjjj", "limb_vector_lsl_inner::limb_shift"], [20, 3, 1, "_CPPv4I0E21limb_vector_lsl_innerv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORjjj", "limb_vector_lsl_inner::limb_skip"], [20, 3, 1, "_CPPv4I0E21limb_vector_lsl_innerv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORjjj", "limb_vector_lsl_inner::vec_size"], [20, 2, 1, "_CPPv4I0E15limb_vector_lsrv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_lsr"], [20, 4, 1, "_CPPv4I0E15limb_vector_lsrv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_lsr::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E15limb_vector_lsrv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_lsr::it_begin"], [20, 3, 1, "_CPPv4I0E15limb_vector_lsrv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_lsr::it_end"], [20, 3, 1, "_CPPv4I0E15limb_vector_lsrv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_lsr::shift_amnt"], [20, 2, 1, "_CPPv4I00E18limb_vector_negate9mp_limb_t25RANDOM_ACCESS_ITERATOR_IN25RANDOM_ACCESS_ITERATOR_IN26RANDOM_ACCESS_ITERATOR_OUT", "limb_vector_negate"], [20, 4, 1, "_CPPv4I00E18limb_vector_negate9mp_limb_t25RANDOM_ACCESS_ITERATOR_IN25RANDOM_ACCESS_ITERATOR_IN26RANDOM_ACCESS_ITERATOR_OUT", "limb_vector_negate::RANDOM_ACCESS_ITERATOR_IN"], [20, 4, 1, "_CPPv4I00E18limb_vector_negate9mp_limb_t25RANDOM_ACCESS_ITERATOR_IN25RANDOM_ACCESS_ITERATOR_IN26RANDOM_ACCESS_ITERATOR_OUT", "limb_vector_negate::RANDOM_ACCESS_ITERATOR_OUT"], [20, 3, 1, "_CPPv4I00E18limb_vector_negate9mp_limb_t25RANDOM_ACCESS_ITERATOR_IN25RANDOM_ACCESS_ITERATOR_IN26RANDOM_ACCESS_ITERATOR_OUT", "limb_vector_negate::cbegin_it"], [20, 3, 1, "_CPPv4I00E18limb_vector_negate9mp_limb_t25RANDOM_ACCESS_ITERATOR_IN25RANDOM_ACCESS_ITERATOR_IN26RANDOM_ACCESS_ITERATOR_OUT", "limb_vector_negate::cend_it"], [20, 3, 1, "_CPPv4I00E18limb_vector_negate9mp_limb_t25RANDOM_ACCESS_ITERATOR_IN25RANDOM_ACCESS_ITERATOR_IN26RANDOM_ACCESS_ITERATOR_OUT", "limb_vector_negate::res_it"], [20, 2, 1, "_CPPv4I0E21limb_vector_or_reduceb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_or_reduce"], [20, 4, 1, "_CPPv4I0E21limb_vector_or_reduceb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_or_reduce::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E21limb_vector_or_reduceb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_or_reduce::cbegin_it"], [20, 3, 1, "_CPPv4I0E21limb_vector_or_reduceb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_or_reduce::cend_it"], [20, 3, 1, "_CPPv4I0E21limb_vector_or_reduceb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_or_reduce::n"], [20, 2, 1, "_CPPv4I0E19limb_vector_set_bitv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORjb", "limb_vector_set_bit"], [20, 4, 1, "_CPPv4I0E19limb_vector_set_bitv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORjb", "limb_vector_set_bit::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E19limb_vector_set_bitv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORjb", "limb_vector_set_bit::begin_it"], [20, 3, 1, "_CPPv4I0E19limb_vector_set_bitv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORjb", "limb_vector_set_bit::bit"], [20, 3, 1, "_CPPv4I0E19limb_vector_set_bitv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORjb", "limb_vector_set_bit::end_it"], [20, 3, 1, "_CPPv4I0E19limb_vector_set_bitv22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORjb", "limb_vector_set_bit::n"], [20, 2, 1, "_CPPv4I0E20limb_vector_sub_pow29mp_limb_t22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_sub_pow2"], [20, 4, 1, "_CPPv4I0E20limb_vector_sub_pow29mp_limb_t22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_sub_pow2::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E20limb_vector_sub_pow29mp_limb_t22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_sub_pow2::it_begin"], [20, 3, 1, "_CPPv4I0E20limb_vector_sub_pow29mp_limb_t22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_sub_pow2::it_end"], [20, 3, 1, "_CPPv4I0E20limb_vector_sub_pow29mp_limb_t22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_sub_pow2::n"], [20, 2, 1, "_CPPv4I0E20limb_vector_test_bitb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_test_bit"], [20, 4, 1, "_CPPv4I0E20limb_vector_test_bitb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_test_bit::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E20limb_vector_test_bitb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_test_bit::cbegin_it"], [20, 3, 1, "_CPPv4I0E20limb_vector_test_bitb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_test_bit::cend_it"], [20, 3, 1, "_CPPv4I0E20limb_vector_test_bitb22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORj", "limb_vector_test_bit::n"], [22, 2, 1, "_CPPv413man_of_doubled", "man_of_double"], [22, 3, 1, "_CPPv413man_of_doubled", "man_of_double::d"], [17, 8, 1, "_CPPv45man_t", "man_t"], [20, 2, 1, "_CPPv4I0E12nibble_widthNSt6size_tE8INT_TYPE", "nibble_width"], [20, 4, 1, "_CPPv4I0E12nibble_widthNSt6size_tE8INT_TYPE", "nibble_width::INT_TYPE"], [20, 3, 1, "_CPPv4I0E12nibble_widthNSt6size_tE8INT_TYPE", "nibble_width::x"], [24, 2, 1, "_CPPv4I0E23python_limb_vec_to_longN8nanobind4int_E22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORbNSt8optionalIjEE", "python_limb_vec_to_long"], [24, 4, 1, "_CPPv4I0E23python_limb_vec_to_longN8nanobind4int_E22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORbNSt8optionalIjEE", "python_limb_vec_to_long::RANDOM_ACCESS_ITERATOR"], [24, 3, 1, "_CPPv4I0E23python_limb_vec_to_longN8nanobind4int_E22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORbNSt8optionalIjEE", "python_limb_vec_to_long::begin"], [24, 3, 1, "_CPPv4I0E23python_limb_vec_to_longN8nanobind4int_E22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORbNSt8optionalIjEE", "python_limb_vec_to_long::bits_last_limb"], [24, 3, 1, "_CPPv4I0E23python_limb_vec_to_longN8nanobind4int_E22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORbNSt8optionalIjEE", "python_limb_vec_to_long::end"], [24, 3, 1, "_CPPv4I0E23python_limb_vec_to_longN8nanobind4int_E22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATORbNSt8optionalIjEE", "python_limb_vec_to_long::vec_is_signed"], [24, 2, 1, "_CPPv423python_long_is_negativeRKN8nanobind4int_E", "python_long_is_negative"], [24, 3, 1, "_CPPv423python_long_is_negativeRKN8nanobind4int_E", "python_long_is_negative::py_long_int"], [24, 2, 1, "_CPPv423python_long_to_limb_vecRKN8nanobind4int_ENSt8optionalINSt6size_tEEE", "python_long_to_limb_vec"], [24, 3, 1, "_CPPv423python_long_to_limb_vecRKN8nanobind4int_ENSt8optionalINSt6size_tEEE", "python_long_to_limb_vec::n_min_limbs"], [24, 3, 1, "_CPPv423python_long_to_limb_vecRKN8nanobind4int_ENSt8optionalINSt6size_tEEE", "python_long_to_limb_vec::py_long_int"], [24, 2, 1, "_CPPv429python_sequence_extract_shapeRKN8nanobind8sequenceE", "python_sequence_extract_shape"], [24, 3, 1, "_CPPv429python_sequence_extract_shapeRKN8nanobind8sequenceE", "python_sequence_extract_shape::bit_pattern_sequence"], [24, 2, 1, "_CPPv4IDpE20python_sequence_walkNSt6vectorIN8nanobind6objectEEERKN8nanobind8sequenceE", "python_sequence_walk"], [24, 4, 1, "_CPPv4IDpE20python_sequence_walkNSt6vectorIN8nanobind6objectEEERKN8nanobind8sequenceE", "python_sequence_walk::PyTypes"], [24, 3, 1, "_CPPv4IDpE20python_sequence_walkNSt6vectorIN8nanobind6objectEEERKN8nanobind8sequenceE", "python_sequence_walk::py_seq"], [15, 2, 1, "_CPPv420quantize_apymantissaR8APyFixedbi16QuantizationMode", "quantize_apymantissa"], [15, 3, 1, "_CPPv420quantize_apymantissaR8APyFixedbi16QuantizationMode", "quantize_apymantissa::apyman"], [15, 3, 1, "_CPPv420quantize_apymantissaR8APyFixedbi16QuantizationMode", "quantize_apymantissa::bits"], [15, 3, 1, "_CPPv420quantize_apymantissaR8APyFixedbi16QuantizationMode", "quantize_apymantissa::quantization"], [15, 3, 1, "_CPPv420quantize_apymantissaR8APyFixedbi16QuantizationMode", "quantize_apymantissa::sign"], [15, 2, 1, "_CPPv422quantize_close_to_zerob5man_t16QuantizationMode", "quantize_close_to_zero"], [15, 3, 1, "_CPPv422quantize_close_to_zerob5man_t16QuantizationMode", "quantize_close_to_zero::man"], [15, 3, 1, "_CPPv422quantize_close_to_zerob5man_t16QuantizationMode", "quantize_close_to_zero::quantization"], [15, 3, 1, "_CPPv422quantize_close_to_zerob5man_t16QuantizationMode", "quantize_close_to_zero::sign"], [15, 2, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_t16QuantizationMode", "quantize_mantissa"], [15, 2, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_tNSt7uint8_tE5man_t16QuantizationMode", "quantize_mantissa"], [15, 3, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_t16QuantizationMode", "quantize_mantissa::bits_to_quantize"], [15, 3, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_tNSt7uint8_tE5man_t16QuantizationMode", "quantize_mantissa::bits_to_quantize"], [15, 3, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_tNSt7uint8_tE5man_t16QuantizationMode", "quantize_mantissa::bits_to_quantize_dec"], [15, 3, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_t16QuantizationMode", "quantize_mantissa::exp"], [15, 3, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_tNSt7uint8_tE5man_t16QuantizationMode", "quantize_mantissa::exp"], [15, 3, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_t16QuantizationMode", "quantize_mantissa::man"], [15, 3, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_tNSt7uint8_tE5man_t16QuantizationMode", "quantize_mantissa::man"], [15, 3, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_t16QuantizationMode", "quantize_mantissa::man_msb_constant"], [15, 3, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_tNSt7uint8_tE5man_t16QuantizationMode", "quantize_mantissa::man_msb_constant"], [15, 3, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_t16QuantizationMode", "quantize_mantissa::max_exp"], [15, 3, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_tNSt7uint8_tE5man_t16QuantizationMode", "quantize_mantissa::max_exp"], [15, 3, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_t16QuantizationMode", "quantize_mantissa::quantization"], [15, 3, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_tNSt7uint8_tE5man_t16QuantizationMode", "quantize_mantissa::quantization"], [15, 3, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_t16QuantizationMode", "quantize_mantissa::sign"], [15, 3, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_tNSt7uint8_tE5man_t16QuantizationMode", "quantize_mantissa::sign"], [15, 3, 1, "_CPPv417quantize_mantissaR5man_tR5exp_t5exp_tNSt7uint8_tEb5man_tNSt7uint8_tE5man_t16QuantizationMode", "quantize_mantissa::sticky_constant"], [17, 2, 1, "_CPPv419random_number_floatv", "random_number_float"], [20, 2, 1, "_CPPv421reverse_double_dabbleRKNSt6vectorINSt7uint8_tEEE", "reverse_double_dabble"], [20, 3, 1, "_CPPv421reverse_double_dabbleRKNSt6vectorINSt7uint8_tEEE", "reverse_double_dabble::bcd_list"], [22, 2, 1, "_CPPv417set_exp_of_doubleRdi", "set_exp_of_double"], [22, 3, 1, "_CPPv417set_exp_of_doubleRdi", "set_exp_of_double::d"], [22, 3, 1, "_CPPv417set_exp_of_doubleRdi", "set_exp_of_double::exp"], [17, 2, 1, "_CPPv427set_float_quantization_mode16QuantizationMode", "set_float_quantization_mode"], [17, 3, 1, "_CPPv427set_float_quantization_mode16QuantizationMode", "set_float_quantization_mode::mode"], [17, 2, 1, "_CPPv427set_float_quantization_seedNSt8uint64_tE", "set_float_quantization_seed"], [22, 2, 1, "_CPPv417set_man_of_doubleRd8uint64_t", "set_man_of_double"], [22, 3, 1, "_CPPv417set_man_of_doubleRd8uint64_t", "set_man_of_double::d"], [22, 3, 1, "_CPPv417set_man_of_doubleRd8uint64_t", "set_man_of_double::man"], [22, 2, 1, "_CPPv418set_sign_of_doubleRdb", "set_sign_of_double"], [22, 3, 1, "_CPPv418set_sign_of_doubleRdb", "set_sign_of_double::d"], [22, 3, 1, "_CPPv418set_sign_of_doubleRdb", "set_sign_of_double::sign"], [22, 2, 1, "_CPPv414sign_of_doubled", "sign_of_double"], [22, 3, 1, "_CPPv414sign_of_doubled", "sign_of_double::d"], [20, 2, 1, "_CPPv4I0E17significant_limbsNSt6size_tE22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "significant_limbs"], [20, 4, 1, "_CPPv4I0E17significant_limbsNSt6size_tE22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "significant_limbs::RANDOM_ACCESS_ITERATOR"], [20, 3, 1, "_CPPv4I0E17significant_limbsNSt6size_tE22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "significant_limbs::begin"], [20, 3, 1, "_CPPv4I0E17significant_limbsNSt6size_tE22RANDOM_ACCESS_ITERATOR22RANDOM_ACCESS_ITERATOR", "significant_limbs::end"], [19, 8, 1, "_CPPv44simd", "simd"], [19, 2, 1, "_CPPv4N4simd24CREATE_FUNCTOR_FROM_FUNCE11add_functor10vector_add", "simd::CREATE_FUNCTOR_FROM_FUNC"], [19, 2, 1, "_CPPv4N4simd24CREATE_FUNCTOR_FROM_FUNCE11sub_functor10vector_sub", "simd::CREATE_FUNCTOR_FROM_FUNC"], [19, 2, 1, "_CPPv4N4simd24CREATE_FUNCTOR_FROM_FUNCE17add_const_functor16vector_add_const", "simd::CREATE_FUNCTOR_FROM_FUNC"], [19, 2, 1, "_CPPv4N4simd24CREATE_FUNCTOR_FROM_FUNCE17shift_add_functor16vector_shift_add", "simd::CREATE_FUNCTOR_FROM_FUNC"], [19, 2, 1, "_CPPv4N4simd24CREATE_FUNCTOR_FROM_FUNCE17shift_sub_functor16vector_shift_sub", "simd::CREATE_FUNCTOR_FROM_FUNC"], [19, 2, 1, "_CPPv4N4simd24CREATE_FUNCTOR_FROM_FUNCE17sub_const_functor16vector_sub_const", "simd::CREATE_FUNCTOR_FROM_FUNC"], [19, 2, 1, "_CPPv4N4simd24CREATE_FUNCTOR_FROM_FUNCE23shift_add_const_functor22vector_shift_add_const", "simd::CREATE_FUNCTOR_FROM_FUNC"], [19, 2, 1, "_CPPv4N4simd24CREATE_FUNCTOR_FROM_FUNCE23shift_sub_const_functor22vector_shift_sub_const", "simd::CREATE_FUNCTOR_FROM_FUNC"], [19, 2, 1, "_CPPv4N4simd20get_simd_version_strEv", "simd::get_simd_version_str"], [19, 2, 1, "_CPPv4N4simd10vector_addENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_add"], [19, 3, 1, "_CPPv4N4simd10vector_addENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_add::dst_begin"], [19, 3, 1, "_CPPv4N4simd10vector_addENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_add::size"], [19, 3, 1, "_CPPv4N4simd10vector_addENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_add::src1_begin"], [19, 3, 1, "_CPPv4N4simd10vector_addENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_add::src2_begin"], [19, 2, 1, "_CPPv4N4simd16vector_add_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_add_const"], [19, 3, 1, "_CPPv4N4simd16vector_add_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_add_const::constant"], [19, 3, 1, "_CPPv4N4simd16vector_add_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_add_const::dst_begin"], [19, 3, 1, "_CPPv4N4simd16vector_add_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_add_const::size"], [19, 3, 1, "_CPPv4N4simd16vector_add_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_add_const::src1_begin"], [19, 2, 1, "_CPPv4N4simd10vector_mulENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_mul"], [19, 3, 1, "_CPPv4N4simd10vector_mulENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_mul::dst_begin"], [19, 3, 1, "_CPPv4N4simd10vector_mulENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_mul::size"], [19, 3, 1, "_CPPv4N4simd10vector_mulENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_mul::src1_begin"], [19, 3, 1, "_CPPv4N4simd10vector_mulENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_mul::src2_begin"], [19, 2, 1, "_CPPv4N4simd16vector_mul_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_mul_const"], [19, 3, 1, "_CPPv4N4simd16vector_mul_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_mul_const::constant"], [19, 3, 1, "_CPPv4N4simd16vector_mul_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_mul_const::dst_begin"], [19, 3, 1, "_CPPv4N4simd16vector_mul_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_mul_const::size"], [19, 3, 1, "_CPPv4N4simd16vector_mul_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_mul_const::src1_begin"], [19, 2, 1, "_CPPv4N4simd26vector_multiply_accumulateENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6size_tE", "simd::vector_multiply_accumulate"], [19, 3, 1, "_CPPv4N4simd26vector_multiply_accumulateENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6size_tE", "simd::vector_multiply_accumulate::size"], [19, 3, 1, "_CPPv4N4simd26vector_multiply_accumulateENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6size_tE", "simd::vector_multiply_accumulate::src1_begin"], [19, 3, 1, "_CPPv4N4simd26vector_multiply_accumulateENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6size_tE", "simd::vector_multiply_accumulate::src2_begin"], [19, 2, 1, "_CPPv4N4simd24vector_rdiv_const_signedENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_rdiv_const_signed"], [19, 3, 1, "_CPPv4N4simd24vector_rdiv_const_signedENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_rdiv_const_signed::constant"], [19, 3, 1, "_CPPv4N4simd24vector_rdiv_const_signedENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_rdiv_const_signed::dst_begin"], [19, 3, 1, "_CPPv4N4simd24vector_rdiv_const_signedENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_rdiv_const_signed::size"], [19, 3, 1, "_CPPv4N4simd24vector_rdiv_const_signedENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_rdiv_const_signed::src1_begin"], [19, 2, 1, "_CPPv4N4simd17vector_rsub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_rsub_const"], [19, 3, 1, "_CPPv4N4simd17vector_rsub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_rsub_const::constant"], [19, 3, 1, "_CPPv4N4simd17vector_rsub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_rsub_const::dst_begin"], [19, 3, 1, "_CPPv4N4simd17vector_rsub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_rsub_const::size"], [19, 3, 1, "_CPPv4N4simd17vector_rsub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_rsub_const::src1_begin"], [19, 2, 1, "_CPPv4N4simd16vector_shift_addENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjjNSt6size_tE", "simd::vector_shift_add"], [19, 3, 1, "_CPPv4N4simd16vector_shift_addENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjjNSt6size_tE", "simd::vector_shift_add::dst_begin"], [19, 3, 1, "_CPPv4N4simd16vector_shift_addENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjjNSt6size_tE", "simd::vector_shift_add::size"], [19, 3, 1, "_CPPv4N4simd16vector_shift_addENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjjNSt6size_tE", "simd::vector_shift_add::src1_begin"], [19, 3, 1, "_CPPv4N4simd16vector_shift_addENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjjNSt6size_tE", "simd::vector_shift_add::src1_shift_amount"], [19, 3, 1, "_CPPv4N4simd16vector_shift_addENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjjNSt6size_tE", "simd::vector_shift_add::src2_begin"], [19, 3, 1, "_CPPv4N4simd16vector_shift_addENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjjNSt6size_tE", "simd::vector_shift_add::src2_shift_amount"], [19, 2, 1, "_CPPv4N4simd22vector_shift_add_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_add_const"], [19, 3, 1, "_CPPv4N4simd22vector_shift_add_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_add_const::constant"], [19, 3, 1, "_CPPv4N4simd22vector_shift_add_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_add_const::dst_begin"], [19, 3, 1, "_CPPv4N4simd22vector_shift_add_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_add_const::size"], [19, 3, 1, "_CPPv4N4simd22vector_shift_add_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_add_const::src1_begin"], [19, 3, 1, "_CPPv4N4simd22vector_shift_add_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_add_const::src1_shift_amount"], [19, 2, 1, "_CPPv4N4simd29vector_shift_div_const_signedENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_div_const_signed"], [19, 3, 1, "_CPPv4N4simd29vector_shift_div_const_signedENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_div_const_signed::constant"], [19, 3, 1, "_CPPv4N4simd29vector_shift_div_const_signedENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_div_const_signed::dst_begin"], [19, 3, 1, "_CPPv4N4simd29vector_shift_div_const_signedENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_div_const_signed::size"], [19, 3, 1, "_CPPv4N4simd29vector_shift_div_const_signedENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_div_const_signed::src1_begin"], [19, 3, 1, "_CPPv4N4simd29vector_shift_div_const_signedENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_div_const_signed::src1_shift_amount"], [19, 2, 1, "_CPPv4N4simd23vector_shift_div_signedENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_div_signed"], [19, 3, 1, "_CPPv4N4simd23vector_shift_div_signedENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_div_signed::dst_begin"], [19, 3, 1, "_CPPv4N4simd23vector_shift_div_signedENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_div_signed::size"], [19, 3, 1, "_CPPv4N4simd23vector_shift_div_signedENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_div_signed::src1_begin"], [19, 3, 1, "_CPPv4N4simd23vector_shift_div_signedENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_div_signed::src1_shift_amount"], [19, 3, 1, "_CPPv4N4simd23vector_shift_div_signedENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_div_signed::src2_begin"], [19, 2, 1, "_CPPv4N4simd16vector_shift_subENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjjNSt6size_tE", "simd::vector_shift_sub"], [19, 3, 1, "_CPPv4N4simd16vector_shift_subENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjjNSt6size_tE", "simd::vector_shift_sub::dst_begin"], [19, 3, 1, "_CPPv4N4simd16vector_shift_subENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjjNSt6size_tE", "simd::vector_shift_sub::size"], [19, 3, 1, "_CPPv4N4simd16vector_shift_subENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjjNSt6size_tE", "simd::vector_shift_sub::src1_begin"], [19, 3, 1, "_CPPv4N4simd16vector_shift_subENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjjNSt6size_tE", "simd::vector_shift_sub::src1_shift_amount"], [19, 3, 1, "_CPPv4N4simd16vector_shift_subENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjjNSt6size_tE", "simd::vector_shift_sub::src2_begin"], [19, 3, 1, "_CPPv4N4simd16vector_shift_subENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorEjjNSt6size_tE", "simd::vector_shift_sub::src2_shift_amount"], [19, 2, 1, "_CPPv4N4simd22vector_shift_sub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_sub_const"], [19, 3, 1, "_CPPv4N4simd22vector_shift_sub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_sub_const::constant"], [19, 3, 1, "_CPPv4N4simd22vector_shift_sub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_sub_const::dst_begin"], [19, 3, 1, "_CPPv4N4simd22vector_shift_sub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_sub_const::size"], [19, 3, 1, "_CPPv4N4simd22vector_shift_sub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_sub_const::src1_begin"], [19, 3, 1, "_CPPv4N4simd22vector_shift_sub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorEjNSt6size_tE", "simd::vector_shift_sub_const::src1_shift_amount"], [19, 2, 1, "_CPPv4N4simd10vector_subENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_sub"], [19, 3, 1, "_CPPv4N4simd10vector_subENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_sub::dst_begin"], [19, 3, 1, "_CPPv4N4simd10vector_subENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_sub::size"], [19, 3, 1, "_CPPv4N4simd10vector_subENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_sub::src1_begin"], [19, 3, 1, "_CPPv4N4simd10vector_subENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE14const_iteratorENSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_sub::src2_begin"], [19, 2, 1, "_CPPv4N4simd16vector_sub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_sub_const"], [19, 3, 1, "_CPPv4N4simd16vector_sub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_sub_const::constant"], [19, 3, 1, "_CPPv4N4simd16vector_sub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_sub_const::dst_begin"], [19, 3, 1, "_CPPv4N4simd16vector_sub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_sub_const::size"], [19, 3, 1, "_CPPv4N4simd16vector_sub_constENSt6vectorI9mp_limb_tE14const_iteratorE9mp_limb_tNSt6vectorI9mp_limb_tE8iteratorENSt6size_tE", "simd::vector_sub_const::src1_begin"], [21, 2, 1, "_CPPv428smallest_broadcastable_shapeRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEE", "smallest_broadcastable_shape"], [21, 3, 1, "_CPPv428smallest_broadcastable_shapeRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEE", "smallest_broadcastable_shape::shape1"], [21, 3, 1, "_CPPv428smallest_broadcastable_shapeRKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEE", "smallest_broadcastable_shape::shape2"], [21, 2, 1, "_CPPv4I0E14src_to_dst_idxNSt6size_tENSt6size_tERR4FUNCRKNSt6vectorINSt6size_tEEE", "src_to_dst_idx"], [21, 4, 1, "_CPPv4I0E14src_to_dst_idxNSt6size_tENSt6size_tERR4FUNCRKNSt6vectorINSt6size_tEEE", "src_to_dst_idx::FUNC"], [21, 3, 1, "_CPPv4I0E14src_to_dst_idxNSt6size_tENSt6size_tERR4FUNCRKNSt6vectorINSt6size_tEEE", "src_to_dst_idx::broadcast_rule"], [21, 3, 1, "_CPPv4I0E14src_to_dst_idxNSt6size_tENSt6size_tERR4FUNCRKNSt6vectorINSt6size_tEEE", "src_to_dst_idx::i"], [21, 3, 1, "_CPPv4I0E14src_to_dst_idxNSt6size_tENSt6size_tERR4FUNCRKNSt6vectorINSt6size_tEEE", "src_to_dst_idx::strides"], [20, 2, 1, "_CPPv418strides_from_shapeRKNSt6vectorINSt6size_tEEENSt6size_tE", "strides_from_shape"], [20, 3, 1, "_CPPv418strides_from_shapeRKNSt6vectorINSt6size_tEEENSt6size_tE", "strides_from_shape::acc_base"], [20, 3, 1, "_CPPv418strides_from_shapeRKNSt6vectorINSt6size_tEEENSt6size_tE", "strides_from_shape::shape"], [20, 2, 1, "_CPPv430string_trim_leading_whitespaceRKNSt6stringE", "string_trim_leading_whitespace"], [20, 3, 1, "_CPPv430string_trim_leading_whitespaceRKNSt6stringE", "string_trim_leading_whitespace::str"], [20, 2, 1, "_CPPv431string_trim_trailing_whitespaceRKNSt6stringE", "string_trim_trailing_whitespace"], [20, 3, 1, "_CPPv431string_trim_trailing_whitespaceRKNSt6stringE", "string_trim_trailing_whitespace::str"], [20, 2, 1, "_CPPv422string_trim_whitespaceRKNSt6stringE", "string_trim_whitespace"], [20, 3, 1, "_CPPv422string_trim_whitespaceRKNSt6stringE", "string_trim_whitespace::str"], [20, 2, 1, "_CPPv417string_trim_zerosRKNSt6stringE", "string_trim_zeros"], [20, 3, 1, "_CPPv417string_trim_zerosRKNSt6stringE", "string_trim_zeros::str"], [22, 2, 1, "_CPPv423target_is_little_endianv", "target_is_little_endian"], [20, 2, 1, "_CPPv414to_nibble_listRKNSt6vectorI9mp_limb_tEENSt6size_tE", "to_nibble_list"], [20, 3, 1, "_CPPv414to_nibble_listRKNSt6vectorI9mp_limb_tEENSt6size_tE", "to_nibble_list::data_array"], [20, 3, 1, "_CPPv414to_nibble_listRKNSt6vectorI9mp_limb_tEENSt6size_tE", "to_nibble_list::len"], [15, 2, 1, "_CPPv427translate_quantization_mode16QuantizationModeb", "translate_quantization_mode"], [15, 3, 1, "_CPPv427translate_quantization_mode16QuantizationModeb", "translate_quantization_mode::quantization"], [15, 3, 1, "_CPPv427translate_quantization_mode16QuantizationModeb", "translate_quantization_mode::sign"], [20, 2, 1, "_CPPv4I0E21tuple_string_from_vecNSt6stringERKNSt6vectorI1TEE", "tuple_string_from_vec"], [20, 4, 1, "_CPPv4I0E21tuple_string_from_vecNSt6stringERKNSt6vectorI1TEE", "tuple_string_from_vec::T"], [20, 3, 1, "_CPPv4I0E21tuple_string_from_vecNSt6stringERKNSt6vectorI1TEE", "tuple_string_from_vec::vec"], [20, 2, 1, "_CPPv424twos_complement_overflow9mp_limb_ti", "twos_complement_overflow"], [20, 3, 1, "_CPPv424twos_complement_overflow9mp_limb_ti", "twos_complement_overflow::bits"], [20, 3, 1, "_CPPv424twos_complement_overflow9mp_limb_ti", "twos_complement_overflow::value"], [22, 2, 1, "_CPPv427type_pun_double_to_uint64_td", "type_pun_double_to_uint64_t"], [22, 3, 1, "_CPPv427type_pun_double_to_uint64_td", "type_pun_double_to_uint64_t::d"], [22, 2, 1, "_CPPv427type_pun_uint64_t_to_double8uint64_t", "type_pun_uint64_t_to_double"], [22, 3, 1, "_CPPv427type_pun_uint64_t_to_double8uint64_t", "type_pun_uint64_t_to_double::num"], [20, 2, 1, "_CPPv4I0E25uint64_t_from_limb_vector8uint64_tRK11VECTOR_TYPENSt6size_tE", "uint64_t_from_limb_vector"], [20, 4, 1, "_CPPv4I0E25uint64_t_from_limb_vector8uint64_tRK11VECTOR_TYPENSt6size_tE", "uint64_t_from_limb_vector::VECTOR_TYPE"], [20, 3, 1, "_CPPv4I0E25uint64_t_from_limb_vector8uint64_tRK11VECTOR_TYPENSt6size_tE", "uint64_t_from_limb_vector::limb_vec"], [20, 3, 1, "_CPPv4I0E25uint64_t_from_limb_vector8uint64_tRK11VECTOR_TYPENSt6size_tE", "uint64_t_from_limb_vector::n"]], "apytypes": [[0, 9, 1, "", "APyFixed"], [5, 9, 1, "", "APyFixedAccumulatorContext"], [1, 9, 1, "", "APyFixedArray"], [5, 9, 1, "", "APyFixedCastContext"], [2, 9, 1, "", "APyFloat"], [5, 9, 1, "", "APyFloatAccumulatorContext"], [3, 9, 1, "", "APyFloatArray"], [5, 9, 1, "", "APyFloatQuantizationContext"], [7, 9, 1, "", "OverflowMode"], [7, 9, 1, "", "QuantizationMode"], [7, 13, 1, "", "get_float_quantization_mode"], [7, 13, 1, "", "get_float_quantization_seed"], [7, 13, 1, "", "set_float_quantization_mode"], [7, 13, 1, "", "set_float_quantization_seed"], [4, 13, 1, "", "squeeze"]], "apytypes.APyFixed": [[0, 10, 1, "", "__init__"], [0, 11, 1, "", "bits"], [0, 10, 1, "", "cast"], [0, 11, 1, "", "frac_bits"], [0, 10, 1, "", "from_float"], [0, 10, 1, "", "from_str"], [0, 11, 1, "", "int_bits"], [0, 10, 1, "", "is_identical"], [0, 11, 1, "", "is_zero"], [0, 11, 1, "", "leading_fractional_zeros"], [0, 11, 1, "", "leading_ones"], [0, 11, 1, "", "leading_signs"], [0, 11, 1, "", "leading_zeros"], [0, 10, 1, "", "to_bits"]], "apytypes.APyFixedAccumulatorContext": [[5, 10, 1, "", "__init__"]], "apytypes.APyFixedArray": [[1, 11, 1, "", "T"], [1, 10, 1, "", "__init__"], [1, 11, 1, "", "bits"], [1, 10, 1, "", "broadcast_to"], [1, 10, 1, "", "cast"], [1, 11, 1, "", "frac_bits"], [1, 10, 1, "", "from_array"], [1, 10, 1, "", "from_float"], [1, 11, 1, "", "int_bits"], [1, 10, 1, "", "is_identical"], [1, 11, 1, "", "ndim"], [1, 11, 1, "", "shape"], [1, 10, 1, "", "squeeze"], [1, 10, 1, "", "to_numpy"], [1, 10, 1, "", "transpose"]], "apytypes.APyFixedCastContext": [[5, 10, 1, "", "__init__"]], "apytypes.APyFloat": [[2, 10, 1, "", "__init__"], [2, 11, 1, "", "bias"], [2, 11, 1, "", "bits"], [2, 10, 1, "", "cast"], [2, 10, 1, "", "cast_to_bfloat16"], [2, 10, 1, "", "cast_to_double"], [2, 10, 1, "", "cast_to_half"], [2, 10, 1, "", "cast_to_single"], [2, 11, 1, "", "exp"], [2, 11, 1, "", "exp_bits"], [2, 10, 1, "", "from_bits"], [2, 10, 1, "", "from_float"], [2, 11, 1, "", "is_finite"], [2, 10, 1, "", "is_identical"], [2, 11, 1, "", "is_inf"], [2, 11, 1, "", "is_nan"], [2, 11, 1, "", "is_normal"], [2, 11, 1, "", "is_subnormal"], [2, 11, 1, "", "is_zero"], [2, 11, 1, "", "man"], [2, 11, 1, "", "man_bits"], [2, 10, 1, "", "next_down"], [2, 10, 1, "", "next_up"], [2, 11, 1, "", "sign"], [2, 10, 1, "", "to_bits"], [2, 11, 1, "", "true_exp"], [2, 11, 1, "", "true_man"], [2, 11, 1, "", "true_sign"]], "apytypes.APyFloatAccumulatorContext": [[5, 10, 1, "", "__init__"]], "apytypes.APyFloatArray": [[3, 11, 1, "", "T"], [3, 10, 1, "", "__init__"], [3, 11, 1, "", "bias"], [3, 11, 1, "", "bits"], [3, 10, 1, "", "broadcast_to"], [3, 10, 1, "", "cast"], [3, 10, 1, "", "cast_to_bfloat16"], [3, 10, 1, "", "cast_to_double"], [3, 10, 1, "", "cast_to_half"], [3, 10, 1, "", "cast_to_single"], [3, 11, 1, "", "exp_bits"], [3, 10, 1, "", "from_array"], [3, 10, 1, "", "from_float"], [3, 10, 1, "", "is_identical"], [3, 11, 1, "", "man_bits"], [3, 11, 1, "", "ndim"], [3, 11, 1, "", "shape"], [3, 10, 1, "", "squeeze"], [3, 10, 1, "", "to_numpy"], [3, 10, 1, "", "transpose"]], "apytypes.APyFloatQuantizationContext": [[5, 10, 1, "", "__init__"]], "apytypes.OverflowMode": [[7, 12, 1, "", "NUMERIC_STD"], [7, 12, 1, "", "SAT"], [7, 12, 1, "", "WRAP"]], "apytypes.QuantizationMode": [[7, 12, 1, "", "JAM"], [7, 12, 1, "", "JAM_UNBIASED"], [7, 12, 1, "", "RND"], [7, 12, 1, "", "RND_CONV"], [7, 12, 1, "", "RND_CONV_ODD"], [7, 12, 1, "", "RND_INF"], [7, 12, 1, "", "RND_MIN_INF"], [7, 12, 1, "", "RND_ZERO"], [7, 12, 1, "", "TIES_AWAY"], [7, 12, 1, "", "TIES_EVEN"], [7, 12, 1, "", "TIES_NEG"], [7, 12, 1, "", "TIES_ODD"], [7, 12, 1, "", "TIES_POS"], [7, 12, 1, "", "TIES_ZERO"], [7, 12, 1, "", "TO_AWAY"], [7, 12, 1, "", "TO_NEG"], [7, 12, 1, "", "TO_POS"], [7, 12, 1, "", "TO_ZERO"], [7, 12, 1, "", "TRN"], [7, 12, 1, "", "TRN_AWAY"], [7, 12, 1, "", "TRN_INF"], [7, 12, 1, "", "TRN_MAG"], [7, 12, 1, "", "TRN_ZERO"]]}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "class", "C++ class"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "templateParam", "C++ template parameter"], "5": ["cpp", "member", "C++ member"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "enumerator", "C++ enumerator"], "8": ["cpp", "type", "C++ type"], "9": ["py", "class", "Python class"], "10": ["py", "method", "Python method"], "11": ["py", "property", "Python property"], "12": ["py", "attribute", "Python attribute"], "13": ["py", "function", "Python function"]}, "objtypes": {"0": "c:macro", "1": "cpp:class", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:templateParam", "5": "cpp:member", "6": "cpp:enum", "7": "cpp:enumerator", "8": "cpp:type", "9": "py:class", "10": "py:method", "11": "py:property", "12": "py:attribute", "13": "py:function"}, "terms": {"": [0, 5, 7, 8, 20], "0": [0, 1, 2, 3, 5, 7, 14, 15, 17, 20, 21, 22, 26, 27, 29, 33], "00": [20, 29, 33], "003": [26, 29, 33], "006": [27, 29, 33], "009": [29, 33], "021222579872958058370179355618716816066859017361262100333952697594702": 0, "0722656": 27, "0b10100100": 0, "0b1_01111_10": 2, "0x11111111": 20, "0x1111111111111111": 20, "0x1234": 5, "0xa4": 0, "1": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21, 26, 27, 31], "10": [0, 1, 2, 3, 5, 7, 11, 26, 27], "100": 5, "10110101": 27, "11": [2, 3, 7], "12": [7, 26], "123": 5, "124": 26, "125": [0, 27], "126": 26, "1376018206341311063223476816643087998331620501540496640": 0, "15": [2, 3, 5], "16": [2, 5, 14, 16], "164": 0, "17": [0, 25, 27], "199": 0, "1_": 0, "2": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 13, 15, 16, 18, 20, 26, 27, 29, 33], "2024": 32, "2048": 22, "21": 5, "210": 26, "23": [2, 3, 26], "234": 0, "25": [0, 1, 2, 3, 26, 27], "257136662269306798708182072507551281664490003441493733349403017982015": 0, "27": 9, "3": [0, 1, 3, 5, 7, 9, 15, 26, 27], "30": [26, 27], "314679773970519809467311447652539955943903993200932791396783892142688": 0, "32": [9, 20], "35": 2, "4": [0, 1, 2, 3, 7, 9, 19, 26, 27, 31], "4503599627370496": 22, "49": [1, 3], "5": [0, 1, 2, 3, 5, 7, 9, 26, 27, 31], "511": 0, "52": [2, 3], "53": 9, "53_": 0, "54": 9, "56238154807942919433116912841796875": 0, "6": [0, 1, 3, 5, 7, 9, 26, 31], "625": 0, "625_": 0, "64": [9, 11, 17, 19, 20], "682": 5, "683": 5, "7": [2, 3, 7, 26, 27], "708904952458654442554723081083186210082207584128592922850820472478833": 0, "75": [0, 2, 26], "754": [2, 3], "8": [0, 2, 3, 7, 15, 20, 27], "875": 0, "9": [7, 8, 26], "90": 31, "A": [1, 3, 5, 9, 25, 26], "As": [7, 31], "At": [11, 13], "By": 31, "For": [3, 7, 9, 13, 16, 19, 25, 26], "If": [1, 2, 3, 4, 5, 13, 14, 16, 20, 24, 25], "In": [0, 2, 11], "It": [9, 21, 31], "No": [9, 11, 13], "On": 20, "One": [20, 26, 31], "Or": 30, "The": [0, 1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 20, 21, 24, 25, 26, 27, 30, 31], "There": 25, "These": [0, 2, 25, 28, 31], "To": [2, 25, 26, 27, 30, 31], "With": 5, "_": [0, 21], "_1": 2, "_2": 2, "_3": 2, "__init__": [0, 1, 2, 3, 5], "__repr__": [13, 16], "__truediv__": 8, "_begin": 19, "_bit": 0, "_capac": 18, "_cast": [14, 16], "_cast_to_doubl": 14, "_checked_cast": 14, "_data": 10, "_exp_limit_bit": 15, "_exp_t_size_bit": 15, "_exp_t_size_byt": 15, "_it": 11, "_items": 10, "_limb_size_bit": 20, "_limb_size_byt": 20, "_man_limit_bit": 15, "_man_t_size_bit": 15, "_man_t_size_byt": 15, "_n_scratch_el": 18, "_ndim": 10, "_nibble_mask": 20, "_nitem": 10, "_ptr": 18, "_scratch_data": 18, "_set_values_from_ndarrai": 16, "_shape": 10, "_size": 18, "_stride": 10, "ab": [11, 13, 14, 16], "about": [3, 31], "abov": 9, "absolut": [11, 13, 16, 20], "ac": 31, "acc_bas": 20, "acceler": 20, "accommod": 11, "account": 15, "accumul": [5, 17, 19], "accur": 9, "activ": 19, "actual": [2, 3, 31], "ad": [1, 3, 14, 25, 26], "add": [7, 19, 20, 25], "add_const_functor": 19, "add_functor": 19, "addit": [5, 11, 19, 25, 26], "adher": 8, "adjust": 2, "affect": 20, "after": [0, 20, 31], "against": 0, "aim": 9, "algorithm": [20, 30, 32], "alia": 7, "align": 0, "all": [1, 3, 4, 5, 8, 10, 13, 14, 16, 19, 20, 25, 28, 33], "alloc": [10, 18], "allocator_trait": 18, "allocator_typ": 18, "allow": [3, 15, 20], "also": [2, 5, 14, 20, 25, 26, 27, 31], "altern": 7, "although": [26, 27], "alwai": [3, 7, 31], "an": [0, 1, 2, 3, 4, 5, 7, 9, 13, 14, 15, 16, 20, 21, 25, 30], "ani": [20, 24, 25, 32], "anoth": [11, 13, 14, 24], "ap": 31, "api": 30, "apy_inlin": 20, "apybuff": [13, 23], "apyfix": [6, 12, 13, 14, 15, 17, 23, 28, 29, 31, 33], "apyfixed_util": 23, "apyfixedaccumulatorcontext": [5, 17], "apyfixedaccumulatoropt": 17, "apyfixedarrai": [4, 6, 8, 11, 23], "apyfixedcastcontext": [5, 17], "apyfixedcastopt": 17, "apyfloat": [3, 5, 6, 11, 15, 16, 17, 23, 25, 28, 29, 33], "apyfloat_util": 23, "apyfloataccumulatorcontext": [5, 17], "apyfloataccumulatoropt": 17, "apyfloatarrai": [4, 5, 6, 8, 14, 23], "apyfloatdata": [14, 16, 17], "apyfloatquantizationcontext": [5, 17], "apyman": 15, "apytyp": [0, 1, 2, 3, 4, 5, 7, 8, 9, 17, 19, 25, 26, 27, 28, 31], "apytypes_common": 23, "apytypes_scratch_vector": 23, "apytypes_simd": 23, "apytypes_unreach": 20, "apytypes_util": 23, "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 16, 20, 25, 26, 27, 28, 31, 32], "arbitrari": [0, 20, 24], "argument": [13, 16, 20, 22, 25], "arithmet": [2, 8, 19, 20, 26, 27, 32], "around": 30, "arrai": [6, 8, 9, 13, 16, 18, 20], "associ": 0, "assum": [14, 15, 20, 21], "attach": 20, "attempt": 19, "attribut": [0, 1, 2, 3, 10, 20], "auto": 18, "autom": 32, "automat": [5, 8, 26, 27], "avail": [24, 31, 32], "averag": [2, 7], "avx2": 19, "awai": [0, 1, 3, 7], "ax": 4, "axi": [1, 3, 4, 13, 16], "b": [0, 1, 2, 5, 26, 27], "back": 18, "base": [0, 2, 8, 10, 11, 12, 14, 15, 16, 21, 31], "bcd": 20, "bcd_limb_vec_div2": 20, "bcd_limb_vec_mul2": 20, "bcd_list": 20, "bcd_mul2": 20, "bcds_to_str": 20, "becam": 8, "becom": 14, "been": [1, 3], "begin": [0, 11, 18, 20, 24], "begin_it": 20, "behav": 0, "behaviour": [11, 20], "being": 4, "below": [5, 7, 31, 32], "benchmark": 9, "best": [19, 31], "better": [3, 25], "between": [7, 8, 31], "bfloat16": [2, 3], "bia": [2, 3, 5, 7, 14, 15, 16, 17, 27], "bias": [2, 16, 17, 22], "bias1": 15, "bias2": 15, "big": 11, "binari": [0, 9, 11, 20, 25, 31], "binary16": [2, 3], "binary32": [2, 3], "binary64": [2, 3], "bit": [1, 3, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 26, 27, 31], "bit_pattern": 0, "bit_pattern_sequ": [1, 13, 24], "bit_pattern_to_string_dec": 11, "bit_width": 20, "bits_from_opt": 20, "bits_from_optional_cast": 20, "bits_last_limb": 24, "bits_to_limb": 20, "bits_to_quant": 15, "bits_to_quantize_dec": 15, "bitwis": 20, "black": 8, "bn": 5, "bool": [0, 1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24], "borrow": 20, "both": [13, 16, 20, 30], "bound": 20, "brain": [14, 16], "broadcast": [8, 13, 16, 23], "broadcast_data_copi": 21, "broadcast_rul": 21, "broadcast_to": [1, 3, 8, 13, 16], "broadcast_to_python": [13, 16], "broadcasting_rul": 21, "buffer": 10, "buffer_res": 10, "bug": [8, 25], "build": [9, 31], "built": [0, 2, 8], "button": 25, "c": [1, 3, 5, 9, 20, 21, 25, 26, 27, 30, 31], "c_contig": [13, 16], "calc_bia": 15, "calc_bias_gener": 15, "calcul": [14, 15], "call": [1, 3, 5, 20], "can": [0, 2, 5, 7, 9, 15, 21, 24, 25, 26, 27, 28, 31], "capac": 18, "carri": [11, 14, 20], "case": [2, 7, 14, 16, 25], "cast": [0, 1, 8, 11, 13, 14, 16, 17, 20, 24, 26, 27], "cast_from_doubl": 14, "cast_mantissa": 14, "cast_mantissa_short": 14, "cast_mantissa_subnorm": 14, "cast_no_overflow": 11, "cast_no_qu": [14, 16], "cast_to_bfloat16": [2, 3, 14, 16], "cast_to_doubl": [2, 3, 14, 16], "cast_to_half": [2, 3, 14, 16], "cast_to_singl": [2, 3, 14, 16], "cbegin": 18, "cbegin_it": 20, "cd": 25, "ceil": 20, "cend": 18, "cend_it": 20, "chang": [5, 14, 16, 25, 26, 27, 31], "changelog": 30, "check": [15, 20], "check_exponent_format": 15, "check_mantissa_format": 15, "choic": 9, "ci": [8, 31], "circumst": 20, "class": [0, 1, 2, 3, 5, 7, 8, 10, 11, 13, 14, 16, 17, 18, 20, 24, 25, 26, 27], "click": 25, "closest": [0, 1], "cmake": 25, "code": [5, 8, 9, 20, 25, 26, 27, 28, 31], "com": [25, 30], "comma": 8, "commit": [8, 31], "compar": [2, 9, 14, 31], "comparison": [8, 26, 27, 30], "compat": [8, 10], "compet": 31, "compil": [20, 25, 31], "complement": [0, 7, 20], "complet": 0, "comput": [20, 21, 26, 30, 32], "configur": [0, 2, 3, 26, 27], "consid": [0, 1, 2, 3, 13, 14, 16, 20, 26, 27], "const": [10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24], "const_iter": [18, 19], "const_point": 18, "const_refer": 18, "const_reverse_iter": 18, "constant": [12, 19], "constexpr": [15, 20, 22], "construct": [11, 13, 20], "construct_inf": 14, "construct_nan": 14, "construct_zero": 14, "constructor": [10, 11, 13, 14, 16], "contact": 32, "contain": [19, 20, 25], "context": [6, 7, 20], "contextmanag": 17, "continu": 31, "contribut": 25, "control": 20, "conveni": [11, 12, 14, 16, 26, 27], "converg": 7, "convers": 20, "convert": [9, 11, 13, 14, 16, 20, 24, 26, 27], "copi": [1, 3, 11, 13, 16, 21, 25], "core": 14, "correspond": [2, 3, 7, 14, 16, 27], "count": [18, 20], "count_trailing_bit": 20, "cpp_shape_from_python_shape_lik": 20, "crash": 8, "crbegin": 18, "creat": [0, 1, 2, 3, 9, 10, 11, 13, 14, 16, 20, 25, 27, 31], "create_functor_from_func": [19, 20], "create_in_plac": [14, 16], "creation": 24, "crend": 18, "criteria": 31, "current": [7, 31], "current_bit": 20, "current_int_bit": 20, "current_mod": 17, "custom": [5, 9, 31], "d": [2, 5, 13, 16, 22], "dabbl": 20, "data": [4, 10, 11, 13, 14, 16, 20, 21, 30, 32], "data_arrai": 20, "datatyp": [15, 25], "deal": [0, 1, 2, 3], "decim": [11, 20], "declar": 19, "decreas": 14, "dedic": 25, "deduct": 20, "default": [0, 2, 5, 11, 13, 17], "defin": [2, 20, 24], "delet": [11, 13], "denomin": [8, 19], "depend": [7, 8, 14, 25, 26, 31], "depth": 24, "deriv": 7, "describ": 0, "design": [9, 30, 31, 32], "destin": 21, "determin": 0, "develop": 30, "deviat": [2, 25], "differ": [0, 2, 7, 26, 27, 31], "difference_typ": 18, "digit": 20, "dimens": [1, 3, 4, 13, 16], "dimension": 8, "direct": 3, "directli": 31, "directori": 25, "distribut": 7, "divid": [19, 20], "divis": [7, 11, 16, 30], "do": [2, 20, 25, 26, 27, 30, 31], "do_dabbl": 20, "do_doubl": 20, "do_infin": 15, "do_reverse_dabbl": 20, "do_reverse_doubl": 20, "docstr": [8, 25], "doctest": 8, "document": [8, 9, 25, 31], "doe": [14, 16, 24, 26], "doi": 32, "domain": 22, "domain_error": [20, 24], "don": 20, "done": 25, "dot": [7, 20], "doubl": [2, 3, 9, 11, 12, 13, 14, 16, 20, 22], "double_dabbl": 20, "double_seq": [13, 16], "doubledabblelist": 20, "download": [26, 27, 28], "dst": 21, "dst_begin": 19, "dst_shape": 21, "dtype": [1, 3], "dure": [11, 13, 25], "dynam": 31, "e": [1, 2, 3, 9, 11, 14, 16, 20, 21, 31], "each": [7, 13, 19, 20], "effect": [7, 31, 32], "effici": 32, "effort": 19, "either": [15, 25, 26, 27], "element": [1, 3, 11, 13, 16, 19, 20], "elementari": 0, "elementwis": [13, 16], "empti": [11, 13, 21], "end": [0, 11, 18, 20, 24, 26, 27], "end_it": 20, "endian": 22, "engin": [17, 30], "enhanc": [25, 30], "enough": [11, 21], "ensur": 0, "enter_context": 17, "entir": [14, 16], "entri": 4, "enum": 17, "enumer": 17, "equal": [0, 1, 11, 20], "equival": [1, 3, 15, 26, 27], "error": 7, "essenti": 9, "etc": [30, 31], "evalu": 20, "even": [2, 5, 7], "everi": [0, 9, 20, 24, 31, 32], "evolv": 31, "exact": [0, 1, 3, 13, 16], "exactli": [0, 1, 3, 7, 11, 13, 16, 20], "exampl": [0, 1, 2, 3, 5, 9, 19, 25, 26, 27, 29, 30, 33], "examples_jupyt": 28, "examples_python": 28, "except": [7, 24], "execut": [25, 29, 31, 33], "exit": 5, "exit_context": 17, "exp": [2, 3, 5, 14, 15, 17, 22, 27], "exp_bit": [2, 3, 5, 14, 15, 16, 17, 27], "exp_bits1": 15, "exp_bits2": 15, "exp_of_doubl": 22, "exp_seq": 16, "exp_t": [14, 15, 16, 17], "expand": [25, 31], "expect": 31, "explicit": [11, 13, 14, 16, 18], "explicitli": [0, 2, 5], "expon": [2, 3, 9, 14, 15, 16, 17, 22, 27], "expos": [11, 13, 14, 16], "express": [0, 26, 27], "f": [2, 3], "factori": [14, 16], "fallback": 5, "fals": [0, 2, 3, 18, 20, 24, 27], "far": 31, "fast": [12, 15], "faster": [1, 31], "featur": [2, 3], "few": 25, "field": [2, 10, 14, 16], "figur": [7, 31], "file": [8, 19, 29, 33], "finit": [30, 32], "first": [18, 20, 24, 25], "fix": [1, 7, 11, 12, 13, 14, 15, 30, 32], "fixedpoint": 9, "flexibl": [30, 32], "float": [0, 1, 2, 3, 5, 8, 11, 14, 15, 16, 26, 27, 30, 32], "float64": [1, 3], "float_sequ": 1, "flow": 20, "fmt": 20, "focu": 30, "fold": 20, "fold_shap": 20, "follow": [0, 7], "footnot": 9, "format": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 16, 20, 26, 27], "formula": 2, "found": 25, "fpbinari": 9, "frac": [0, 2], "frac_bit": [0, 1, 5, 11, 12, 13, 17, 20, 26], "fraction": [0, 1, 7, 11, 13, 26, 31], "frequent": 25, "friend": 11, "from": [4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 17, 19, 20, 21, 22, 25, 26, 27, 29, 30, 33], "from_arrai": [1, 3, 13, 16], "from_bit": [2, 14, 27], "from_doubl": [11, 13, 14, 16], "from_float": [0, 1, 2, 3, 5, 26, 27], "from_integ": [11, 14], "from_nibble_list": 20, "from_numb": [11, 14], "from_str": [0, 11, 26], "from_unspecified_integ": 11, "front": 20, "full": [26, 27], "fulli": [14, 16], "func": 21, "func_nam": 20, "function": [3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24], "functor": 20, "functor_nam": 20, "further": [9, 20, 21], "fx": [0, 15], "fx_a": 0, "fx_b": 0, "fx_one": 12, "fxpmath": 9, "g": [1, 9, 20, 31], "galleri": [26, 27, 28, 33], "gener": [0, 1, 2, 8, 15, 25, 26, 27, 28, 31], "get": [7, 9, 14, 15, 17, 21], "get_accumulator_mode_fix": 17, "get_accumulator_mode_float": 17, "get_bia": [14, 16], "get_bit": [14, 16], "get_data": 14, "get_data_from_doubl": 12, "get_exp": 14, "get_exp_bit": [14, 16], "get_fixed_cast_mod": 17, "get_float_quantization_mod": [2, 3, 7, 17], "get_float_quantization_se": [7, 17], "get_item": [13, 16], "get_lsb": 11, "get_man": 14, "get_man_bit": [14, 16], "get_ndim": 16, "get_ob_digit": 24, "get_py_buff": 10, "get_shap": 16, "get_sign": 14, "get_simd_version_str": 19, "get_siz": 16, "git": [25, 30], "github": [25, 30], "give": 9, "given": [2, 14, 16], "global": [2, 3, 5, 17], "gmp": [20, 24], "gmpy2": 9, "go": [25, 26, 27, 31], "graph": 31, "greater": [2, 11, 13, 14, 16, 20], "guarante": 15, "gustafsson": 32, "h": [23, 25], "ha": [0, 1, 3, 11, 13, 14, 16, 21], "half": [2, 3, 7, 14, 16], "handl": 6, "happen": [14, 16, 25], "hardwar": [2, 9, 31], "have": [0, 1, 2, 3, 13, 16, 20, 30, 32], "helper": [9, 20], "henc": 31, "henriksson": 32, "here": [25, 31, 32], "hidden": [2, 3, 17, 22, 27], "higher": [1, 3], "histogram": 7, "hold": 9, "hopefulli": 31, "how": [20, 28], "howev": [5, 9, 25, 26, 27, 31], "http": [25, 30], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 20, 21, 24, 25, 26, 27, 30, 31], "ident": [0, 1, 2, 3, 11, 13, 14, 16], "idx": [13, 16], "ieee": [2, 3, 7, 14, 16, 32], "ieee754": 23, "ieee_bia": 14, "illustr": 7, "implement": [1, 2, 3, 7, 9], "import": [0, 1, 2, 3, 5, 26, 27], "improv": 31, "includ": [9, 20, 26], "increas": 14, "increment": 11, "increment_lsb": 11, "index": [20, 21, 30], "indic": [7, 20], "inf": 14, "infer": 0, "infin": [1, 2, 3, 7, 8, 14, 15], "infinit": [2, 14], "inform": [3, 19, 25], "inherit": 10, "init": 18, "initi": [0, 1, 2, 3, 7, 11, 13, 14, 16], "initializer_list": [18, 20], "inlin": [10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24], "inner": 5, "input": [0, 1, 2, 4, 13, 14, 16], "inputit": 18, "instal": 30, "instanc": 0, "instead": [8, 25], "instruct": [0, 30], "int": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27], "int64_t": [14, 22], "int_": [11, 13, 14, 16, 20, 24], "int_bit": [0, 1, 5, 11, 13, 17, 20, 26, 31], "int_typ": 20, "integ": [0, 1, 3, 7, 11, 12, 13, 14, 15, 17, 20, 24, 26, 27, 31], "integr": [2, 3], "intend": [20, 25], "interfac": [3, 14, 16], "intermedi": [7, 9], "intern": [11, 14, 16], "interpret": [1, 3], "intrins": 19, "involv": [27, 31], "ipow": [12, 15], "ipynb": [26, 27], "is_broadcast": 21, "is_finit": [2, 14], "is_ident": [0, 1, 2, 3, 11, 13, 14, 16], "is_inf": [2, 14], "is_max_expon": 14, "is_nan": [2, 14], "is_neg": [11, 24], "is_norm": [2, 14], "is_posit": 11, "is_subnorm": [2, 14], "is_valid_decimal_numeric_str": 20, "is_zero": [0, 2, 11, 14], "it_begin": 20, "it_end": 20, "item": [13, 16], "items": [10, 21], "iter": [11, 18, 19, 20, 24], "iterator_categori": 18, "its": [0, 2, 3, 10, 20], "jam": [7, 17], "jam_unbias": [7, 17], "jupyt": [26, 27, 28, 30], "k": 0, "keep": [7, 8], "kei": [25, 31], "know": 31, "known": [11, 14, 16], "larg": 14, "larger": [0, 14, 15], "largest": [2, 14], "last": [13, 16, 18], "latest": 30, "latex": [11, 14], "ldot": 0, "lead": [0, 11, 14, 20], "leading_fractional_zero": [0, 11], "leading_on": [0, 11, 20], "leading_sign": [0, 11], "leading_zero": [0, 11, 20], "leading_zeros_apyfix": 15, "least": [11, 20, 24, 25], "left": [2, 11, 15, 19, 20], "len": 20, "length": [4, 9, 13, 15, 16, 20, 26, 27, 30, 31, 32], "lesast": [11, 13], "less": [2, 11, 14, 15, 20], "let": [26, 27], "level": 25, "lh": 3, "lib": 25, "librari": [30, 31], "like": [0, 2, 3, 14, 16, 30, 31, 32], "limb": [8, 11, 12, 19, 20, 24], "limb_out": 20, "limb_shift": 20, "limb_skip": 20, "limb_vec": 20, "limb_vector_ab": 20, "limb_vector_add_pow2": 20, "limb_vector_all_on": 20, "limb_vector_all_zero": 20, "limb_vector_asr": 20, "limb_vector_from_uint64_t": 20, "limb_vector_gte_pow2": 20, "limb_vector_is_neg": 20, "limb_vector_is_zero": 20, "limb_vector_leading_on": 20, "limb_vector_leading_zero": 20, "limb_vector_lsl": 20, "limb_vector_lsl_inn": 20, "limb_vector_lsr": 20, "limb_vector_neg": 20, "limb_vector_or_reduc": 20, "limb_vector_set_bit": 20, "limb_vector_sub_pow2": 20, "limb_vector_test_bit": 20, "limit": [9, 15], "lindberg": 32, "line": 7, "link\u00f6p": 30, "lint": 8, "list": [1, 9, 20, 31, 32], "liter": 20, "littl": 22, "liu": 32, "locat": [0, 20], "log2": 20, "logic": 20, "long": [8, 11, 14, 24, 25], "look": 30, "loss": 10, "lower": 13, "lsb": [11, 20], "m": [5, 25, 32], "machin": 22, "macro": 20, "made": 8, "magnitud": 7, "mai": [9, 13, 31], "main": [11, 30], "make": [11, 15, 19, 20, 25, 26, 31], "man": [2, 3, 5, 14, 15, 17, 22, 27], "man_bit": [2, 3, 5, 14, 15, 16, 17, 27], "man_bits_delta": 14, "man_msb_const": 15, "man_of_doubl": 22, "man_seq": 16, "man_t": [14, 15, 17], "mani": [0, 20, 24], "manipul": 8, "manner": 24, "mantissa": [2, 3, 9, 14, 15, 16, 17, 22, 27], "mark": 20, "mask": 20, "match": 24, "mathemat": 8, "mathrm": 0, "matmul": [13, 16], "matplotlib": 3, "matric": [13, 16], "matrix": [1, 3, 5, 13, 16], "max": 0, "max_exp": 15, "maximum": [2, 9, 15, 26, 27], "mb": [29, 33], "mean": [2, 3, 9, 13], "mem": [29, 33], "member": [16, 17, 18, 20], "method": [0, 1, 5, 8, 11, 12, 13, 14, 16, 20, 25, 26, 27], "minu": 20, "minut": [26, 27], "miss": 8, "mode": [0, 1, 2, 3, 5, 14, 15, 16, 17], "modul": 30, "more": [0, 7, 20, 25], "most": [3, 20, 25], "mostli": 14, "move": [11, 31], "mp_limb_t": [11, 12, 13, 19, 20, 24], "mpn_add_n": 20, "mpn_add_n_functor": 20, "mpn_sub_n": 20, "mpn_sub_n_functor": 20, "msg": 20, "much": [3, 31], "multidimension": 3, "multipl": [5, 7, 8, 9, 11, 13, 16, 17, 19, 20, 26], "multipli": [9, 19, 20], "must": [0, 1, 15, 20, 25, 26, 31], "n": [0, 9, 11, 12, 14, 15, 18, 20], "n_min_limb": 24, "name": [2, 25], "namespac": 19, "nan": [2, 14], "nanobind": [8, 11, 14, 16, 20, 24], "narrow": [10, 13], "nativ": 22, "nb": [11, 13, 14, 16, 20, 24], "ndarrai": [1, 3, 13, 16], "ndim": [1, 3, 13], "nearest": [2, 5, 7], "neat": 20, "need": [0, 15, 25], "neg": [2, 3, 7, 11, 14, 20, 24], "negat": [11, 13], "nest": [5, 24], "neumann": 7, "never": 0, "new": [1, 3, 10, 13, 15, 16, 24, 31], "new_bit": 20, "new_exp_bit": 15, "new_mod": 17, "new_se": 17, "new_shap": [13, 16], "new_sign": 14, "next": 25, "next_down": [2, 8, 14], "next_up": [2, 8, 14], "nibbl": 20, "nibble_data": 20, "nibble_list": 20, "nibble_width": 20, "nicer": 30, "noexcept": [11, 13, 18], "non": [2, 3, 20], "none": [0, 1, 2, 3, 4, 5, 7, 9], "normal": [2, 5, 14, 15, 20], "notabl": 8, "note": [2, 7, 9, 31], "notebook": [26, 27, 28, 30], "notimplementedexcept": [1, 3, 20], "now": [25, 30, 31], "np": [1, 3, 5], "nullopt": [11, 13, 14, 16, 17, 20, 24], "num": 22, "number": [0, 1, 2, 3, 7, 8, 9, 11, 13, 14, 15, 16, 17, 19, 20, 26, 27, 30, 31], "number_sequ": 3, "numer": [0, 19, 20], "numeric_std": [7, 17], "numfi": 9, "numpi": [5, 8, 9, 13, 16, 31], "o": 32, "obj": 24, "object": [0, 1, 2, 3, 11, 13, 14, 16, 20, 24, 26, 27, 31], "occur": 0, "odd": 7, "onc": [20, 25], "one": [0, 1, 2, 3, 4, 5, 7, 11, 12, 14, 15, 17, 20, 22, 27, 31], "ones": [0, 11, 20], "onli": [0, 1, 2, 3, 12, 13, 14, 15, 16, 25, 31], "onto": 20, "open": [25, 32], "oper": [2, 5, 11, 13, 14, 16, 17, 18, 19, 26, 27, 31], "operand": [2, 5, 7, 26], "optim": [9, 20, 31], "option": [0, 1, 2, 3, 4, 5, 11, 13, 14, 16, 17, 20, 24], "order": [1, 3, 21], "ordinari": [0, 13, 16], "oscar": 32, "other": [7, 11, 13, 14, 16, 17, 18], "otherwis": [0, 15], "out": [8, 11, 20, 26], "output": [20, 30], "outsid": 20, "over": [9, 20, 25, 31], "overflow": [0, 1, 5, 6, 11, 13, 17, 26], "overflowmod": [0, 1, 5, 7, 11, 13, 17], "overhead": 31, "overrid": 17, "own": 25, "pack": 14, "packag": [9, 25, 30], "page": 30, "pair": 11, "parallel": 19, "paramet": [0, 1, 2, 3, 4, 7, 20], "part": [22, 31], "path": [20, 25], "pattern": [11, 13, 14, 26, 27], "payload": 14, "per": 20, "perform": [0, 1, 2, 3, 5, 13, 16, 19, 20, 21, 30], "pip": [25, 30], "place": [11, 13, 20], "plai": 30, "pleas": 32, "plot": [3, 7], "po": 18, "point": [1, 2, 3, 5, 8, 11, 12, 13, 14, 15, 16, 26, 27, 30, 32], "pointer": 18, "pop_back": 18, "posit": [2, 3, 7, 11, 14, 20], "positive_greater_than_equal_pow2": 11, "possibl": [2, 3, 5, 9], "possibli": 24, "potenti": 14, "pow": 14, "power": [11, 12, 14, 15, 20], "pown": 14, "ppint": 3, "practic": 31, "pre": 8, "precis": [0, 2, 3, 14, 16], "prefer": [3, 5, 25, 31], "prev_mod": 17, "prev_se": 17, "previous_mod": 17, "primari": [0, 1, 2, 3], "privat": [17, 18], "process": 25, "processor": 31, "product": 5, "program": 8, "project": [8, 25], "propor": 20, "protect": 10, "protocol": 10, "provid": [2, 3, 9, 20, 25, 26, 27, 30], "ptr": 18, "ptr_t": 18, "ptrdiff_t": 18, "public": [11, 13, 14, 16, 17, 18, 20, 30], "publicli": 11, "pure": 31, "purpos": 30, "push_back": 18, "py": [25, 26, 27, 29, 33], "py_buff": 10, "py_long_int": 24, "py_obj": [11, 14], "py_seq": 24, "pyfixp": 9, "pylong_digitcount": 24, "pylong_isneg": 24, "pylong_new": 24, "pylong_setsignanddigitcount": 24, "pylongobject": 24, "pytest": 25, "python": [0, 2, 8, 9, 10, 11, 13, 14, 16, 20, 24, 25, 26, 27, 28, 30, 31, 32], "python_digit": 24, "python_limb_vec_to_long": 24, "python_long_int_bit_pattern": [11, 14], "python_long_is_neg": 24, "python_long_to_limb_vec": 24, "python_sequence_extract_shap": 24, "python_sequence_walk": 24, "python_util": 23, "pytyp": 24, "quantiz": [0, 1, 2, 3, 5, 6, 8, 9, 11, 13, 14, 15, 16, 17], "quantization_se": 5, "quantizationmod": [0, 1, 2, 3, 5, 7, 11, 13, 14, 15, 16, 17], "quantize_apymantissa": 15, "quantize_close_to_zero": 15, "quantize_mantissa": 15, "quickli": 20, "rais": [1, 3, 4, 24], "random": [5, 17], "random_access_const_iter": 21, "random_access_iter": [20, 21, 24], "random_access_iterator_in": 20, "random_access_iterator_out": 20, "random_access_iterator_tag": 18, "random_access_vector_typ": 18, "random_number_float": 17, "randomli": 25, "rang": 22, "rbegin": 18, "rdiv": 13, "read": 20, "recommend": [26, 27], "red": 7, "reduc": 20, "refer": 18, "region": 19, "regular": 25, "reinstal": 25, "releas": 32, "relev": 9, "remov": [1, 3, 4, 7, 20], "rend": [18, 20], "report": 25, "repr": [11, 13, 14, 16], "repres": [0, 1, 3, 13, 16, 26], "represent": [8, 9, 11, 14], "requir": [20, 25], "res_it": 20, "res_out": 20, "reshap": [13, 16], "resiz": [7, 9, 10, 16, 18], "respect": [2, 26], "restrict": 0, "result": [0, 1, 2, 3, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 24, 26, 27], "retriev": [0, 10, 11, 13, 14, 16, 17, 19, 20, 24], "return": [0, 1, 2, 3, 4, 7, 11, 13, 16, 19, 20, 21, 22, 24], "revers": 20, "reverse_double_dabbl": 20, "reverse_iter": 18, "revert": 5, "rh": [11, 13, 14, 16], "right": [2, 11, 20], "rnd": [0, 7, 17], "rnd_conv": [7, 17], "rnd_conv_odd": [7, 17], "rnd_inf": [7, 17], "rnd_min_inf": [7, 17], "rnd_zero": [7, 17], "root": 25, "round": [0, 1, 3, 5, 7, 9], "rsub": 13, "rtruediv": 16, "ruff": 8, "run": [8, 26, 27, 31], "run_berkeley_cas": 25, "runtim": 19, "same": [0, 1, 2, 3, 11, 13, 14, 16, 26, 27], "same_type_a": 16, "sat": [7, 17], "satur": [0, 1, 7, 14, 15], "scalar": [0, 2, 3, 8, 16], "scratchvector": 18, "script": [25, 26, 27], "se": 32, "search": [24, 30], "second": [20, 26, 27], "section": [5, 25, 31], "see": [2, 3, 5, 25, 31], "seed": [5, 7, 17], "seen": 5, "select": [4, 31], "self": [0, 1, 2, 3, 5], "semant": 8, "sens": 31, "sequenc": [1, 3, 13, 16, 24], "set": [0, 1, 5, 7, 11, 13, 14, 16, 17, 20, 22, 24, 25, 30], "set_data": 14, "set_exp_of_doubl": 22, "set_float_quantization_mod": [5, 7, 17], "set_float_quantization_se": [7, 17], "set_from_doubl": 11, "set_from_str": 11, "set_from_string_dec": 11, "set_from_string_hex": 11, "set_from_string_oct": 11, "set_man_of_doubl": 22, "set_sign": 14, "set_sign_of_doubl": 22, "set_to_inf": 14, "set_to_nan": 14, "set_to_zero": 14, "sh": 25, "shape": [4, 10, 13, 16, 20, 21, 24], "shape1": 21, "shape2": 21, "share": 2, "shift": [11, 15, 19, 20], "shift_add_const_functor": 19, "shift_add_functor": 19, "shift_amnt": [12, 20], "shift_sub_const_functor": 19, "shift_sub_functor": 19, "shift_val": [11, 13], "shorter": [9, 14, 16], "should": [3, 15, 25, 31], "show": [0, 7], "sign": [0, 2, 3, 5, 11, 14, 15, 16, 17, 19, 20, 22, 27], "sign_of_doubl": 22, "sign_seq": 16, "signific": [11, 20, 31], "significand": 22, "significant_limb": 20, "simd": 19, "similar": 2, "similarli": 2, "simpli": 9, "simplifi": [11, 14, 30], "simul": [5, 9, 30, 32], "sinc": 9, "singl": [1, 2, 3, 8, 13, 14, 16, 26, 31], "size": [1, 3, 5, 13, 15, 16, 18, 19, 20, 21, 24], "size_t": [10, 11, 13, 15, 16, 18, 19, 20, 21, 24], "size_typ": 18, "sizeof": [15, 20], "slide": 32, "slower": 31, "smaller": [8, 20], "smallest": [2, 14, 21], "smallest_broadcastable_shap": 21, "so": [5, 15, 25, 31], "some": [25, 31], "someth": 25, "sourc": [21, 25, 26, 27, 28, 30, 32], "space": [21, 25], "special": [12, 18, 20], "specif": [0, 1, 5, 11], "specifi": [0, 1, 5, 11, 13, 14, 20], "speed": 31, "spfpm": 9, "sphinx": [26, 27, 28], "spyder": 30, "squar": [12, 15], "squeez": [1, 3, 4, 8, 13, 16], "src": 21, "src1_begin": 19, "src1_shift_amount": 19, "src2_begin": 19, "src2_shift_amount": 19, "src_shape": 21, "src_to_dst_idx": 21, "ssh": 25, "stack": [13, 16], "stand": 25, "standard": [2, 26, 27], "start": [20, 25], "state": 20, "static": [0, 5, 11, 13, 14, 15, 16, 20, 21, 22, 24], "std": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24], "sticky_const": 15, "still": [2, 31], "stoch_equ": 17, "stoch_weight": [5, 15, 17], "stochast": [5, 7, 9, 17], "store": [0, 1, 2, 3, 13, 14, 15, 16, 19, 20, 21], "str": [0, 11, 14, 20, 26, 27], "strictli": 15, "stride": [20, 21], "strides_from_shap": 20, "string": [0, 11, 13, 14, 16, 19, 20, 26, 27], "string_trim_leading_whitespac": 20, "string_trim_trailing_whitespac": 20, "string_trim_whitespac": 20, "string_trim_zero": 20, "string_valu": [0, 11], "stringstream": 20, "struct": [14, 17, 20], "structur": 10, "stub": 8, "stubgen": 25, "style": 21, "sub_const_functor": 19, "sub_functor": 19, "subclass": 17, "subnorm": [2, 8, 14], "subset": 4, "subtract": [2, 7, 11, 19, 20, 26], "suggest": 25, "sum": 26, "summat": 5, "suppli": 26, "support": [2, 3, 8, 9, 13, 19, 25, 26, 27, 31], "sure": [25, 26], "sviteratorbas": 18, "sweden": 30, "symp": 32, "system": 20, "t": [1, 3, 5, 10, 18, 20, 24, 32], "tabl": [0, 7], "take": [16, 20], "taken": [1, 3, 15], "target": [2, 14, 16, 19, 22], "target_is_little_endian": 22, "templat": [10, 11, 18, 20, 21, 24, 31], "tensor": [1, 3, 13, 16], "term": 27, "termin": 30, "test": [0, 1, 2, 3, 11, 13, 14, 16, 20, 21, 22, 24], "testfloat_gen": 25, "texttt": 2, "th": 20, "than": [0, 1, 11, 13, 15, 16, 20], "thei": [0, 1, 2, 3, 13, 16, 31], "them": 24, "therefor": 31, "thi": [0, 1, 2, 3, 7, 8, 9, 13, 15, 16, 19, 20, 21, 25, 26, 27, 31], "thing": 25, "though": 31, "three": [0, 1, 2, 7, 11, 20, 26], "through": [0, 20, 25], "throw": [11, 15, 20], "thu": 2, "ti": [0, 1, 2, 3, 5, 7], "ties_awai": 7, "ties_even": [2, 5, 7], "ties_neg": 7, "ties_odd": 7, "ties_po": 7, "ties_zero": 7, "time": [2, 9, 25, 26, 27, 31], "to_awai": 7, "to_bit": [0, 2, 11, 14], "to_doubl": [11, 14], "to_fix": 14, "to_neg": 7, "to_nibble_list": 20, "to_numpi": [1, 3, 13, 16], "to_po": 7, "to_str": 11, "to_string_dec": 11, "to_string_hex": 11, "to_string_oct": 11, "to_zero": [5, 7], "togeth": 21, "too": 14, "tool": 30, "total": [0, 1, 2, 3, 9, 17, 26, 27, 29, 33], "touch": 10, "toward": [5, 7], "track": 31, "trail": 20, "translat": 15, "translate_quantization_mod": 15, "transpos": [1, 3, 13, 16], "transposit": [3, 13, 16], "treat": [13, 16], "trim": 20, "trn": [0, 7, 11, 17], "trn_awai": [7, 17], "trn_inf": [7, 17], "trn_mag": [7, 17], "trn_zero": [7, 17], "true": [0, 2, 3, 14, 20, 21, 26, 27], "true_exp": [2, 14], "true_man": [2, 14], "true_sign": 2, "truncat": [0, 7], "tupl": [1, 3, 4, 8, 13, 16, 20], "tuple_string_from_vec": 20, "two": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 20, 26], "twos_complement_overflow": 20, "type": [18, 20, 22, 24, 30, 31, 32], "type_pun_double_to_uint64_t": 22, "type_pun_uint64_t_to_doubl": 22, "typedef": 17, "typenam": [10, 11, 18, 20, 21, 24], "uint32_t": 17, "uint64_t": [11, 17, 20, 22], "uint64_t_from_limb_vector": 20, "uint8_t": [14, 15, 16, 17, 20], "un": 22, "unari": [11, 13], "unbias": 7, "uncondition": 20, "undefin": [11, 20], "under": 20, "underbrac": 0, "underli": [0, 10, 11, 13, 14, 26], "unexpect": [26, 27], "uniform": 5, "uniqu": 0, "univers": 30, "unless": 0, "unlimit": 9, "unnecessari": 20, "unreach": 20, "unsign": [12, 15, 19, 20, 24], "up": [20, 25, 30], "updat": [8, 9, 14, 31], "upon": 5, "upper": 20, "us": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 30], "usag": 25, "user": [0, 20, 25], "v1": 8, "v2": 8, "valid": 20, "valu": [0, 1, 3, 7, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22], "value_error": [11, 20], "value_typ": 18, "valueerror": 4, "vari": 9, "variabl": [15, 20], "variant": [13, 16, 20], "variat": 31, "vec": [11, 20], "vec_is_sign": 24, "vec_siz": 20, "vector": [10, 11, 12, 13, 16, 18, 19, 20, 21, 24], "vector_add": 19, "vector_add_const": 19, "vector_mul": 19, "vector_mul_const": 19, "vector_multiply_accumul": 19, "vector_rdiv_const_sign": 19, "vector_rsub_const": 19, "vector_s": 11, "vector_shift_add": 19, "vector_shift_add_const": 19, "vector_shift_div_const_sign": 19, "vector_shift_div_sign": 19, "vector_shift_sub": 19, "vector_shift_sub_const": 19, "vector_sub": 19, "vector_sub_const": 19, "vector_typ": 20, "verbos": 11, "veri": [25, 31], "version": [1, 3, 8, 25, 30], "via": 24, "virtual": 17, "void": [10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22], "von": 7, "wai": [0, 31], "walk": 24, "want": 25, "weight": 21, "welcom": 25, "well": [7, 9], "were": 7, "what": 7, "when": [0, 1, 2, 3, 5, 8, 11, 12, 14, 15, 16, 20, 25, 31], "where": [2, 7, 8, 13, 14, 16, 20, 25], "which": [5, 7, 8, 9, 26, 27], "while": [26, 27], "whitespac": 20, "wider": [5, 11], "width": [2, 14, 16, 20], "within": [0, 5], "without": [2, 3, 10, 11, 14, 20, 22, 27, 30], "word": [9, 13, 15, 20, 26, 27, 30, 31, 32], "wordlength": [9, 27], "work": [3, 25], "workshop": 32, "would": [2, 26, 27, 32], "wrap": [0, 7, 17, 24], "written": [9, 30], "x": [1, 3, 7, 14, 19, 20], "x_": 0, "xor": 7, "y": [7, 14], "ye": 9, "yellow": 7, "yield": [26, 27], "you": [25, 32], "your": 25, "zenodo": 32, "zero": [0, 1, 2, 3, 5, 8, 11, 13, 14, 20], "zip": 28}, "titles": ["<code class=\"docutils literal notranslate\"><span class=\"pre\">APyFixed</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">APyFixedArray</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">APyFloat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">APyFloatArray</span></code>", "Array functions", "Context handling", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apytypes</span></code> Python package", "Quantization and overflow handling", "Changelog", "Comparison", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apybuffer.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">APyFixed</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apyfixed_util.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">APyFixedArray</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">APyFloat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apyfloat_util.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">APyFloatArray</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apytypes_common.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apytypes_scratch_vector.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apytypes_simd.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apytypes_util.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">broadcast.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ieee754.h</span></code>", "APyTypes C++ API", "<code class=\"docutils literal notranslate\"><span class=\"pre\">python_util.h</span></code>", "Development", "APyFixed", "APyFloat", "Examples", "Computation times", "Welcome to APyTypes\u2019 documentation!", "Computational performance", "Publications", "Computation times"], "titleterms": {"0": 8, "05": 8, "1": 8, "15": 8, "2024": 8, "ad": 8, "addit": 7, "alias": 7, "api": 23, "apybuff": 10, "apyfix": [0, 11, 26], "apyfixed_util": 12, "apyfixedarrai": [1, 13], "apyfloat": [2, 14, 27], "apyfloat_util": 15, "apyfloatarrai": [3, 16], "apytyp": [6, 23, 30, 32], "apytypes_common": 17, "apytypes_scratch_vector": 18, "apytypes_simd": 19, "apytypes_util": 20, "arithmet": 0, "arrai": [1, 3, 4, 31], "berkelei": 25, "bit": [0, 2], "broadcast": [1, 3, 21], "c": 23, "calcul": 2, "cast": [2, 3], "chang": [0, 1, 2, 3, 8], "changelog": 8, "cite": 32, "clone": 25, "comparison": [0, 1, 2, 3, 9], "comput": [29, 31, 33], "constructor": [0, 1, 2, 3], "content": [6, 23, 30], "context": 5, "conveni": [2, 3], "convert": [1, 3], "creation": [0, 1, 2, 3], "develop": 25, "document": 30, "exampl": 28, "file": 25, "fix": [0, 8, 9, 31], "float": [7, 9, 25], "fork": 25, "from": [0, 1, 2, 3], "function": [4, 7], "get": [0, 2], "h": [10, 12, 15, 17, 18, 19, 20, 21, 22, 24], "handl": [5, 7], "how": 32, "ieee754": 22, "indic": 30, "inform": [0, 2], "inplac": 31, "instal": 25, "length": [0, 1, 2, 3], "librari": 9, "manipul": [1, 3], "matrix": 9, "method": [2, 3], "mode": 7, "numpi": [1, 3], "oper": 0, "other": [0, 1, 2, 3], "overflow": 7, "packag": 6, "pattern": [0, 2], "perform": [9, 31], "point": [0, 7, 9, 25, 31], "possibl": 31, "pre": 25, "properti": [0, 1, 2, 3], "public": 32, "python": 6, "python_util": 24, "quantiz": 7, "remov": 8, "repositori": 25, "represent": [0, 2], "requisit": 25, "run": 25, "shape": [1, 3], "shift": 31, "sign": 7, "stub": 25, "suit": 25, "tabl": 30, "test": 25, "testfloat": 25, "time": [29, 33], "tranposit": 3, "transposit": 1, "type": [0, 1, 2, 3], "unreleas": 8, "updat": 25, "us": [31, 32], "util": 7, "v": 25, "valu": 2, "welcom": 30, "word": [0, 1, 2, 3], "zero": 7}})